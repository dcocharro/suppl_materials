<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="2977.2px"
   height="4208.4px"
   viewBox="0 0 2977.2 4208.4"
   version="1.2"
   id="svg217"
   sodipodi:docname="Metric Cycle v2 Struct.svg"
   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns:ns1="https://launchpad.net/jessyink">
  <sodipodi:namedview
     id="namedview217"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:zoom="0.42274122"
     inkscape:cx="914.27091"
     inkscape:cy="1124.8016"
     inkscape:window-width="1512"
     inkscape:window-height="916"
     inkscape:window-x="0"
     inkscape:window-y="38"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer3"
     showguides="true">
    <sodipodi:guide
       position="523.07902,3574.1524"
       orientation="1,0"
       id="guide217"
       inkscape:locked="false" />
    <sodipodi:guide
       position="1091.67,3574.1524"
       orientation="1,0"
       id="guide218"
       inkscape:locked="false" />
    <sodipodi:guide
       position="902.13803,3400.5514"
       orientation="1,0"
       id="guide219"
       inkscape:locked="false" />
    <sodipodi:guide
       position="1281.2,3400.5514"
       orientation="1,0"
       id="guide220"
       inkscape:locked="false" />
    <sodipodi:guide
       position="488.28325,2980.8479"
       orientation="1,0"
       id="guide71"
       inkscape:locked="false" />
    <sodipodi:guide
       position="1644.14,2655.24"
       orientation="1,0"
       id="guide72"
       inkscape:locked="false" />
  </sodipodi:namedview>
  <defs
     id="defs217">
    <rect
       x="1750.4799"
       y="548.7991"
       width="432.88894"
       height="309.9639"
       id="rect48" />
    <rect
       x="518.06941"
       y="647.39161"
       width="1191.7321"
       height="160.40739"
       id="rect2" />
    <rect
       x="82.139259"
       y="317.53299"
       width="161.27048"
       height="123.67219"
       id="rect1" />
    <rect
       x="82.139259"
       y="317.53299"
       width="161.27048"
       height="123.67219"
       id="rect4" />
    <rect
       x="82.139259"
       y="317.53299"
       width="161.27048"
       height="123.67219"
       id="rect7" />
    <rect
       x="82.139259"
       y="317.53299"
       width="161.27048"
       height="123.67219"
       id="rect8" />
    <rect
       x="82.139259"
       y="317.53299"
       width="161.27048"
       height="123.67219"
       id="rect10" />
    <rect
       x="82.139259"
       y="317.53299"
       width="161.27048"
       height="123.67219"
       id="rect12" />
    <rect
       x="82.139259"
       y="317.53299"
       width="161.27048"
       height="123.67219"
       id="rect14" />
    <rect
       x="82.139259"
       y="317.53299"
       width="161.27048"
       height="123.67219"
       id="rect16" />
    <rect
       x="518.06941"
       y="647.39161"
       width="1126.0706"
       height="74.089959"
       id="rect18" />
    <rect
       x="518.06941"
       y="647.39161"
       width="1191.7321"
       height="160.40739"
       id="rect44" />
    <rect
       x="518.06941"
       y="647.39161"
       width="1191.7321"
       height="160.40739"
       id="rect45" />
    <rect
       x="518.06941"
       y="647.39161"
       width="1191.7321"
       height="160.40739"
       id="rect47" />
    <rect
       x="518.06941"
       y="647.39161"
       width="1191.7321"
       height="160.40739"
       id="rect50" />
  </defs>
  <title
     id="title1">Metric Cycle v2</title>
  <desc
     id="desc1">Generated by MuseScore Studio 4.4.4</desc>
  <polyline
     class="StaffLines"
     fill="none"
     stroke="#000000"
     stroke-width="2.73"
     stroke-linejoin="bevel"
     points="336.599,2196.6 2640.6,2196.6"
     id="polyline10"
     transform="translate(0,540)" />
  <polyline
     class="StaffLines"
     fill="none"
     stroke="#000000"
     stroke-width="2.73"
     stroke-linejoin="bevel"
     points="336.599,2891 2640.6,2891"
     id="polyline14" />
  <polyline
     class="StaffLines"
     fill="none"
     stroke="#000000"
     stroke-width="2.73"
     stroke-linejoin="bevel"
     points="336.599,3064.6 2640.6,3064.6"
     id="polyline15" />
  <polyline
     class="StaffLines"
     fill="none"
     stroke="#000000"
     stroke-width="2.73"
     stroke-linejoin="bevel"
     points="336.599,3389.34 1488.6,3389.34"
     id="polyline16" />
  <polyline
     class="StaffLines"
     fill="none"
     stroke="#000000"
     stroke-width="2.73"
     stroke-linejoin="bevel"
     points="1612.6,3389.34 2764.6,3389.34"
     id="polyline17" />
  <polyline
     class="StaffLines"
     fill="none"
     stroke="#000000"
     stroke-width="2.73"
     stroke-linejoin="bevel"
     points="336.599,3714.08 2764.6,3714.08"
     id="polyline18" />
  <path
     class="Text"
     d="M1200.12,214.256 L1171.74,214.256 L1171.74,219.426 L1173.83,219.426 C1180.1,219.536 1182.19,219.866 1182.96,220.966 C1183.73,221.956 1183.73,222.066 1183.73,227.786 L1183.73,269.916 C1183.73,284.876 1181.64,287.956 1170.97,288.506 L1170.97,293.676 L1202.32,293.676 L1202.32,288.506 C1191.76,287.956 1189.67,284.876 1189.67,269.916 L1189.67,221.296 L1215.85,293.676 L1220.25,293.676 L1244.78,221.296 L1244.78,280.146 C1244.78,285.756 1244.78,285.976 1244.12,287.076 C1243.24,288.176 1241.15,288.506 1234.88,288.506 L1232.9,288.506 L1232.9,293.676 L1268.98,293.676 L1268.98,288.506 L1267,288.506 C1260.73,288.506 1258.64,288.176 1257.76,287.076 C1257.1,285.976 1257.1,285.866 1257.1,280.146 L1257.1,227.786 C1257.1,222.176 1257.1,221.956 1257.76,220.966 C1258.64,219.866 1260.73,219.536 1267,219.426 L1268.98,219.426 L1268.98,214.256 L1241.37,214.256 L1221.24,272.886 L1200.12,214.256 M1323.53,268.926 C1323.64,252.426 1314.29,240.766 1300.87,240.766 C1286.79,240.766 1276.23,252.976 1276.23,269.476 C1276.23,284.986 1286.24,295.326 1301.09,295.326 C1311.65,295.326 1319.02,290.156 1323.53,279.706 L1319.68,277.616 C1315.17,286.086 1310.55,289.386 1303.18,289.386 C1297.57,289.386 1293.5,287.076 1290.64,282.126 C1288.66,278.826 1287.78,274.976 1287.89,268.926 L1323.53,268.926 M1288,264.196 C1288,256.496 1291.52,245.496 1300.76,245.496 C1307.36,245.496 1311.76,251.326 1311.76,260.236 C1311.76,263.316 1310.77,264.196 1307.25,264.196 L1288,264.196 M1346.52,242.416 L1346.52,220.636 L1342.01,220.636 C1340.91,234.936 1336.07,242.196 1327.16,242.856 L1327.16,247.146 L1336.18,247.146 L1336.18,275.196 C1336.18,282.896 1336.4,285.646 1337.5,288.176 C1339.26,292.796 1343.66,295.326 1350.04,295.326 C1359.94,295.326 1366.32,287.846 1366.32,276.186 C1366.32,275.526 1366.32,274.756 1366.21,273.656 L1361.59,273.656 C1361.26,283.556 1358.4,288.616 1353.01,288.616 C1350.48,288.616 1348.28,287.296 1347.51,285.426 C1346.85,283.886 1346.52,281.136 1346.52,277.176 L1346.52,247.146 L1362.69,247.146 L1362.69,242.416 L1346.52,242.416 M1389.74,242.416 L1370.27,243.626 L1370.27,248.356 L1374.78,248.356 C1378.96,248.466 1379.51,249.126 1379.51,253.856 L1379.51,285.316 C1379.4,286.966 1379.29,287.626 1378.85,288.176 C1378.08,289.166 1375.88,289.606 1371.15,289.716 L1370.71,289.716 L1370.71,293.676 L1400.08,293.676 L1400.08,289.716 L1398.1,289.716 C1390.73,289.496 1389.74,288.946 1389.74,284.986 L1389.74,279.046 C1389.85,260.566 1396.45,246.486 1405.03,246.046 C1403.49,247.806 1403.05,248.906 1403.05,250.996 C1403.05,254.516 1405.58,257.046 1409.1,257.046 C1413.17,257.046 1415.81,254.076 1415.81,249.676 C1415.81,244.286 1412.07,240.766 1406.24,240.766 C1399.31,240.766 1393.37,246.266 1389.74,256.056 L1389.74,242.416 M1436.46,215.026 C1432.94,215.026 1430.08,217.886 1430.08,221.406 C1430.08,224.926 1432.94,227.786 1436.35,227.786 C1439.98,227.786 1442.84,224.926 1442.84,221.406 C1442.84,217.886 1439.98,215.026 1436.46,215.026 M1441.63,242.416 L1420.95,243.626 L1420.95,248.356 L1426.56,248.356 C1430.74,248.466 1431.29,249.126 1431.29,253.856 L1431.29,285.316 C1431.18,286.966 1431.07,287.626 1430.63,288.176 C1429.86,289.166 1427.77,289.606 1423.04,289.716 L1422.27,289.716 L1422.27,293.676 L1450.76,293.676 L1450.76,289.716 L1449.99,289.716 C1442.62,289.496 1441.63,288.946 1441.63,284.986 L1441.63,242.416 M1496.18,277.506 C1492.66,285.426 1488.92,288.616 1483.2,288.616 C1474.4,288.616 1468.9,280.586 1468.9,267.716 C1468.9,254.296 1474.29,245.496 1482.43,245.496 C1485.73,245.496 1488.59,247.036 1488.59,248.796 C1488.59,249.126 1488.48,249.456 1487.93,250.116 C1486.17,252.206 1485.73,253.306 1485.73,255.176 C1485.73,258.806 1488.48,261.336 1492.33,261.336 C1496.29,261.336 1499.04,258.256 1499.04,253.856 C1499.04,246.376 1491.67,240.766 1481.88,240.766 C1467.58,240.766 1457.35,252.426 1457.35,268.926 C1457.35,284.546 1466.7,295.326 1480.34,295.326 C1490.13,295.326 1495.74,290.816 1500.47,279.156 L1496.18,277.506 M1603.31,213.486 L1599.13,213.486 L1594.73,219.976 C1586.7,214.146 1582.63,212.606 1575.04,212.606 C1564.59,212.606 1555.68,217.006 1548.31,225.806 C1541.27,234.166 1537.97,243.406 1537.97,254.736 C1537.97,278.496 1553.48,295.326 1575.15,295.326 C1592.75,295.326 1603.97,284.986 1606.5,266.506 L1601.33,265.626 C1598.36,282.016 1590,290.156 1576.47,290.156 C1560.19,290.156 1552.49,278.936 1552.49,255.176 C1552.49,242.636 1554.14,234.386 1557.88,227.786 C1561.29,221.626 1568,217.776 1575.15,217.776 C1582.85,217.776 1589.67,221.846 1593.85,228.886 C1595.94,232.516 1597.48,236.586 1600.12,245.276 L1604.96,245.276 L1603.31,213.486 M1645.3,279.706 L1633.2,251.436 C1632.76,250.336 1632.54,249.786 1632.54,249.236 C1632.54,247.146 1633.86,246.376 1637.6,246.376 L1639.91,246.376 L1639.91,242.416 L1613.73,242.416 L1613.73,246.376 L1614.94,246.376 C1618.68,246.486 1620.11,247.586 1622.42,252.316 L1640.35,292.906 L1638.48,296.756 C1634.52,305.116 1629.35,310.946 1625.83,310.946 C1624.84,310.946 1624.07,310.506 1624.07,309.846 C1624.07,309.626 1624.18,309.296 1624.29,308.856 C1624.62,307.866 1624.84,306.876 1624.84,305.996 C1624.84,303.136 1622.53,301.046 1619.23,301.046 C1615.38,301.046 1612.63,303.906 1612.63,307.866 C1612.63,312.816 1616.81,316.336 1622.64,316.336 C1628.47,316.336 1633.42,313.476 1637.82,307.536 C1641.23,303.026 1643.43,298.406 1648.27,286.416 L1660.81,255.286 C1663.34,248.906 1665.76,246.486 1670.05,246.376 L1670.71,246.376 L1670.71,242.416 L1648.71,242.416 L1648.71,246.376 L1650.47,246.376 C1654.65,246.376 1656.41,247.586 1656.41,250.446 C1656.41,251.656 1656.08,252.976 1655.31,254.846 L1645.3,279.706 M1710.84,277.506 C1707.32,285.426 1703.58,288.616 1697.86,288.616 C1689.06,288.616 1683.56,280.586 1683.56,267.716 C1683.56,254.296 1688.95,245.496 1697.09,245.496 C1700.39,245.496 1703.25,247.036 1703.25,248.796 C1703.25,249.126 1703.14,249.456 1702.59,250.116 C1700.83,252.206 1700.39,253.306 1700.39,255.176 C1700.39,258.806 1703.14,261.336 1706.99,261.336 C1710.95,261.336 1713.7,258.256 1713.7,253.856 C1713.7,246.376 1706.33,240.766 1696.54,240.766 C1682.24,240.766 1672.01,252.426 1672.01,268.926 C1672.01,284.546 1681.36,295.326 1695,295.326 C1704.79,295.326 1710.4,290.816 1715.13,279.156 L1710.84,277.506 M1737.88,212.606 L1717.53,213.816 L1717.53,218.546 L1722.92,218.546 C1726.99,218.656 1727.54,219.316 1727.54,224.046 L1727.54,285.316 C1727.43,286.966 1727.32,287.626 1726.88,288.176 C1726.11,289.166 1724.02,289.606 1719.29,289.716 L1718.52,289.716 L1718.52,293.676 L1747.01,293.676 L1747.01,289.716 L1746.24,289.716 C1738.87,289.496 1737.88,288.946 1737.88,284.986 L1737.88,212.606 M1801.23,268.926 C1801.34,252.426 1791.99,240.766 1778.57,240.766 C1764.49,240.766 1753.93,252.976 1753.93,269.476 C1753.93,284.986 1763.94,295.326 1778.79,295.326 C1789.35,295.326 1796.72,290.156 1801.23,279.706 L1797.38,277.616 C1792.87,286.086 1788.25,289.386 1780.88,289.386 C1775.27,289.386 1771.2,287.076 1768.34,282.126 C1766.36,278.826 1765.48,274.976 1765.59,268.926 L1801.23,268.926 M1765.7,264.196 C1765.7,256.496 1769.22,245.496 1778.46,245.496 C1785.06,245.496 1789.46,251.326 1789.46,260.236 C1789.46,263.316 1788.47,264.196 1784.95,264.196 L1765.7,264.196 "
     id="path18" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="2408.03,3663.12 2408.03,3765.04"
     id="polyline22" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="2076.5,3663.12 2076.5,3765.04"
     id="polyline24" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="1744.98,3663.12 1744.98,3765.04"
     id="polyline26" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="2739.55,3663.12 2739.55,3765.04"
     id="polyline27" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="13.64"
     stroke-linejoin="bevel"
     points="2757.78,3663.12 2757.78,3765.04"
     id="polyline28" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="1413.45,3663.12 1413.45,3765.04"
     id="polyline29" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="1081.92,3663.12 1081.92,3765.04"
     id="polyline32" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="750.399,3663.12 750.399,3765.04"
     id="polyline35" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="2762.37,3338.38 2762.37,3440.3"
     id="polyline37" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="2638.37,2145.64 2638.37,2247.56"
     id="polyline38"
     transform="translate(0,540)" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="1486.37,3338.38 1486.37,3440.3"
     id="polyline39" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="2638.37,3013.64 2638.37,3115.57"
     id="polyline41" />
  <polyline
     class="BarLine"
     fill="none"
     stroke="#000000"
     stroke-width="4.46"
     stroke-linejoin="bevel"
     points="2638.37,2840.04 2638.37,2941.97"
     id="polyline43" />
  <path
     class="Clef"
     transform="matrix(0.992001,0,0,0.992001,355.199,3064.6)"
     d="M1.3,-25.2 C0.6,-25.2 0,-24.6 0,-23.9 L0,23.9 C0,24.6 0.6,25.2 1.3,25.2 L12.3,25.2 C13,25.2 13.6,24.6 13.6,23.9 L13.6,-23.9 C13.6,-24.6 13,-25.2 12.3,-25.2 L1.3,-25.2 M22.9,-25.2 C22.2,-25.2 21.6,-24.6 21.6,-23.9 L21.6,23.9 C21.6,24.6 22.2,25.2 22.9,25.2 L33.9,25.2 C34.6,25.2 35.2,24.6 35.2,23.9 L35.2,-23.9 C35.2,-24.6 34.6,-25.2 33.9,-25.2 L22.9,-25.2 "
     id="path155" />
  <path
     class="Clef"
     d="m 356.4886,2711.6016 c -0.6944,0 -1.2896,0.5952 -1.2896,1.2896 v 47.4176 c 0,0.6944 0.5952,1.2896 1.2896,1.2896 h 10.91201 c 0.6944,0 1.2896,-0.5952 1.2896,-1.2896 v -47.4176 c 0,-0.6944 -0.5952,-1.2896 -1.2896,-1.2896 H 356.4886 m 21.42722,0 c -0.6944,0 -1.2896,0.5952 -1.2896,1.2896 v 47.4176 c 0,0.6944 0.5952,1.2896 1.2896,1.2896 h 10.91201 c 0.6944,0 1.28961,-0.5952 1.28961,-1.2896 v -47.4176 c 0,-0.6944 -0.59521,-1.2896 -1.28961,-1.2896 h -10.91201"
     id="path157"
     style="stroke-width:0.992001" />
  <path
     class="Clef"
     transform="matrix(0.992001,0,0,0.992001,1631.2,3389.34)"
     d="M1.3,-25.2 C0.6,-25.2 0,-24.6 0,-23.9 L0,23.9 C0,24.6 0.6,25.2 1.3,25.2 L12.3,25.2 C13,25.2 13.6,24.6 13.6,23.9 L13.6,-23.9 C13.6,-24.6 13,-25.2 12.3,-25.2 L1.3,-25.2 M22.9,-25.2 C22.2,-25.2 21.6,-24.6 21.6,-23.9 L21.6,23.9 C21.6,24.6 22.2,25.2 22.9,25.2 L33.9,25.2 C34.6,25.2 35.2,24.6 35.2,23.9 L35.2,-23.9 C35.2,-24.6 34.6,-25.2 33.9,-25.2 L22.9,-25.2 "
     id="path163" />
  <path
     class="Clef"
     transform="matrix(0.992001,0,0,0.992001,355.199,3714.08)"
     d="M1.3,-25.2 C0.6,-25.2 0,-24.6 0,-23.9 L0,23.9 C0,24.6 0.6,25.2 1.3,25.2 L12.3,25.2 C13,25.2 13.6,24.6 13.6,23.9 L13.6,-23.9 C13.6,-24.6 13,-25.2 12.3,-25.2 L1.3,-25.2 M22.9,-25.2 C22.2,-25.2 21.6,-24.6 21.6,-23.9 L21.6,23.9 C21.6,24.6 22.2,25.2 22.9,25.2 L33.9,25.2 C34.6,25.2 35.2,24.6 35.2,23.9 L35.2,-23.9 C35.2,-24.6 34.6,-25.2 33.9,-25.2 L22.9,-25.2 "
     id="path167" />
  <path
     class="Clef"
     transform="matrix(0.992001,0,0,0.992001,355.199,3389.34)"
     d="M1.3,-25.2 C0.6,-25.2 0,-24.6 0,-23.9 L0,23.9 C0,24.6 0.6,25.2 1.3,25.2 L12.3,25.2 C13,25.2 13.6,24.6 13.6,23.9 L13.6,-23.9 C13.6,-24.6 13,-25.2 12.3,-25.2 L1.3,-25.2 M22.9,-25.2 C22.2,-25.2 21.6,-24.6 21.6,-23.9 L21.6,23.9 C21.6,24.6 22.2,25.2 22.9,25.2 L33.9,25.2 C34.6,25.2 35.2,24.6 35.2,23.9 L35.2,-23.9 C35.2,-24.6 34.6,-25.2 33.9,-25.2 L22.9,-25.2 "
     id="path168" />
  <path
     class="Clef"
     transform="matrix(0.992001,0,0,0.992001,355.199,2891)"
     d="M1.3,-25.2 C0.6,-25.2 0,-24.6 0,-23.9 L0,23.9 C0,24.6 0.6,25.2 1.3,25.2 L12.3,25.2 C13,25.2 13.6,24.6 13.6,23.9 L13.6,-23.9 C13.6,-24.6 13,-25.2 12.3,-25.2 L1.3,-25.2 M22.9,-25.2 C22.2,-25.2 21.6,-24.6 21.6,-23.9 L21.6,23.9 C21.6,24.6 22.2,25.2 22.9,25.2 L33.9,25.2 C34.6,25.2 35.2,24.6 35.2,23.9 L35.2,-23.9 C35.2,-24.6 34.6,-25.2 33.9,-25.2 L22.9,-25.2 "
     id="path169" />
  <path
     class="TimeSig"
     d="m 434.15862,2724.3984 v 7.3408 h -8.23361 c -0.6944,0 -1.3888,0.5952 -1.3888,1.3888 v 1.8848 c 0,0.7936 0.6944,1.3888 1.3888,1.3888 h 30.05763 c 0.7936,0 1.3888,-0.5952 1.3888,-1.3888 v -1.8848 c 0,-0.7936 -0.5952,-1.3888 -1.3888,-1.3888 h -8.82881 v -7.3408 h 8.82881 c 0.7936,0 1.3888,-0.6944 1.3888,-1.488 v -1.8848 c 0,-0.6944 -0.5952,-1.3888 -1.3888,-1.3888 h -8.82881 v -15.7728 c 0,-0.5952 -0.2976,-1.0912 -0.7936,-1.2896 l -1.1904,-0.5952 c -0.1984,-0.099 -0.496,-0.1984 -0.6944,-0.1984 -0.2976,0.099 -0.6944,0.1984 -0.8928,0.3968 l -9.02721,8.2336 c -0.2976,0.2976 -0.3968,0.6944 -0.3968,1.0912 v 8.1344 h -11.40801 c 0,0 11.01121,-11.904 22.71682,-27.5776 0.3968,-0.496 0.496,-0.992 0.496,-1.3888 0,-0.496 -0.1984,-0.8928 -0.2976,-0.992 l -2.1824,-2.1824 c -0.1984,-0.1984 -0.5952,-0.3968 -0.992,-0.3968 -0.5952,0 -13.98721,0 -14.68162,0 -0.7936,0 -1.2896,0.5952 -1.3888,1.1904 0,0 -0.496,7.3408 -3.0752,15.376 -2.5792,8.0352 -5.55521,12.9952 -8.13441,16.6656 0,0 -0.2976,0.496 -0.2976,1.0912 0,0.1984 0,0.3968 0.0992,0.5952 0.3968,0.6944 0.992,1.7856 0.992,1.7856 0,0 0.1984,0.5952 1.0912,0.5952 h 17.06242"
     id="path185"
     style="stroke-width:0.992001" />
  <path
     class="TimeSig"
     d="m 434.15862,2773.9984 v 7.3408 h -8.23361 c -0.6944,0 -1.3888,0.5952 -1.3888,1.3888 v 1.8848 c 0,0.7936 0.6944,1.3888 1.3888,1.3888 h 30.05763 c 0.7936,0 1.3888,-0.5952 1.3888,-1.3888 v -1.8848 c 0,-0.7936 -0.5952,-1.3888 -1.3888,-1.3888 h -8.82881 v -7.3408 h 8.82881 c 0.7936,0 1.3888,-0.6944 1.3888,-1.488 v -1.8848 c 0,-0.6944 -0.5952,-1.3888 -1.3888,-1.3888 h -8.82881 v -15.7728 c 0,-0.5952 -0.2976,-1.0912 -0.7936,-1.2896 l -1.1904,-0.5952 c -0.1984,-0.099 -0.496,-0.1984 -0.6944,-0.1984 -0.2976,0.099 -0.6944,0.1984 -0.8928,0.3968 l -9.02721,8.2336 c -0.2976,0.2976 -0.3968,0.6944 -0.3968,1.0912 v 8.1344 h -11.40801 c 0,0 11.01121,-11.904 22.71682,-27.5776 0.3968,-0.496 0.496,-0.992 0.496,-1.3888 0,-0.496 -0.1984,-0.8928 -0.2976,-0.992 l -2.1824,-2.1824 c -0.1984,-0.1984 -0.5952,-0.3968 -0.992,-0.3968 -0.5952,0 -13.98721,0 -14.68162,0 -0.7936,0 -1.2896,0.5952 -1.3888,1.1904 0,0 -0.496,7.3408 -3.0752,15.376 -2.5792,8.0352 -5.55521,12.9952 -8.13441,16.6656 0,0 -0.2976,0.496 -0.2976,1.0912 0,0.1984 0,0.3968 0.0992,0.5952 0.3968,0.6944 0.992,1.7856 0.992,1.7856 0,0 0.1984,0.5952 1.0912,0.5952 h 17.06242"
     id="path186"
     style="stroke-width:0.992001" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,900.049,3714.08)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path191" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,1231.58,3714.08)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path192" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,2557.68,3714.08)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path193" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,2226.15,3714.08)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path197" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,2197.01,3389.34)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path198" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,1894.63,3714.08)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path200" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,1563.1,3714.08)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path203" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,921.008,3389.34)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path204" />
  <path
     class="Rest"
     transform="matrix(0.992001,0,0,0.992001,553.023,3714.08)"
     d="M1.4,-0.5 C0.6,-0.5 0,0.1 0,0.9 L0,11.7 C0,12.5 0.6,13.1 1.4,13.1 L31.1,13.1 C31.9,13.1 32.5,12.5 32.5,11.7 L32.5,0.9 C32.5,0.1 31.9,-0.5 31.1,-0.5 L1.4,-0.5 "
     id="path205" />
  <g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="Layer 3">
    <g
       id="g9"
       style="fill:none;stroke:#0000ff;stroke-width:4;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
       transform="translate(3154.268,61.699)">
      <path
         style="fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:4;stroke-linejoin:round;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
         d="m 266.757,1886.3 c 13.99235,0.04 27.98471,41.08 41.97707,84.5 13.99236,43.41 27.9857,80.3 41.97806,75.93 13.99236,-4.36 27.98472,-49.21 41.97707,-92.18 13.99335,-42.98 27.98571,-75.32 41.97807,-66.6 13.99235,8.71 27.98471,56.84 41.97806,98.93 13.99236,42.09 27.98471,69.56 41.97707,56.58 13.99236,-12.98 27.98571,-63.89 41.97806,-104.67 13.99236,-40.77 27.98472,-63.08 41.97807,-45.97 13.99235,17.11 27.98471,70.28 41.97707,109.32 13.99235,39.04 27.9857,55.97 41.97806,34.9 13.99236,-21.06 27.98471,-75.95 41.97707,-112.86 13.99335,-36.9 27.98571,-48.27 41.97806,-23.46 13.99236,24.8 27.98472,80.84 41.97807,115.23 13.99235,34.4 27.98471,40.08 41.97707,11.8 13.99236,-28.29 27.9857,-84.91 41.97806,-116.43 13.99236,-31.53 27.98472,-31.49 41.97806,0 13.99236,31.48 27.98472,88.09 41.97708,116.43 13.99533,28.34 27.98277,22.55 41.98007,-11.8 13.9874,-34.35 27.9847,-90.37 41.9721,-115.23 13.9973,-24.86 27.9847,-13.41 41.982,23.46 13.9874,36.87 27.9847,91.74 41.9721,112.86 13.9973,21.13 27.9947,4.11 41.9821,-34.9 13.9973,-39.01 27.9847,-92.15 41.982,-109.32 13.9874,-17.18 27.9847,5.22 41.9721,45.97 13.9973,40.75 27.9847,91.62 41.982,104.67 13.9874,13.05 27.9847,-14.51 41.9721,-56.58 13.9974,-42.07 27.9848,-90.15 41.9821,-98.93 13.9874,-8.79 27.9847,23.63 41.9721,66.6 13.9973,42.96 27.9847,87.75 41.982,92.18 13.9874,4.44 27.9847,-32.52 41.982,-75.93 13.9874,-43.41 27.9848,-84.46 41.9722,-84.5"
         title="cos(x)"
         id="path2" />
      <path
         style="fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:4;stroke-linejoin:round;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
         d="m 266.757,1686.3 c 13.992,0.03 27.985,30.65 41.977,68.25 13.993,37.59 27.985,77.5 41.978,88.91 13.992,11.41 27.985,-7.18 41.978,-41.32 13.992,-34.13 27.985,-79.67 41.977,-101.42 13.993,-21.75 27.985,-16.95 41.978,10.6 13.993,27.54 27.985,74.54 41.978,104.63 13.992,30.09 27.985,39.53 41.977,21.09 13.993,-18.43 27.985,-62.57 41.978,-98.25 13.993,-35.67 27.985,-58.47 41.978,-50.84 13.992,7.63 27.985,44.86 41.977,82.85 13.993,37.98 27.986,72.06 41.978,75.93 13.993,3.88 27.985,-23.03 41.978,-59.85 13.992,-36.81 27.985,-79.04 41.978,-94.06 13.992,-15.02 27.985,-0.9 41.977,31.36 13.993,32.27 27.985,78.77 41.978,103.57 13.992,24.79 27.985,24.75 41.978,0 13.992,-24.76 27.985,-71.27 41.977,-103.57 13.993,-32.29 27.983,-46.34 41.973,-31.36 14,14.97 27.99,57.24 41.98,94.06 14,36.83 27.99,63.68 41.98,59.85 13.99,-3.82 27.99,-37.95 41.98,-75.93 13.99,-37.99 27.98,-75.17 41.98,-82.85 13.99,-7.69 27.98,15.19 41.97,50.84 14,35.66 27.99,79.77 41.98,98.25 13.99,18.48 27.99,8.97 41.98,-21.09 13.99,-30.06 27.98,-77.05 41.98,-104.63 13.99,-27.59 27.98,-32.31 41.97,-10.6 14,21.7 27.99,67.26 41.98,101.42 13.99,34.16 27.99,52.68 41.98,41.32 13.99,-11.36 27.98,-51.31 41.98,-88.91 13.99,-37.6 27.98,-68.22 41.98,-68.25"
         title="cos(x)"
         id="path3" />
      <path
         style="fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:4;stroke-linejoin:round;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
         d="m 266.757,1486.3 c 13.992,0.02 27.985,21.93 41.977,52.49 13.993,30.57 27.985,67.71 41.978,88.96 13.992,21.25 27.985,25.1 41.978,9.29 13.992,-15.8 27.985,-50.27 41.977,-82.49 13.993,-32.23 27.985,-60.02 41.978,-66.6 13.993,-6.58 27.985,8.58 41.978,36.23 13.992,27.66 27.985,65.98 41.977,91.77 13.993,25.79 27.985,37.25 41.978,27.51 13.993,-9.74 27.985,-40.1 41.978,-72.66 13.992,-32.56 27.985,-65.11 41.977,-77.98 13.993,-12.88 27.986,-5.12 41.978,18.5 13.993,23.61 27.985,61.54 41.978,90.82 13.992,29.28 27.985,47.87 41.978,44.59 13.992,-3.27 27.985,-28.29 41.977,-59.85 13.993,-31.55 27.985,-67.52 41.978,-86.16 13.992,-18.64 27.985,-18.61 41.978,0 13.992,18.6 27.985,54.6 41.977,86.16 13.993,31.57 27.983,56.54 41.973,59.85 14,3.32 27.99,-15.33 41.98,-44.59 14,-29.26 27.99,-67.18 41.98,-90.82 13.99,-23.65 27.99,-31.34 41.98,-18.5 13.99,12.84 27.98,45.42 41.98,77.98 13.99,32.56 27.98,62.88 41.97,72.66 14,9.78 27.99,-1.74 41.98,-27.51 13.99,-25.77 27.99,-64.09 41.98,-91.77 13.99,-27.67 27.98,-42.78 41.98,-36.23 13.99,6.54 27.98,34.37 41.97,66.6 14,32.22 27.99,66.65 41.98,82.49 13.99,15.84 27.99,11.93 41.98,-9.29 13.99,-21.22 27.98,-58.38 41.98,-88.96 13.99,-30.58 27.98,-52.47 41.98,-52.49"
         title="cos(x)"
         id="path4" />
      <path
         style="fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:4;stroke-linejoin:round;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
         d="m 266.757,1286.3 c 13.992,0.02 27.985,14.84 41.977,37.88 13.993,23.05 27.985,53.56 41.978,77.96 13.992,24.4 27.985,41.83 41.978,44.59 13.992,2.77 27.985,-9.3 41.977,-30.78 13.993,-21.47 27.985,-51.68 41.978,-77.16 13.993,-25.48 27.985,-45.36 41.978,-50.84 13.992,-5.48 27.985,3.68 41.977,23.37 13.993,19.68 27.985,49.26 41.978,75.56 13.993,26.31 27.985,48.43 41.978,56.58 13.992,8.14 27.985,1.97 41.977,-15.71 13.993,-17.69 27.986,-46.35 41.978,-73.2 13.993,-26.86 27.985,-51 41.978,-61.73 13.992,-10.73 27.985,-7.61 41.978,7.9 13.992,15.5 27.985,42.94 41.977,70.08 13.993,27.13 27.985,53.05 41.978,66.24 13.992,13.2 27.985,13.17 41.978,0 13.992,-13.17 27.985,-39.11 41.977,-66.24 13.993,-27.13 27.983,-54.55 41.973,-70.08 14,-15.54 27.99,-18.6 41.98,-7.9 14,10.7 27.99,34.87 41.98,61.73 13.99,26.85 27.99,55.49 41.98,73.2 13.99,17.7 27.98,23.83 41.98,15.71 13.99,-8.12 27.98,-30.28 41.97,-56.58 14,-26.29 27.99,-55.86 41.98,-75.56 13.99,-19.7 27.99,-28.83 41.98,-23.37 13.99,5.45 27.98,25.37 41.98,50.84 13.99,25.47 27.98,55.67 41.97,77.16 14,21.49 27.99,33.52 41.98,30.78 13.99,-2.73 27.99,-20.2 41.98,-44.59 13.99,-24.38 27.98,-54.89 41.98,-77.96 13.99,-23.06 27.98,-37.86 41.98,-37.88"
         title="cos(x)"
         id="path5" />
      <path
         style="fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:4;stroke-linejoin:round;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
         d="m 266.757,1086.3 c 13.992,0.01 27.985,9.27 41.977,25.02 13.993,15.74 27.985,37.77 41.978,59.48 13.992,21.7 27.985,42.78 41.978,56.95 13.992,14.16 27.985,21.17 41.977,18.98 13.993,-2.19 27.985,-13.6 41.978,-30.78 13.993,-17.18 27.985,-39.92 41.978,-61.4 13.992,-21.49 27.985,-41.41 41.977,-53.83 13.993,-12.43 27.985,-17.14 41.978,-12.77 13.993,4.36 27.985,17.79 41.978,36.23 13.992,18.44 27.985,41.66 41.977,62.7 13.993,21.04 27.986,39.61 41.978,50.16 13.993,10.56 27.985,12.92 41.978,6.42 13.992,-6.5 27.985,-21.81 41.978,-41.32 13.992,-19.51 27.985,-42.96 41.977,-63.35 13.993,-20.38 27.985,-37.39 41.978,-45.97 13.992,-8.58 27.985,-8.56 41.978,0 13.992,8.56 27.985,25.6 41.977,45.97 13.993,20.38 27.983,43.84 41.973,63.35 14,19.52 27.99,34.8 41.98,41.32 14,6.51 27.99,4.12 41.98,-6.42 13.99,-10.54 27.99,-29.12 41.98,-50.16 13.99,-21.04 27.98,-44.25 41.98,-62.7 13.99,-18.45 27.98,-31.85 41.97,-36.23 14,-4.39 27.99,0.36 41.98,12.77 13.99,12.4 27.99,32.34 41.98,53.83 13.99,21.48 27.98,44.21 41.98,61.4 13.99,17.19 27.98,28.58 41.97,30.78 14,2.21 27.99,-4.83 41.98,-18.98 13.99,-14.15 27.99,-35.25 41.98,-56.95 13.99,-21.71 27.98,-43.73 41.98,-59.48 13.99,-15.76 27.98,-25.01 41.98,-25.02"
         title="cos(x)"
         id="path6" />
      <path
         style="fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:4;stroke-linejoin:round;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
         d="m 266.757,886.301 c 13.992,0.005 27.985,5.107 41.977,14.415 13.993,9.308 27.985,22.793 41.978,38.077 13.992,15.284 27.985,32.308 41.978,48.089 13.992,15.778 27.985,30.238 41.977,40.868 13.993,10.62 27.985,17.33 41.978,18.98 13.993,1.66 27.985,-1.78 41.978,-9.69 13.992,-7.9 27.985,-20.27 41.977,-34.9 13.993,-14.63 27.985,-31.481 41.978,-47.594 13.993,-16.113 27.985,-31.413 41.978,-43.231 13.992,-11.817 27.985,-20.081 41.977,-23.367 13.993,-3.287 27.986,-1.553 41.978,4.871 13.993,6.424 27.985,17.534 41.978,31.364 13.992,13.831 27.985,30.335 41.978,46.615 13.992,16.279 27.985,32.262 41.977,45.152 13.993,12.89 27.985,22.62 41.978,27.51 13.992,4.88 27.985,4.87 41.978,0 13.992,-4.88 27.985,-14.62 41.977,-27.51 13.993,-12.89 27.983,-28.873 41.973,-45.152 14,-16.28 27.99,-32.779 41.98,-46.615 14,-13.835 27.99,-24.931 41.98,-31.364 13.99,-6.433 27.99,-8.148 41.98,-4.871 13.99,3.276 27.98,11.556 41.98,23.367 13.99,11.811 27.98,27.119 41.97,43.231 14,16.112 27.99,32.959 41.98,47.594 13.99,14.64 27.99,26.99 41.98,34.9 13.99,7.92 27.98,11.34 41.98,9.69 13.99,-1.64 27.98,-8.37 41.97,-18.98 14,-10.62 27.99,-25.09 41.98,-40.868 13.99,-15.778 27.99,-32.802 41.98,-48.089 13.99,-15.288 27.98,-28.761 41.98,-38.077 13.99,-9.316 27.98,-14.41 41.98,-14.415"
         title="cos(x)"
         id="path7" />
      <path
         style="fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:4;stroke-linejoin:round;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
         d="m 266.757,686.301 c 13.992,0.002 27.985,2.235 41.977,6.518 13.993,4.283 27.985,10.622 41.978,18.496 13.992,7.875 27.985,17.288 41.978,27.478 13.992,10.19 27.985,21.151 41.977,32.005 13.993,10.853 27.985,21.587 41.978,31.344 13.993,9.757 27.985,18.524 41.978,25.604 13.992,7.08 27.985,12.458 41.977,15.713 13.993,3.255 27.985,4.373 41.978,3.275 13.993,-1.097 27.985,-4.42 41.978,-9.692 13.992,-5.272 27.985,-12.499 41.977,-21.09 13.993,-8.592 27.986,-18.55 41.978,-29.07 13.993,-10.519 27.985,-21.594 41.978,-32.336 13.992,-10.742 27.985,-21.139 41.978,-30.363 13.992,-9.223 27.985,-17.257 41.977,-23.467 13.993,-6.21 27.985,-10.579 41.978,-12.768 13.992,-2.19 27.985,-2.186 41.978,0 13.992,2.185 27.985,6.562 41.977,12.768 13.993,6.206 27.983,14.246 41.973,23.467 14,9.221 27.99,19.622 41.98,30.363 14,10.741 27.99,21.816 41.98,32.336 13.99,10.521 27.99,20.475 41.98,29.07 13.99,8.594 27.98,15.814 41.98,21.09 13.99,5.275 27.98,8.591 41.97,9.692 14,1.102 27.99,-0.024 41.98,-3.275 13.99,-3.251 27.99,-8.637 41.98,-15.713 13.99,-7.077 27.98,-15.849 41.98,-25.604 13.99,-9.755 27.98,-20.492 41.97,-31.344 14,-10.853 27.99,-21.814 41.98,-32.005 13.99,-10.191 27.99,-19.6 41.98,-27.478 13.99,-7.877 27.98,-14.209 41.98,-18.496 13.99,-4.288 27.98,-6.516 41.98,-6.518"
         title="cos(x)"
         id="path8" />
      <path
         style="fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:4;stroke-linejoin:round;stroke-dasharray:4, 4;stroke-dashoffset:0;stroke-opacity:1"
         d="m 266.757,486.301 c 13.992,0.001 27.985,0.553 41.977,1.647 13.993,1.093 27.985,2.729 41.978,4.871 13.992,2.142 27.985,4.793 41.978,7.897 13.992,3.104 27.985,6.662 41.977,10.599 13.993,3.938 27.985,8.258 41.978,12.868 13.993,4.611 27.985,9.515 41.978,14.61 13.992,5.095 27.985,10.382 41.977,15.753 13.993,5.371 27.985,10.825 41.978,16.252 13.993,5.426 27.985,10.824 41.978,16.084 13.992,5.261 27.985,10.382 41.977,15.26 13.993,4.878 27.986,9.513 41.978,13.81 13.993,4.297 27.985,8.254 41.978,11.794 13.992,3.539 27.985,6.658 41.978,9.296 13.992,2.637 27.985,4.79 41.977,6.417 13.993,1.627 27.985,2.725 41.978,3.275 13.992,0.551 27.985,0.55 41.978,0 13.992,-0.549 27.985,-1.649 41.977,-3.275 13.993,-1.626 27.983,-3.781 41.973,-6.417 14,-2.637 27.99,-5.757 41.98,-9.296 14,-3.539 27.99,-7.498 41.98,-11.794 13.99,-4.297 27.99,-8.932 41.98,-13.81 13.99,-4.878 27.98,-10 41.98,-15.26 13.99,-5.259 27.98,-10.658 41.97,-16.084 14,-5.427 27.99,-10.881 41.98,-16.252 13.99,-5.371 27.99,-10.658 41.98,-15.753 13.99,-5.096 27.98,-9.998 41.98,-14.61 13.99,-4.611 27.98,-8.929 41.97,-12.868 14,-3.938 27.99,-7.495 41.98,-10.599 13.99,-3.104 27.99,-5.754 41.98,-7.897 13.99,-2.143 27.98,-3.777 41.98,-4.871 13.99,-1.095 27.98,-1.646 41.98,-1.647"
         title="cos(x)"
         id="path9" />
    </g>
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2"
       stroke-linejoin="bevel"
       points="141.732,566.733 1585.47,566.733"
       id="polyline1-4"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2"
       stroke-linejoin="bevel"
       points="141.732,766.733 1585.47,766.733"
       id="polyline2-6"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2"
       stroke-linejoin="bevel"
       points="141.732,966.733 1585.47,966.733"
       id="polyline3-4"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2"
       stroke-linejoin="bevel"
       points="141.732,1166.73 1585.47,1166.73"
       id="polyline4-3"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2"
       stroke-linejoin="bevel"
       points="141.732,1366.73 1585.47,1366.73"
       id="polyline5-8"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2"
       stroke-linejoin="bevel"
       points="141.732,1566.73 1585.47,1566.73"
       id="polyline6-4"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2"
       stroke-linejoin="bevel"
       points="141.732,1766.73 1585.47,1766.73"
       id="polyline7-0"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2"
       stroke-linejoin="bevel"
       points="141.732,1966.73 1585.47,1966.73"
       id="polyline8-0"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4"
       stroke-linejoin="bevel"
       points="1583.47,1915.73 1583.47,2017.73"
       id="polyline14-9"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4"
       stroke-linejoin="bevel"
       points="1583.47,1315.73 1583.47,1417.73"
       id="polyline17-3"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4"
       stroke-linejoin="bevel"
       points="1583.47,515.733 1583.47,617.733"
       id="polyline19"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4"
       stroke-linejoin="bevel"
       points="1583.47,1515.73 1583.47,1617.73"
       id="polyline22-7"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4"
       stroke-linejoin="bevel"
       points="1583.47,915.733 1583.47,1017.73"
       id="polyline23-5"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4"
       stroke-linejoin="bevel"
       points="1583.47,1715.73 1583.47,1817.73"
       id="polyline27-7"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4"
       stroke-linejoin="bevel"
       points="1583.47,715.733 1583.47,817.733"
       id="polyline29-2"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4"
       stroke-linejoin="bevel"
       points="1583.47,1115.73 1583.47,1217.73"
       id="polyline32-9"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1235.73,1170.84 1235.73,1210.48"
       id="polyline34-7"
       transform="translate(3152.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="908.925,1170.84 908.925,1210.48"
       id="polyline36-5"
       transform="translate(3152.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="582.116,1170.84 582.116,1210.48"
       id="polyline40"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="255.307,1370.84 255.307,1410.48"
       id="polyline42"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="516.754,1370.84 516.754,1410.48"
       id="polyline45-6"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="778.201,1370.84 778.201,1410.48"
       id="polyline47-5"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1039.65,1370.84 1039.65,1410.48"
       id="polyline49-3"
       transform="translate(3152.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1301.1,1370.84 1301.1,1410.48"
       id="polyline51-0"
       transform="translate(3152.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="255.307,1170.84 255.307,1210.48"
       id="polyline53-4"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="473.18,1570.84 473.18,1610.48"
       id="polyline62-8"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="691.052,1570.84 691.052,1610.48"
       id="polyline64-5"
       transform="translate(3153.4383,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="908.925,1570.84 908.925,1610.48"
       id="polyline66-5"
       transform="translate(3152.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1126.8,1570.84 1126.8,1610.48"
       id="polyline68-5"
       transform="translate(3151.9275,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1344.67,1570.84 1344.67,1610.48"
       id="polyline70-4"
       transform="translate(3151.0977,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1126.17,970.163 1126.17,1010.48"
       id="polyline75-2"
       transform="translate(3150.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="255.307,1770.84 255.307,1810.48"
       id="polyline78-1"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="442.055,1770.84 442.055,1810.48"
       id="polyline81-9"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="628.803,1770.84 628.803,1810.48"
       id="polyline83-2"
       transform="translate(3153.4383,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="815.551,1770.84 815.551,1810.48"
       id="polyline85-4"
       transform="translate(3153.0977,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1002.3,1770.84 1002.3,1810.48"
       id="polyline87-5"
       transform="translate(3152.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1189.05,1770.84 1189.05,1810.48"
       id="polyline89-8"
       transform="translate(3151.0977,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1375.79,1770.84 1375.79,1810.48"
       id="polyline91-6"
       transform="translate(3150.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="690.42,970.163 690.42,1010.48"
       id="polyline95-2"
       transform="translate(3152.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="255.307,1970.84 255.307,2010.48"
       id="polyline98-5"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="418.711,1970.84 418.711,2010.48"
       id="polyline101"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="582.116,1970.84 582.116,2010.48"
       id="polyline103"
       transform="translate(3153.4383,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="745.52,1970.84 745.52,2010.48"
       id="polyline105"
       transform="translate(3152.8516,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="908.925,1970.84 908.925,2010.48"
       id="polyline107"
       transform="translate(3152.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1072.33,1970.84 1072.33,2010.48"
       id="polyline110"
       transform="translate(3151.8531,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1235.73,1970.84 1235.73,2010.48"
       id="polyline112"
       transform="translate(3151.0977,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="254.675,970.163 254.675,1010.48"
       id="polyline113"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="1399.14,1970.84 1399.14,2010.48"
       id="polyline114"
       transform="translate(3150.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="933.39,770.163 933.39,810.483"
       id="polyline120"
       transform="translate(3126.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="254.87,770.163 254.87,810.483"
       id="polyline122"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.28"
       stroke-linejoin="bevel"
       points="255.307,1570.84 255.307,1610.48"
       id="polyline127"
       transform="translate(3154.268,61.699)" />
    <path
       class="Note"
       d="m 4063.7163,835.88315 c 1.3216,0 4.0902,-1.36716 8.3057,-4.10154 4.2154,-2.73438 6.6992,-4.56869 7.4511,-5.50293 0.752,-0.93425 1.128,-1.76595 1.128,-2.49512 0,-0.72916 -0.2962,-1.37858 -0.8887,-1.94824 -0.5924,-0.56964 -1.276,-0.85447 -2.0507,-0.85447 -1.3673,0 -4.1586,1.37856 -8.3741,4.13572 -4.2155,2.75716 -6.6878,4.59147 -7.417,5.50293 -0.7292,0.91146 -1.0937,1.73177 -1.0937,2.46094 0,0.72916 0.2848,1.37858 0.8545,1.94824 0.5696,0.56964 1.2646,0.85447 2.0849,0.85447 m 13.2617,-17.0898 c 3.9193,0 5.8789,1.68616 5.8789,5.05857 0,1.64063 -0.4785,3.5433 -1.4355,5.70801 -0.957,2.16472 -2.2331,3.81673 -3.8281,4.95606 -3.5091,2.36977 -7.9069,3.55466 -13.1934,3.55466 -3.9193,0 -5.8789,-1.68616 -5.8789,-5.05857 0,-1.50391 0.4671,-3.3724 1.4014,-5.60547 0.9342,-2.23308 2.2216,-3.91927 3.8623,-5.0586 3.5091,-2.36977 7.9069,-3.55466 13.1933,-3.55466"
       id="path132-1"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3413.0013,1035.8832 c 1.3216,0 4.0902,-1.3672 8.3057,-4.1016 4.2154,-2.7344 6.6992,-4.5687 7.4511,-5.5029 0.752,-0.9343 1.128,-1.766 1.128,-2.4951 0,-0.7292 -0.2962,-1.3786 -0.8887,-1.9483 -0.5924,-0.5696 -1.2761,-0.8545 -2.0507,-0.8545 -1.3673,0 -4.1586,1.3786 -8.3741,4.1358 -4.2155,2.7571 -6.6878,4.5914 -7.417,5.5029 -0.7292,0.9115 -1.0937,1.7318 -1.0937,2.4609 0,0.7292 0.2848,1.3786 0.8545,1.9483 0.5696,0.5696 1.2646,0.8545 2.0849,0.8545 m 13.2617,-17.0898 c 3.9193,0 5.8789,1.6861 5.8789,5.0585 0,1.6407 -0.4785,3.5433 -1.4355,5.708 -0.957,2.1648 -2.2331,3.8168 -3.8281,4.9561 -3.5091,2.3698 -7.907,3.5547 -13.1934,3.5547 -3.9193,0 -5.8789,-1.6862 -5.8789,-5.0586 0,-1.5039 0.4671,-3.3724 1.4014,-5.6055 0.9342,-2.2331 2.2217,-3.9193 3.8623,-5.0586 3.5091,-2.3698 7.9069,-3.5546 13.1933,-3.5546"
       id="path135-3"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4563.6489,2018.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path138-9"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4401.0787,2018.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path139-7"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4238.424,2018.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path140-3"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3846.7463,1035.8832 c 1.3216,0 4.0902,-1.3672 8.3057,-4.1016 4.2154,-2.7344 6.6992,-4.5687 7.4511,-5.5029 0.752,-0.9343 1.128,-1.766 1.128,-2.4951 0,-0.7292 -0.2962,-1.3786 -0.8887,-1.9483 -0.5924,-0.5696 -1.276,-0.8545 -2.0507,-0.8545 -1.3673,0 -4.1586,1.3786 -8.3741,4.1358 -4.2155,2.7571 -6.6878,4.5914 -7.417,5.5029 -0.7292,0.9115 -1.0937,1.7318 -1.0937,2.4609 0,0.7292 0.2848,1.3786 0.8545,1.9483 0.5696,0.5696 1.2646,0.8545 2.0849,0.8545 m 13.2617,-17.0898 c 3.9193,0 5.8789,1.6861 5.8789,5.0585 0,1.6407 -0.4785,3.5433 -1.4355,5.708 -0.957,2.1648 -2.2331,3.8168 -3.8281,4.9561 -3.5091,2.3698 -7.9069,3.5547 -13.1934,3.5547 -3.9193,0 -5.8789,-1.6862 -5.8789,-5.0586 0,-1.5039 0.4671,-3.3724 1.4014,-5.6055 0.9342,-2.2331 2.2217,-3.9193 3.8623,-5.0586 3.5091,-2.3698 7.9069,-3.5546 13.1933,-3.5546"
       id="path143-7"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4075.4359,2018.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path145-5"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3912.6155,2018.7904 c 2.1875,0 4.0103,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2585,2.7344 -6.7562,4.1016 -10.4932,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5371,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path147-0"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3749.7972,2018.7904 c 2.1875,0 4.0103,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2585,2.7344 -6.7562,4.1016 -10.4932,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5371,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path149-2"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4280.4933,1035.8832 c 1.3216,0 4.0902,-1.3672 8.3057,-4.1016 4.2154,-2.7344 6.6992,-4.5687 7.4511,-5.5029 0.752,-0.9343 1.128,-1.766 1.128,-2.4951 0,-0.7292 -0.2962,-1.3786 -0.8887,-1.9483 -0.5924,-0.5696 -1.276,-0.8545 -2.0507,-0.8545 -1.3673,0 -4.1586,1.3786 -8.3741,4.1358 -4.2155,2.7571 -6.6878,4.5914 -7.417,5.5029 -0.7292,0.9115 -1.0937,1.7318 -1.0937,2.4609 0,0.7292 0.2848,1.3786 0.8545,1.9483 0.5696,0.5696 1.2646,0.8545 2.0849,0.8545 m 13.2617,-17.0898 c 3.9193,0 5.8789,1.6861 5.8789,5.0585 0,1.6407 -0.4785,3.5433 -1.4355,5.708 -0.957,2.1648 -2.2331,3.8168 -3.8281,4.9561 -3.5091,2.3698 -7.9069,3.5547 -13.1934,3.5547 -3.9193,0 -5.8789,-1.6862 -5.8789,-5.0586 0,-1.5039 0.4671,-3.3724 1.4014,-5.6055 0.9342,-2.2331 2.2216,-3.9193 3.8623,-5.0586 3.5091,-2.3698 7.9069,-3.5546 13.1933,-3.5546"
       id="path151-1"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3587.2229,2018.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path152-8"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3423.8189,2018.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path156-7"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4540.3089,1818.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path164-1"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4354.3886,1818.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path166-5"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4168.8089,1818.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4932,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5371,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path168-5"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3423.8189,1218.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path170-8"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3982.8916,1818.7904 c 2.1875,0 4.0104,0.5468 5.4688,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6293,6.0839 -4.8878,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5371,-1.709 -1.4128,-1.2305 -2.1192,-2.78 -2.1192,-4.6484 0,-3.0534 1.6179,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path172-5"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3796.4842,1818.7904 c 2.1875,0 4.0103,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2585,2.7344 -6.7562,4.1016 -10.4932,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5371,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path174-6"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3610.5659,1818.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path176-7"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3750.6269,1218.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path178-9"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4075.4359,1218.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path180-4"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3423.8189,1818.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path182-1"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4402.2489,1218.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path186-6"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3414.457,632.25106 c 2.0052,2.68881 4.5801,4.03323 7.7246,4.03323 3.1446,0 4.7169,-2.11916 4.7169,-6.35744 0,-2.00521 -0.5697,-3.78256 -1.709,-5.33204 -1.9597,-2.6888 -4.6029,-4.03322 -7.9297,-4.03322 -1.4584,0 -2.5749,0.60389 -3.3496,1.81154 -0.7748,1.20769 -1.1622,2.76856 -1.1622,4.68262 0,1.91406 0.5697,3.64584 1.709,5.19531 m -6.7675,-10.66406 c 3.4179,-1.86849 7.5309,-2.80271 12.3388,-2.80271 4.8079,0 8.864,0.95704 12.168,2.87107 3.304,1.91407 4.956,4.19271 4.956,6.83594 0,2.64323 -1.7089,4.89908 -5.1269,6.76758 -3.418,1.86849 -7.5081,2.80271 -12.2705,2.80271 -4.7624,0 -8.8297,-0.95704 -12.2022,-2.87107 -3.3724,-1.91407 -5.0586,-4.2155 -5.0586,-6.9043 0,-2.6888 1.7318,-4.92187 5.1954,-6.69922"
       id="path188-1"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3413.1953,835.88315 c 1.3216,0 4.0902,-1.36716 8.3057,-4.10154 4.2154,-2.73438 6.6992,-4.56869 7.4511,-5.50293 0.752,-0.93425 1.128,-1.76595 1.128,-2.49512 0,-0.72916 -0.2962,-1.37858 -0.8887,-1.94824 -0.5924,-0.56964 -1.276,-0.85447 -2.0507,-0.85447 -1.3673,0 -4.1586,1.37856 -8.3741,4.13572 -4.2155,2.75716 -6.6878,4.59147 -7.417,5.50293 -0.7292,0.91146 -1.0937,1.73177 -1.0937,2.46094 0,0.72916 0.2848,1.37858 0.8545,1.94824 0.5696,0.56964 1.2646,0.85447 2.0849,0.85447 m 13.2617,-17.0898 c 3.9193,0 5.8789,1.68616 5.8789,5.05857 0,1.64063 -0.4785,3.5433 -1.4355,5.70801 -0.957,2.16472 -2.2331,3.81673 -3.8281,4.95606 -3.5091,2.36977 -7.9069,3.55466 -13.1934,3.55466 -3.9193,0 -5.8789,-1.68616 -5.8789,-5.05857 0,-1.50391 0.4671,-3.3724 1.4014,-5.60547 0.9342,-2.23308 2.2217,-3.91927 3.8623,-5.0586 3.5091,-2.36977 7.9069,-3.55466 13.1933,-3.55466"
       id="path190-2"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4510.0086,1618.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path193-0"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4292.9683,1618.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path194"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4075.4359,1618.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path197-4"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3858.7342,1618.7904 c 2.1875,0 4.0103,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2585,2.7344 -6.7562,4.1016 -10.4932,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5371,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path199"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3641.6909,1618.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path201"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3423.8189,1618.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path206-4"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3423.8189,1418.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path208-5"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4467.6089,1418.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path217-9"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 4206.1589,1418.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0333,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path219"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3946.7129,1418.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4583,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4932,4.1016 -2.1875,0 -4.0331,-0.5697 -5.5371,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path221-7"
       style="stroke-width:0.7" />
    <path
       class="Note"
       d="m 3685.2659,1418.7904 c 2.1875,0 4.0104,0.5468 5.4687,1.6405 1.4584,1.0938 2.1875,2.6661 2.1875,4.7169 0,3.1445 -1.6292,6.0839 -4.8877,8.8183 -3.2584,2.7344 -6.7562,4.1016 -10.4931,4.1016 -2.1875,0 -4.0332,-0.5697 -5.5372,-1.709 -1.4127,-1.2305 -2.1191,-2.78 -2.1191,-4.6484 0,-3.0534 1.6178,-5.9701 4.8535,-8.75 3.2357,-2.78 6.7448,-4.1699 10.5274,-4.1699"
       id="path223-5"
       style="stroke-width:0.7" />
    <path
       class="Clef"
       d="m 3365.024,1653.429 h -9.18 c -0.716,0 -1.074,-0.32 -1.074,-0.97 v -48.05 c 0,-0.65 0.358,-0.98 1.074,-0.98 h 9.18 c 0.651,0 0.976,0.33 0.976,0.98 v 48.05 c 0,0.65 -0.325,0.97 -0.976,0.97 m -22.071,0 h -9.277 c -0.651,0 -0.976,-0.32 -0.976,-0.97 v -48.05 c 0,-0.65 0.325,-0.98 0.976,-0.98 h 9.277 c 0.717,0 1.075,0.33 1.075,0.98 v 48.05 c 0,0.65 -0.358,0.97 -1.075,0.97"
       id="path225-3" />
    <path
       class="Clef"
       d="m 3365.024,1453.429 h -9.18 c -0.716,0 -1.074,-0.32 -1.074,-0.97 v -48.05 c 0,-0.65 0.358,-0.98 1.074,-0.98 h 9.18 c 0.651,0 0.976,0.33 0.976,0.98 v 48.05 c 0,0.65 -0.325,0.97 -0.976,0.97 m -22.071,0 h -9.277 c -0.651,0 -0.976,-0.32 -0.976,-0.97 v -48.05 c 0,-0.65 0.325,-0.98 0.976,-0.98 h 9.277 c 0.717,0 1.075,0.33 1.075,0.98 v 48.05 c 0,0.65 -0.358,0.97 -1.075,0.97"
       id="path227" />
    <path
       class="Clef"
       d="m 3365.024,1053.432 h -9.18 c -0.716,0 -1.074,-0.326 -1.074,-0.977 v -48.047 c 0,-0.651 0.358,-0.976 1.074,-0.976 h 9.18 c 0.651,0 0.976,0.325 0.976,0.976 v 48.047 c 0,0.651 -0.325,0.977 -0.976,0.977 m -22.071,0 h -9.277 c -0.651,0 -0.976,-0.326 -0.976,-0.977 v -48.047 c 0,-0.651 0.325,-0.976 0.976,-0.976 h 9.277 c 0.717,0 1.075,0.325 1.075,0.976 v 48.047 c 0,0.651 -0.358,0.977 -1.075,0.977"
       id="path228" />
    <path
       class="Clef"
       d="m 3365.024,2053.429 h -9.18 c -0.716,0 -1.074,-0.32 -1.074,-0.97 v -48.05 c 0,-0.65 0.358,-0.98 1.074,-0.98 h 9.18 c 0.651,0 0.976,0.33 0.976,0.98 v 48.05 c 0,0.65 -0.325,0.97 -0.976,0.97 m -22.071,0 h -9.277 c -0.651,0 -0.976,-0.32 -0.976,-0.97 v -48.05 c 0,-0.65 0.325,-0.98 0.976,-0.98 h 9.277 c 0.717,0 1.075,0.33 1.075,0.98 v 48.05 c 0,0.65 -0.358,0.97 -1.075,0.97"
       id="path230" />
    <path
       class="Clef"
       d="m 3365.024,653.432 h -9.18 c -0.716,0 -1.074,-0.326 -1.074,-0.977 v -48.047 c 0,-0.651 0.358,-0.976 1.074,-0.976 h 9.18 c 0.651,0 0.976,0.325 0.976,0.976 v 48.047 c 0,0.651 -0.325,0.977 -0.976,0.977 m -22.071,0 h -9.277 c -0.651,0 -0.976,-0.326 -0.976,-0.977 v -48.047 c 0,-0.651 0.325,-0.976 0.976,-0.976 h 9.277 c 0.717,0 1.075,0.325 1.075,0.976 v 48.047 c 0,0.651 -0.358,0.977 -1.075,0.977"
       id="path231" />
    <path
       class="Clef"
       d="m 3365.024,1853.429 h -9.18 c -0.716,0 -1.074,-0.32 -1.074,-0.97 v -48.05 c 0,-0.65 0.358,-0.98 1.074,-0.98 h 9.18 c 0.651,0 0.976,0.33 0.976,0.98 v 48.05 c 0,0.65 -0.325,0.97 -0.976,0.97 m -22.071,0 h -9.277 c -0.651,0 -0.976,-0.32 -0.976,-0.97 v -48.05 c 0,-0.65 0.325,-0.98 0.976,-0.98 h 9.277 c 0.717,0 1.075,0.33 1.075,0.98 v 48.05 c 0,0.65 -0.358,0.97 -1.075,0.97"
       id="path232" />
    <path
       class="Clef"
       d="m 3365.024,1253.429 h -9.18 c -0.716,0 -1.074,-0.32 -1.074,-0.97 v -48.05 c 0,-0.65 0.358,-0.98 1.074,-0.98 h 9.18 c 0.651,0 0.976,0.33 0.976,0.98 v 48.05 c 0,0.65 -0.325,0.97 -0.976,0.97 m -22.071,0 h -9.277 c -0.651,0 -0.976,-0.32 -0.976,-0.97 v -48.05 c 0,-0.65 0.325,-0.98 0.976,-0.98 h 9.277 c 0.717,0 1.075,0.33 1.075,0.98 v 48.05 c 0,0.65 -0.358,0.97 -1.075,0.97"
       id="path233" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 4060.053,2065.929 h 490.495 v 12.5 h -490.495 v -12.5"
       id="path262"
       style="stroke-width:0.997969" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 3408.438,2065.929 h 491.0736 v 12.5 H 3408.438 v -12.5"
       id="path270"
       style="stroke-width:0.998563" />
    <path
       class="Tuplet"
       d="m 3977.911,1885.039 -13.58,23.24 h -2.45 l 12.845,-20.93 -0.07,-0.11 h -7.77 c -1.004,0 -1.82,0.17 -2.45,0.51 -0.63,0.34 -1.365,1.01 -2.205,2.01 l -0.49,-0.31 2.835,-4.76 h 13.125 l 0.21,0.35"
       id="path274" />
    <polyline
       class="Tuplet"
       fill="none"
       stroke="#000000"
       stroke-width="1.75"
       stroke-linejoin="miter"
       stroke-miterlimit="2"
       points="246.295,1817.27 246.295,1834.77 794.973,1834.77"
       id="polyline274"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Tuplet"
       fill="none"
       stroke="#000000"
       stroke-width="1.75"
       stroke-linejoin="miter"
       stroke-miterlimit="2"
       points="836.129,1834.77 1384.81,1834.77 1384.81,1817.27"
       id="polyline275"
       transform="translate(3154.268,61.699)" />
    <path
       class="Tuplet"
       d="m 3841.182,1095.139 c 5.577,-0.91 8.365,-2.84 8.365,-5.81 0,-0.95 -0.286,-1.72 -0.857,-2.31 -0.572,-0.58 -1.324,-0.87 -2.258,-0.87 -1.423,0 -2.73,0.78 -3.92,2.34 l -0.56,-0.17 c 0.584,-1.12 1.383,-2.01 2.398,-2.66 1.015,-0.65 2.129,-0.98 3.342,-0.98 1.4,0 2.567,0.42 3.5,1.26 0.934,0.84 1.4,1.9 1.4,3.18 0,1.19 -0.379,2.15 -1.137,2.87 -0.759,0.73 -2.199,1.5 -4.323,2.31 v 0.11 c 2.24,1.03 3.36,2.76 3.36,5.21 0,2.43 -0.898,4.53 -2.695,6.3 -1.796,1.78 -4.153,2.66 -7.07,2.66 -2.613,0 -3.92,-0.68 -3.92,-2.06 0,-0.91 0.514,-1.37 1.54,-1.37 0.584,0 1.365,0.35 2.345,1.05 0.98,0.7 1.785,1.05 2.415,1.05 1.26,0 2.339,-0.53 3.238,-1.59 0.898,-1.06 1.347,-2.44 1.347,-4.15 0,-2.19 -0.548,-3.71 -1.645,-4.55 -1.096,-0.84 -2.718,-1.26 -4.865,-1.26 v -0.56"
       id="path276" />
    <polyline
       class="Tuplet"
       fill="none"
       stroke="#000000"
       stroke-width="1.75"
       stroke-linejoin="miter"
       stroke-miterlimit="2"
       points="245.663,1017.43 245.663,1034.93 670.03,1034.93"
       id="polyline276"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Tuplet"
       fill="none"
       stroke="#000000"
       stroke-width="1.75"
       stroke-linejoin="miter"
       stroke-miterlimit="2"
       points="710.811,1034.93 1135.18,1034.93 1135.18,1017.43"
       id="polyline277"
       transform="translate(3154.268,61.699)" />
    <path
       class="Tuplet"
       d="m 3962.866,1681.939 v 0.56 c -2.053,0.23 -4.135,1.15 -6.247,2.75 -2.112,1.59 -3.786,3.5 -5.023,5.72 l 0.14,0.07 c 1.05,-0.49 2.089,-0.74 3.115,-0.74 1.727,0 3.15,0.58 4.27,1.74 1.12,1.15 1.68,2.63 1.68,4.42 0,2.64 -0.863,4.92 -2.59,6.85 -1.726,1.92 -3.768,2.88 -6.125,2.88 -1.936,0 -3.488,-0.67 -4.655,-2.01 -1.166,-1.34 -1.75,-3.13 -1.75,-5.37 0,-2.5 0.636,-4.92 1.908,-7.26 1.272,-2.35 3.016,-4.35 5.232,-6.01 1.517,-1.12 2.987,-1.93 4.41,-2.45 1.424,-0.51 3.302,-0.89 5.635,-1.15 m -11.13,23.34 c 1.097,0 2.065,-0.38 2.905,-1.13 0.84,-0.76 1.465,-1.69 1.873,-2.79 0.408,-1.09 0.706,-2.1 0.892,-3.02 0.187,-0.93 0.28,-1.7 0.28,-2.33 0,-1.35 -0.361,-2.43 -1.085,-3.24 -0.723,-0.8 -1.691,-1.21 -2.905,-1.21 -1.563,0 -2.811,0.77 -3.745,2.31 -0.466,0.77 -0.851,1.81 -1.155,3.12 -0.303,1.31 -0.455,2.54 -0.455,3.71 0,1.45 0.298,2.57 0.893,3.38 0.595,0.8 1.429,1.2 2.502,1.2"
       id="path282" />
    <polyline
       class="Tuplet"
       fill="none"
       stroke="#000000"
       stroke-width="1.75"
       stroke-linejoin="miter"
       stroke-miterlimit="2"
       points="246.295,1614.86 246.295,1632.36 778.902,1632.36"
       id="polyline282"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Tuplet"
       fill="none"
       stroke="#000000"
       stroke-width="1.75"
       stroke-linejoin="miter"
       stroke-miterlimit="2"
       points="821.074,1632.36 1353.68,1632.36 1353.68,1614.86"
       id="polyline283"
       transform="translate(3154.268,61.699)" />
    <path
       class="Tuplet"
       d="m 3935.875,1499.529 c 0,-0.96 -0.163,-1.81 -0.49,-2.56 -0.326,-0.75 -0.7,-1.33 -1.12,-1.75 -0.42,-0.42 -1.015,-0.8 -1.785,-1.14 -0.77,-0.34 -1.388,-0.56 -1.855,-0.68 -0.466,-0.12 -1.108,-0.27 -1.925,-0.45 -0.233,-0.05 -0.396,-0.09 -0.49,-0.11 v -0.52 l 3.64,-7.63 h 8.96 l -0.805,2.48 h -8.05 l -1.365,3.08 c 1.424,0.35 2.515,0.7 3.273,1.05 0.758,0.35 1.464,0.83 2.117,1.44 1.54,1.47 2.31,3.29 2.31,5.46 0,2.77 -1.015,5.14 -3.045,7.1 -2.03,1.96 -4.491,2.94 -7.385,2.94 -1.143,0 -2.047,-0.18 -2.712,-0.54 -0.665,-0.36 -0.998,-0.85 -0.998,-1.45 0,-0.42 0.135,-0.76 0.403,-1.02 0.268,-0.26 0.612,-0.38 1.032,-0.38 0.444,0 1.115,0.32 2.013,0.96 0.898,0.64 1.662,0.96 2.292,0.96 1.587,0 2.981,-0.73 4.183,-2.19 1.202,-1.46 1.802,-3.14 1.802,-5.05"
       id="path285" />
    <polyline
       class="Tuplet"
       fill="none"
       stroke="#000000"
       stroke-width="1.75"
       stroke-linejoin="miter"
       stroke-miterlimit="2"
       points="246.295,1417.26 246.295,1434.76 757.373,1434.76"
       id="polyline285"
       transform="translate(3154.268,61.699)" />
    <polyline
       class="Tuplet"
       fill="none"
       stroke="#000000"
       stroke-width="1.75"
       stroke-linejoin="miter"
       stroke-miterlimit="2"
       points="799.029,1434.76 1310.11,1434.76 1310.11,1417.26"
       id="polyline286"
       transform="translate(3154.268,61.699)" />
    <path
       class="Clef"
       d="m 3365.024,853.432 h -9.18 c -0.716,0 -1.074,-0.326 -1.074,-0.977 v -48.047 c 0,-0.651 0.358,-0.976 1.074,-0.976 h 9.18 c 0.651,0 0.976,0.325 0.976,0.976 v 48.047 c 0,0.651 -0.325,0.977 -0.976,0.977 m -22.071,0 h -9.277 c -0.651,0 -0.976,-0.326 -0.976,-0.977 v -48.047 c 0,-0.651 0.325,-0.976 0.976,-0.976 h 9.277 c 0.717,0 1.075,0.325 1.075,0.976 v 48.047 c 0,0.651 -0.358,0.977 -1.075,0.977"
       id="path288" />
    <text
       xml:space="preserve"
       id="text1"
       style="font-style:italic;font-size:48px;font-family:Calibri;-inkscape-font-specification:'Calibri Italic';text-align:center;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect1);display:inline;fill:none;stroke:#000000;stroke-width:1;stroke-linejoin:round;stroke-dasharray:1, 2;stroke-dashoffset:0"
       x="0"
       y="0"
       transform="translate(4634.2621,280.48473)"><tspan
         x="128.77832"
         y="360.00195"
         id="tspan2"><tspan
           style="font-style:normal;-inkscape-font-specification:Calibri;fill:#000000;stroke:none"
           id="tspan1">(1)</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text4"
       style="font-style:italic;font-size:48px;font-family:Calibri;-inkscape-font-specification:'Calibri Italic';text-align:center;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect4);display:inline;fill:none;stroke:#000000;stroke-width:1;stroke-linejoin:round;stroke-dasharray:1, 2;stroke-dashoffset:0"
       x="0"
       y="0"
       transform="translate(4634.2621,480.48473)"><tspan
         x="128.77832"
         y="360.00195"
         id="tspan4"><tspan
           style="font-style:normal;-inkscape-font-specification:Calibri;fill:#000000;stroke:none"
           id="tspan3">(2)</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text6"
       style="font-style:italic;font-size:48px;font-family:Calibri;-inkscape-font-specification:'Calibri Italic';text-align:center;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect7);display:inline;fill:none;stroke:#000000;stroke-width:1;stroke-linejoin:round;stroke-dasharray:1, 2;stroke-dashoffset:0"
       x="0"
       y="0"
       transform="translate(4634.2621,680.48473)"><tspan
         x="128.77832"
         y="360.00195"
         id="tspan6"><tspan
           style="font-style:normal;-inkscape-font-specification:Calibri;fill:#000000;stroke:none"
           id="tspan5">(3)</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text8"
       style="font-style:italic;font-size:48px;font-family:Calibri;-inkscape-font-specification:'Calibri Italic';text-align:center;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect8);display:inline;fill:none;stroke:#000000;stroke-width:1;stroke-linejoin:round;stroke-dasharray:1, 2;stroke-dashoffset:0"
       x="0"
       y="0"
       transform="translate(4634.2621,880.48473)"><tspan
         x="128.77832"
         y="360.00195"
         id="tspan8"><tspan
           style="font-style:normal;-inkscape-font-specification:Calibri;fill:#000000;stroke:none"
           id="tspan7">(4)</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text10"
       style="font-style:italic;font-size:48px;font-family:Calibri;-inkscape-font-specification:'Calibri Italic';text-align:center;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect10);display:inline;fill:none;stroke:#000000;stroke-width:1;stroke-linejoin:round;stroke-dasharray:1, 2;stroke-dashoffset:0"
       x="0"
       y="0"
       transform="translate(4634.2621,1080.4847)"><tspan
         x="128.77832"
         y="360.00195"
         id="tspan10"><tspan
           style="font-style:normal;-inkscape-font-specification:Calibri;fill:#000000;stroke:none"
           id="tspan9">(5)</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text12"
       style="font-style:italic;font-size:48px;font-family:Calibri;-inkscape-font-specification:'Calibri Italic';text-align:center;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect12);display:inline;fill:none;stroke:#000000;stroke-width:1;stroke-linejoin:round;stroke-dasharray:1, 2;stroke-dashoffset:0"
       x="0"
       y="0"
       transform="translate(4634.2621,1280.4847)"><tspan
         x="128.77832"
         y="360.00195"
         id="tspan12"><tspan
           style="font-style:normal;-inkscape-font-specification:Calibri;fill:#000000;stroke:none"
           id="tspan11">(6)</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text14"
       style="font-style:italic;font-size:48px;font-family:Calibri;-inkscape-font-specification:'Calibri Italic';text-align:center;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect14);display:inline;fill:none;stroke:#000000;stroke-width:1;stroke-linejoin:round;stroke-dasharray:1, 2;stroke-dashoffset:0"
       x="0"
       y="0"
       transform="translate(4634.2621,1480.4847)"><tspan
         x="128.77832"
         y="360.00195"
         id="tspan14"><tspan
           style="font-style:normal;-inkscape-font-specification:Calibri;fill:#000000;stroke:none"
           id="tspan13">(7)</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text16"
       style="font-style:italic;font-size:48px;font-family:Calibri;-inkscape-font-specification:'Calibri Italic';text-align:center;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect16);display:inline;fill:none;stroke:#000000;stroke-width:1;stroke-linejoin:round;stroke-dasharray:1, 2;stroke-dashoffset:0"
       x="0"
       y="0"
       transform="translate(4634.2621,1680.4847)"><tspan
         x="128.77832"
         y="360.00195"
         id="tspan16"><tspan
           style="font-style:normal;-inkscape-font-specification:Calibri;fill:#000000;stroke:none"
           id="tspan15">(8)</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text2"
       style="font-weight:bold;font-size:47.3007px;line-height:normal;font-family:'Mukta Mahee';-inkscape-font-specification:'Mukta Mahee Bold';text-align:justify;text-decoration-color:#000000;letter-spacing:1.01359px;word-spacing:2.02717px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect2);display:inline;fill:none;stroke:#808080;stroke-width:6.08152;stroke-dasharray:6.08152, 6.08152"
       y="0"
       x="0"
       transform="matrix(0.97337192,0,0,1,-17.902744,0)"><tspan
         x="518.07031"
         y="691.86684"
         id="tspan18"><tspan
           dx="0 0 0 -2.0271711 48.760201 0 -2.0271673 48.760212 0 -2.0271673 48.760197 0 -2.0271673 48.760197 0 0 0 -2.0271673 46.733055 48.760166 0 -2.0271368 48.760166 0 -2.0271978 48.760227 0 -2.0271978 48.760227 0 -2.0271368 48.760166 0 0 0 -2.0271368 48.760166 0 -2.0272589"
           style="font-weight:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';fill:#000000;stroke:none"
           id="tspan17">[1, 0, 0, 0, ...,  1, 0, 0, 0, ..., 0] </tspan></tspan><tspan
         x="518.07031"
         y="757.39644"
         id="tspan20"><tspan
           dx="0 -2.0271702 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2.0271635"
           style="font-weight:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';fill:#000000;stroke:none"
           id="tspan19">-                              .</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text18"
       style="font-weight:bold;font-size:53.3333px;line-height:normal;font-family:'Mukta Mahee';-inkscape-font-specification:'Mukta Mahee Bold';text-align:justify;text-decoration-color:#000000;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect18);display:inline;fill:none;stroke:#808080;stroke-width:6;stroke-dasharray:6, 6"
       x="0"
       y="0"
       transform="translate(0,-300)"><tspan
         x="518.07031"
         y="697.53922"
         id="tspan22"><tspan
           dx="0 0 0 -2.0000038 2.0000038 0 -2.0000038 2.0000038 0 -1.9999962 2.0000038 0 0 0 -2.0000114 2.0000191 0 -2.0000114 2.0000191 0 -2.0000114 1.9999886 0 -1.9999809"
           style="font-weight:normal;font-family:Helvetica;-inkscape-font-specification:Helvetica;fill:#000000;stroke:none"
           id="tspan21">[1, 0, 0, ..., 1, 0, 0] </tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text44"
       style="font-weight:bold;font-size:47.3007px;line-height:normal;font-family:'Mukta Mahee';-inkscape-font-specification:'Mukta Mahee Bold';text-align:justify;text-decoration-color:#000000;letter-spacing:1.01359px;word-spacing:2.02717px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect44);display:inline;fill:none;stroke:#808080;stroke-width:6.08152;stroke-dasharray:6.08152, 6.08152"
       y="0"
       x="0"
       transform="matrix(0.97337192,0,0,1,-17.902744,180)"><tspan
         x="518.07031"
         y="691.86684"
         id="tspan24"><tspan
           dx="0 0 0 -2.0271711 28.271452 0 -2.0271749 28.271456 0 -2.0271673 26.244272 28.271456 0 0 0 -2.0271673 28.271425 0 -2.0271673 28.271456 0 -2.0271978 28.271456 0 -2.0271978 26.244287 28.271456 0 0 0 -2.0271978 28.271456 0 -2.0271978 28.271456 0 -2.0271978 28.271456 0 -2.0271978 28.271456 0 0 0 -2.0271368 28.271395 0 -2.0272589"
           style="font-weight:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';fill:#000000;stroke:none"
           id="tspan23">[1, 0, 0,  ..., 1, 0, 0,  ..., 1, 0, 0, ..., 0] </tspan></tspan><tspan
         x="518.07031"
         y="757.39644"
         id="tspan26"><tspan
           dx="0 -2.0271702 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2.027194"
           style="font-weight:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';fill:#000000;stroke:none"
           id="tspan25">-                                .</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text45"
       style="font-weight:bold;font-size:47.3007px;line-height:normal;font-family:'Mukta Mahee';-inkscape-font-specification:'Mukta Mahee Bold';text-align:justify;text-decoration-color:#000000;letter-spacing:1.01359px;word-spacing:2.02717px;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect45);display:inline;fill:none;stroke:#808080;stroke-width:6.08152;stroke-dasharray:6.08152, 6.08152"
       y="0"
       x="0"
       transform="matrix(0.97337192,0,0,1,-17.902744,360)"><tspan
         x="518.07031"
         y="691.86684"
         id="tspan28"><tspan
           dx="0 0 0 -2.0271711 24.433287 0 -2.0271673 24.43329 0 0 0 -2.0271673 22.406122 24.43329 0 -2.0271673 24.43329 0 -2.0271673 24.43329 0 0 0 -2.0271978 22.406153 24.43326 0 -2.0271368 24.43326 0 -2.0271978 24.433321 0 0 0 -2.0271978 22.406153 24.43326 0 -2.0271978 24.433321 0 -2.0271978 24.43326 0 0 0 -2.0271368 24.43326 0 -2.0272589"
           style="font-weight:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';fill:#000000;stroke:none"
           id="tspan27">[1, 0, ...,  1, 0, ...,  1, 0, ...,  1, 0, ..., 0] </tspan></tspan><tspan
         x="518.07031"
         y="757.39644"
         id="tspan30"><tspan
           dx="0 -2.0271702 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2.027194"
           style="font-weight:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';fill:#000000;stroke:none"
           id="tspan29">-                                .</tspan></tspan></text>
    <text
       x="735.64703"
       y="1437.8617"
       style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
       transform="scale(0.98659617,1.0135859)"
       id="text51"><tspan
         x="735.64703"
         y="1437.8617"
         id="tspan50"
         style="stroke-width:6">.</tspan></text>
    <g
       id="g148">
      <text
         x="1628.0989"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text53"><tspan
           x="1628.0989"
           y="1373.2104"
           id="tspan52"
           style="stroke-width:6">0]</tspan></text>
      <text
         x="1568.3627"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text54"><tspan
           x="1568.3627"
           y="1373.2104"
           id="tspan53"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="1522.0437"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text55"><tspan
           x="1522.0437"
           y="1373.2104"
           id="tspan54"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="1463.0597"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text56"><tspan
           x="1463.0597"
           y="1373.2104"
           id="tspan55"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="1394.168"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text57"><tspan
           x="1394.168"
           y="1373.2104"
           id="tspan56"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="1337.7134"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text58"><tspan
           x="1337.7134"
           y="1373.2104"
           id="tspan57"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="1278.7294"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text59"><tspan
           x="1278.7294"
           y="1373.2104"
           id="tspan58"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="1203.756"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text60"><tspan
           x="1203.756"
           y="1373.2104"
           id="tspan59"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="1147.3014"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text61"><tspan
           x="1147.3014"
           y="1373.2104"
           id="tspan60"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="1088.3174"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text62"><tspan
           x="1088.3174"
           y="1373.2104"
           id="tspan61"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="1015.3713"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text63"><tspan
           x="1015.3713"
           y="1373.2104"
           id="tspan62"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="958.91656"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text64"><tspan
           x="958.91656"
           y="1373.2104"
           id="tspan63"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="899.93256"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text65"><tspan
           x="899.93256"
           y="1373.2104"
           id="tspan64"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="818.87775"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text66"><tspan
           x="818.87775"
           y="1373.2104"
           id="tspan65"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="762.4231"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text67"><tspan
           x="762.4231"
           y="1373.2104"
           id="tspan66"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="703.43909"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text68"><tspan
           x="703.43909"
           y="1373.2104"
           id="tspan67"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="628.46588"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text69"><tspan
           x="628.46588"
           y="1373.2104"
           id="tspan68"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="572.01123"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text70"><tspan
           x="572.01123"
           y="1373.2104"
           id="tspan69"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="499.06174"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text71"><tspan
           x="499.06174"
           y="1373.2104"
           id="tspan70"
           style="stroke-width:6">[1,</tspan></text>
    </g>
    <g
       id="g166"
       transform="translate(0,-180)">
      <text
         x="1628.0989"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text148"><tspan
           x="1628.0989"
           y="1373.2104"
           id="tspan148"
           style="stroke-width:6">0]</tspan></text>
      <text
         x="1568.3627"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text149"><tspan
           x="1568.3627"
           y="1373.2104"
           id="tspan149"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="1522.0437"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text150"><tspan
           x="1522.0437"
           y="1373.2104"
           id="tspan150"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="1463.0597"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text151"><tspan
           x="1463.0597"
           y="1373.2104"
           id="tspan151"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="1394.168"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text152"><tspan
           x="1394.168"
           y="1373.2104"
           id="tspan152"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="1337.7134"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text153"><tspan
           x="1337.7134"
           y="1373.2104"
           id="tspan153"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="1278.7294"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text154"><tspan
           x="1278.7294"
           y="1373.2104"
           id="tspan154"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="1203.756"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text155"><tspan
           x="1203.756"
           y="1373.2104"
           id="tspan155"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="1147.3014"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text156"><tspan
           x="1147.3014"
           y="1373.2104"
           id="tspan156"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="1088.3174"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text157"><tspan
           x="1088.3174"
           y="1373.2104"
           id="tspan157"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="1015.3713"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text158"><tspan
           x="1015.3713"
           y="1373.2104"
           id="tspan158"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="958.91656"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text159"><tspan
           x="958.91656"
           y="1373.2104"
           id="tspan159"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="899.93256"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text160"><tspan
           x="899.93256"
           y="1373.2104"
           id="tspan160"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="818.87775"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text161"><tspan
           x="818.87775"
           y="1373.2104"
           id="tspan161"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="762.4231"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text162"><tspan
           x="762.4231"
           y="1373.2104"
           id="tspan162"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="703.43909"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text163"><tspan
           x="703.43909"
           y="1373.2104"
           id="tspan163"
           style="stroke-width:6">1,</tspan></text>
      <text
         x="628.46588"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text164"><tspan
           x="628.46588"
           y="1373.2104"
           id="tspan164"
           style="stroke-width:6">...,</tspan></text>
      <text
         x="572.01123"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text165"><tspan
           x="572.01123"
           y="1373.2104"
           id="tspan165"
           style="stroke-width:6">0,</tspan></text>
      <text
         x="499.06174"
         y="1373.2104"
         style="font-weight:normal;font-size:46.6667px;line-height:normal;font-family:Helvetica;-inkscape-font-specification:'Helvetica, Normal';text-align:justify;letter-spacing:1px;word-spacing:2px;writing-mode:lr-tb;white-space:pre;fill:#000000;stroke:none;stroke-width:6;stroke-dasharray:6, 6"
         transform="scale(0.9865962,1.0135859)"
         id="text166"><tspan
           x="499.06174"
           y="1373.2104"
           id="tspan166"
           style="stroke-width:6">[1,</tspan></text>
    </g>
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Layer 2">
    <path
       style="fill:none;stroke:#808080;stroke-width:5;stroke-dasharray:10, 20;stroke-dashoffset:0"
       d="M -748.33,525.7287 V 2131.4713"
       id="path220"
       inkscape:export-filename="metricCycle_b.pdf"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <path
       style="fill:none;stroke:#808080;stroke-width:4;stroke-dasharray:8, 16;stroke-dashoffset:0"
       d="M -1032.33,525.7287 V 2131.4713"
       id="path221" />
    <path
       style="fill:none;stroke:#808080;stroke-width:4;stroke-dasharray:8, 16;stroke-dashoffset:0"
       d="M -464.33,525.7287 V 2131.4713"
       id="path222" />
    <path
       style="fill:none;stroke:#808080;stroke-width:3;stroke-dasharray:6, 12;stroke-dashoffset:0"
       d="M -558.33,525.7287 V 2131.4713"
       id="path223" />
    <path
       style="fill:none;stroke:#808080;stroke-width:3;stroke-dasharray:6, 12;stroke-dashoffset:0"
       d="M -938.33,525.7287 V 2131.4713"
       id="path224" />
    <path
       style="fill:none;stroke:#808080;stroke-width:2;stroke-dasharray:4, 8;stroke-dashoffset:0"
       d="M -1128.33,525.7287 V 2131.4713"
       id="path225" />
    <path
       style="fill:none;stroke:#808080;stroke-width:2;stroke-dasharray:4, 8;stroke-dashoffset:0"
       d="M -368.33,525.7287 V 2131.4713"
       id="path226" />
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer1"
     inkscape:label="Layer 1">
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,634.198 1648.6,634.198"
       id="polyline1" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,807.799 1648.6,807.799"
       id="polyline2" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,981.399 1648.6,981.399"
       id="polyline3" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,1155 1648.6,1155"
       id="polyline4" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,1328.6 1648.6,1328.6"
       id="polyline5" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,1502.2 1648.6,1502.2"
       id="polyline6" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,1675.8 1648.6,1675.8"
       id="polyline7" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,1849.4 1648.6,1849.4"
       id="polyline8" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="2.73"
       stroke-linejoin="bevel"
       points="336.599,2023 1648.6,2023"
       id="polyline9" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,1104.03 1646.37,1205.96"
       id="polyline20" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,1277.64 1646.37,1379.56"
       id="polyline23" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,1451.24 1646.37,1553.16"
       id="polyline25" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,1624.84 1646.37,1726.76"
       id="polyline30" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,583.234 1646.37,685.162"
       id="polyline31" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,930.435 1646.37,1032.36"
       id="polyline33" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,1798.44 1646.37,1900.36"
       id="polyline34" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,1972.04 1646.37,2073.96"
       id="polyline36" />
    <polyline
       class="BarLine"
       fill="none"
       stroke="#000000"
       stroke-width="4.46"
       stroke-linejoin="bevel"
       points="1646.37,756.835 1646.37,858.763"
       id="polyline44" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1197.58,1671.83 1197.58,1613.8"
       id="polyline45" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1548.22,1498.23 1548.22,1440.2"
       id="polyline46" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1220.25,1845.43 1220.25,1787.4"
       id="polyline47" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1106.53,1151.03 1106.53,1093"
       id="polyline48"
       transform="translate(-3.7869797e-5,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="537.944,630.23 537.944,572.198"
       id="polyline49" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1296.06,1151.03 1296.06,1093"
       id="polyline50" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1106.53,630.23 1106.53,572.198"
       id="polyline51" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1485.59,1151.03 1485.59,1093"
       id="polyline52" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="537.944,803.831 537.944,745.799"
       id="polyline53"
       transform="translate(-6.5978622e-6,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="917.003,803.831 917.003,745.799"
       id="polyline54" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1296.06,803.831 1296.06,745.799"
       id="polyline55" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="537.944,977.431 537.944,919.399"
       id="polyline56"
       transform="translate(-6.5978622e-6,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="727.473,1151.03 727.473,1093"
       id="polyline57" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="822.238,977.431 822.238,919.399"
       id="polyline58" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1106.53,977.431 1106.53,919.399"
       id="polyline59"
       transform="translate(-3.7869797e-5,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1511.96,2019.03 1511.96,1961"
       id="polyline60" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="532.999,1324.63 532.999,1266.6"
       id="polyline61"
       transform="translate(4.9439934,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1348.8,2019.03 1348.8,1961"
       id="polyline62" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1185.64,2019.03 1185.64,1961"
       id="polyline63" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="723.353,1324.63 723.353,1266.6"
       id="polyline64" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1022.48,2019.03 1022.48,1961"
       id="polyline65" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="913.707,1324.63 913.707,1266.6"
       id="polyline66"
       transform="translate(3.2959959,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="859.32,2019.03 859.32,1961"
       id="polyline67" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1104.06,1324.63 1104.06,1266.6"
       id="polyline68"
       transform="translate(2.4699621,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="696.16,2019.03 696.16,1961"
       id="polyline69" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="532.999,2019.03 532.999,1961"
       id="polyline70"
       transform="translate(4.9439934,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1294.41,1324.63 1294.41,1266.6"
       id="polyline71"
       transform="translate(1.6499584,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1390.83,977.431 1390.83,919.399"
       id="polyline72" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1484.77,1324.63 1484.77,1266.6"
       id="polyline73" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="917.003,1151.03 917.003,1093"
       id="polyline74"
       transform="translate(-4.1387924e-6,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1447.69,1845.43 1447.69,1787.4"
       id="polyline75" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="992.815,1845.43 992.815,1787.4"
       id="polyline76" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="765.379,1845.43 765.379,1787.4"
       id="polyline77" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="537.944,1151.03 537.944,1093"
       id="polyline78"
       transform="translate(-6.5978622e-6,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="537.944,1845.43 537.944,1787.4"
       id="polyline79"
       transform="translate(-6.5978622e-6,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1579.61,1671.83 1579.61,1613.8"
       id="polyline80" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1484.1,1671.83 1484.1,1613.8"
       id="polyline81" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="532.999,1498.23 532.999,1440.2"
       id="polyline82"
       transform="translate(4.9439934,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1388.6,1671.83 1388.6,1613.8"
       id="polyline83" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1293.09,1671.83 1293.09,1613.8"
       id="polyline84" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="659.902,1498.23 659.902,1440.2"
       id="polyline85" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1102.07,1671.83 1102.07,1613.8"
       id="polyline86"
       transform="translate(4.4699772,-0.0496)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="786.804,1498.23 786.804,1440.2"
       id="polyline87" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1006.56,1671.83 1006.56,1613.8"
       id="polyline88" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="913.707,1498.23 913.707,1440.2"
       id="polyline89"
       transform="translate(3.2959959,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="911.051,1671.83 911.051,1613.8"
       id="polyline90" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="815.542,1671.83 815.542,1613.8"
       id="polyline91" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1040.61,1498.23 1040.61,1440.2"
       id="polyline92" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="720.033,1671.83 720.033,1613.8"
       id="polyline93" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1167.51,1498.23 1167.51,1440.2"
       id="polyline94" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="624.525,1671.83 624.525,1613.8"
       id="polyline95" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1294.41,1498.23 1294.41,1440.2"
       id="polyline96"
       transform="translate(1.6499584,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="529.016,1671.83 529.016,1613.8"
       id="polyline97"
       transform="translate(8.9279934,-0.04960005)" />
    <polyline
       class="Stem"
       fill="none"
       stroke="#000000"
       stroke-width="2.48"
       stroke-linejoin="bevel"
       points="1421.32,1498.23 1421.32,1440.2"
       id="polyline98" />
    <path
       class="Note"
       d="m 886.018,1159.1168 c 0,4.2656 3.0752,9.0272 11.11041,9.0272 10.31681,0 21.12962,-8.432 21.12962,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11041,-9.1264 -9.62241,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path98"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       d="m 506.95899,1159.1168 c 0,4.2656 3.07521,9.0272 11.11041,9.0272 10.31682,0 21.12963,-8.432 21.12963,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11042,-9.1264 -9.6224,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path99"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1480.98,2023)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path100" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1517.23,1502.2)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path101" />
    <path
       class="Note"
       d="m 1075.55,1159.1168 c 0,4.2656 3.0752,9.0272 11.1104,9.0272 10.3168,0 21.1296,-8.432 21.1296,-17.1616 0,-5.8528 -4.96,-9.1264 -11.1104,-9.1264 -9.6224,0 -21.1296,8.1344 -21.1296,17.2608"
       id="path102"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,506.959,634.198)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path103" />
    <path
       class="Note"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path104"
       transform="matrix(0.992001,0,0,0.992001,1265.08,1155)" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1075.55,634.198)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path105" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1454.61,1155)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path106" />
    <path
       class="Note"
       d="m 506.95899,811.9158 c 0,4.26561 3.07521,9.02721 11.11041,9.02721 10.31682,0 21.12963,-8.43201 21.12963,-17.16161 0,-5.85281 -4.96001,-9.12641 -11.11042,-9.12641 -9.6224,0 -21.12962,8.1344 -21.12962,17.26081"
       id="path107"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,696.489,1155)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path108" />
    <path
       class="Note"
       d="m 1265.08,1506.3168 c 0,4.2656 3.0752,9.0272 11.1104,9.0272 10.3168,0 21.1296,-8.432 21.1296,-17.1616 0,-5.8528 -4.96,-9.1264 -11.1104,-9.1264 -9.6224,0 -21.1296,8.1344 -21.1296,17.2608"
       id="path109"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       d="m 506.95899,1679.9168 c 0,4.2656 3.07521,9.0272 11.11041,9.0272 10.31682,0 21.12963,-8.432 21.12963,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11042,-9.1264 -9.6224,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path110"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,886.018,807.799)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path111" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1136.53,1502.2)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path112" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,593.54,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path113" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1009.62,1502.2)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path114" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,689.049,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path115" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1265.08,807.799)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path116" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,784.558,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path117" />
    <path
       class="Note"
       d="m 506.95899,985.5158 c 0,4.26561 3.07521,9.02721 11.11041,9.02721 10.31682,0 21.12963,-8.43201 21.12963,-17.16161 0,-5.85281 -4.96001,-9.12641 -11.11042,-9.12641 -9.6224,0 -21.12962,8.1344 -21.12962,17.26081"
       id="path118"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       d="m 886.018,1506.3168 c 0,4.2656 3.0752,9.0272 11.11041,9.0272 10.31681,0 21.12962,-8.432 21.12962,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11041,-9.1264 -9.62241,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path119"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path120"
       transform="matrix(0.992001,0,0,0.992001,880.066,1675.8)" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,755.82,1502.2)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path121" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,975.575,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path122" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,628.917,1502.2)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path123" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,791.254,981.399)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path124" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1390.33,1502.2)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path125" />
    <path
       class="Note"
       d="m 1075.5499,1679.9168 c 0,4.2656 3.0752,9.0272 11.1104,9.0272 10.3168,0 21.1297,-8.432 21.1297,-17.1616 0,-5.8528 -4.9601,-9.1264 -11.1105,-9.1264 -9.6224,0 -21.1296,8.1344 -21.1296,17.2608"
       id="path126"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1166.59,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path127" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1317.82,2023)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path128" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1262.1,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path129" />
    <path
       class="Note"
       d="m 506.95899,1506.3168 c 0,4.2656 3.07521,9.0272 11.11041,9.0272 10.31682,0 21.12963,-8.432 21.12963,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11042,-9.1264 -9.6224,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path130"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1357.61,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path131" />
    <path
       class="Note"
       d="m 1453.78,1332.7664 c 0,4.2656 3.0752,9.0272 11.1104,9.0272 10.3168,0 21.1296,-8.432 21.1296,-17.1616 0,-5.8528 -4.96,-9.1264 -11.1104,-9.1264 -9.6224,0 -21.1296,8.1344 -21.1296,17.2608"
       id="path132"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1154.66,2023)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path133" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1453.12,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path134" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,991.496,2023)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path135" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1548.63,1675.8)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path136" />
    <path
       class="Note"
       d="m 692.368,1332.7664 c 0,4.2656 3.0752,9.0272 11.11041,9.0272 10.31681,0 21.12962,-8.432 21.12962,-17.1616 0,-5.8528 -4.96,-9.1264 -11.11041,-9.1264 -9.62241,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path137"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,828.335,2023)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path138" />
    <path
       class="Note"
       d="m 886.018,1332.7168 c 0,4.2656 3.0752,9.0272 11.11041,9.0272 10.31681,0 21.12962,-8.432 21.12962,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11041,-9.1264 -9.62241,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path139"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1359.84,981.399)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path140" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,665.175,2023)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path141" />
    <path
       class="Note"
       d="m 1075.55,1332.7168 c 0,4.2656 3.0752,9.0272 11.1104,9.0272 10.3168,0 21.1296,-8.432 21.1296,-17.1616 0,-5.8528 -4.96,-9.1264 -11.1104,-9.1264 -9.6224,0 -21.1296,8.1344 -21.1296,17.2608"
       id="path142"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       d="m 506.95899,2027.1168 c 0,4.2656 3.07521,9.0272 11.11041,9.0272 10.31682,0 21.12963,-8.432 21.12963,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11042,-9.1264 -9.6224,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path143"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       d="m 1075.55,985.5158 c 0,4.26561 3.0752,9.02721 11.1104,9.02721 10.3168,0 21.1296,-8.43201 21.1296,-17.16161 0,-5.85281 -4.96,-9.12641 -11.1104,-9.12641 -9.6224,0 -21.1296,8.1344 -21.1296,17.26081"
       id="path144"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       d="m 506.95899,1853.5168 c 0,4.2656 3.07521,9.0272 11.11041,9.0272 10.31682,0 21.12963,-8.432 21.12963,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11042,-9.1264 -9.6224,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path145"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       d="m 1265.08,1332.7168 c 0,4.2656 3.0752,9.0272 11.1104,9.0272 10.3168,0 21.1296,-8.432 21.1296,-17.1616 0,-5.8528 -4.96,-9.1264 -11.1104,-9.1264 -9.6224,0 -21.1296,8.1344 -21.1296,17.2608"
       id="path146"
       style="stroke-width:0.992001" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,734.395,1849.4)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path147" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1416.7,1849.4)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path148" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,961.83,1849.4)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path149" />
    <path
       class="Note"
       transform="matrix(0.992001,0,0,0.992001,1189.27,1849.4)"
       d="m 0,4.2 c 0,4.3 3.1,9.1 11.2,9.1 10.4,0 21.3,-8.5 21.3,-17.3 0,-5.9 -5,-9.2 -11.2,-9.2 C 11.6,-13.2 0,-5 0,4.2"
       id="path150" />
    <path
       class="Note"
       d="m 506.95899,1332.7168 c 0,4.2656 3.07521,9.0272 11.11041,9.0272 10.31682,0 21.12963,-8.432 21.12963,-17.1616 0,-5.8528 -4.96001,-9.1264 -11.11042,-9.1264 -9.6224,0 -21.12962,8.1344 -21.12962,17.2608"
       id="path151"
       style="stroke-width:0.992001" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,1328.6)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path152" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,1502.2)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path153" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,634.198)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path156" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,981.399)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path158" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,2023)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path159" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,1155)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path160" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,807.799)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path162" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,1849.4)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path164" />
    <path
       class="Clef"
       transform="matrix(0.992001,0,0,0.992001,355.199,1675.8)"
       d="m 1.3,-25.2 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11 m 21.6,0 c -0.7,0 -1.3,0.6 -1.3,1.3 v 47.8 c 0,0.7 0.6,1.3 1.3,1.3 h 11 c 0.7,0 1.3,-0.6 1.3,-1.3 v -47.8 c 0,-0.7 -0.6,-1.3 -1.3,-1.3 h -11"
       id="path166" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,416.3,1130.69)"
       d="m 24.7,-4.8 c -6.1,0 -8.3,1.8 -9.7,3.3 -0.3,-2.1 -0.5,-3.7 -0.5,-5.3 0,-5.7 2,-13.1 9,-13.1 2.5,0 4,0.8 5,1.9 -2.1,0.9 -3.8,3.6 -3.8,5.9 0,3.6 2.8,6.4 6.4,6.4 3.6,0 6.5,-2.8 6.5,-6.4 v -0.3 c 0,-0.9 -0.2,-2.4 -0.6,-3.2 -1.3,-3.6 -5.5,-8.9 -15.5,-8.9 -9,0 -15.5,8.6 -17.5,13.2 -1,2.4 -2.5,7.3 -2.5,12.9 0,6.1 1.7,13 7.6,18.2 5.8,4.4 9.5,4.6 13,4.6 3.5,0 16.6,-4.1 16.6,-15.7 0,-9.8 -7.7,-13.5 -14,-13.5 m -3.7,25 c -3.3,0 -6,-4.5 -6,-10.1 0,-5.6 2.7,-10.2 6,-10.2 3.3,0 6.1,4.6 6.1,10.2 0,5.6 -2.8,10.1 -6.1,10.1"
       id="path170" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.525,1179.8)"
       d="m 20.8,12.7 v 7.4 h -8.3 c -0.7,0 -1.4,0.6 -1.4,1.4 v 1.9 c 0,0.8 0.7,1.4 1.4,1.4 h 30.3 c 0.8,0 1.4,-0.6 1.4,-1.4 v -1.9 c 0,-0.8 -0.6,-1.4 -1.4,-1.4 h -8.9 v -7.4 h 8.9 c 0.8,0 1.4,-0.7 1.4,-1.5 V 9.3 C 44.2,8.6 43.6,7.9 42.8,7.9 H 33.9 V -8 c 0,-0.6 -0.3,-1.1 -0.8,-1.3 l -1.2,-0.6 c -0.2,-0.1 -0.5,-0.2 -0.7,-0.2 -0.3,0.1 -0.7,0.2 -0.9,0.4 l -9.1,8.3 c -0.3,0.3 -0.4,0.7 -0.4,1.1 V 7.9 H 9.3 c 0,0 11.1,-12 22.9,-27.8 0.4,-0.5 0.5,-1 0.5,-1.4 0,-0.5 -0.2,-0.9 -0.3,-1 l -2.2,-2.2 c -0.2,-0.2 -0.6,-0.4 -1,-0.4 -0.6,0 -14.1,0 -14.8,0 -0.8,0 -1.3,0.6 -1.4,1.2 0,0 -0.5,7.4 -3.1,15.5 -2.6,8.1 -5.6,13.1 -8.2,16.8 0,0 -0.3,0.5 -0.3,1.1 0,0.2 0,0.4 0.1,0.6 0.4,0.7 1,1.8 1,1.8 0,0 0.2,0.6 1.1,0.6 h 17.2"
       id="path171" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,416.796,609.894)"
       d="m 34.2,3.9 c -0.8,2.2 -2.8,9.4 -7.7,9.4 -6.5,0 -7.9,-4 -13.3,-4 -0.8,0 -1.6,0.1 -2.6,0.3 0,0 2.5,-3.8 13.1,-7.1 C 34.3,-0.8 37,-6 37,-12 c 0,-4.2 -1.9,-12.5 -17,-12.5 -15.1,0 -17.9,9.1 -17.9,13.7 0,4.1 3.4,7.4 7.5,7.4 4.1,0 7.4,-3.3 7.4,-7.4 0,-2.8 -2,-5.9 -4.6,-6.9 -0.3,-0.1 -0.7,-0.6 -0.7,-1.1 0,-0.6 0.5,-1.3 2.3,-1.8 0.5,-0.2 1.9,-0.5 3.4,-0.5 5.7,0 6.8,3.5 6.8,8.6 0,11.7 -13.9,14.2 -19.7,22.9 0,0 -3,4.2 -3,8.9 0,4.7 2.4,5 3.6,5 1.6,0 3.3,-1.3 3.3,-3.1 0,-0.4 -0.1,-0.8 -0.3,-1.3 -0.6,-1.4 -0.8,-2.5 -0.8,-3.3 0,-0.3 0,-0.6 0.1,-0.9 0.1,-0.6 0.9,-1.6 3.3,-1.6 2.9,0 4,3.4 5.8,6 1.8,2.6 4.6,4.2 7.8,4.2 3.2,0 7.5,-2.3 9.3,-6 1.8,-3.7 4.1,-11.2 4.1,-13.9 0,-1.3 -0.8,-1.9 -1.7,-1.9 -0.7,0 -1.4,0.4 -1.8,1.4"
       id="path172" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.525,658.998)"
       d="m 20.8,12.7 v 7.4 h -8.3 c -0.7,0 -1.4,0.6 -1.4,1.4 v 1.9 c 0,0.8 0.7,1.4 1.4,1.4 h 30.3 c 0.8,0 1.4,-0.6 1.4,-1.4 v -1.9 c 0,-0.8 -0.6,-1.4 -1.4,-1.4 h -8.9 v -7.4 h 8.9 c 0.8,0 1.4,-0.7 1.4,-1.5 V 9.3 C 44.2,8.6 43.6,7.9 42.8,7.9 H 33.9 V -8 c 0,-0.6 -0.3,-1.1 -0.8,-1.3 l -1.2,-0.6 c -0.2,-0.1 -0.5,-0.2 -0.7,-0.2 -0.3,0.1 -0.7,0.2 -0.9,0.4 l -9.1,8.3 c -0.3,0.3 -0.4,0.7 -0.4,1.1 V 7.9 H 9.3 c 0,0 11.1,-12 22.9,-27.8 0.4,-0.5 0.5,-1 0.5,-1.4 0,-0.5 -0.2,-0.9 -0.3,-1 l -2.2,-2.2 c -0.2,-0.2 -0.6,-0.4 -1,-0.4 -0.6,0 -14.1,0 -14.8,0 -0.8,0 -1.3,0.6 -1.4,1.2 0,0 -0.5,7.4 -3.1,15.5 -2.6,8.1 -5.6,13.1 -8.2,16.8 0,0 -0.3,0.5 -0.3,1.1 0,0.2 0,0.4 0.1,0.6 0.4,0.7 1,1.8 1,1.8 0,0 0.2,0.6 1.1,0.6 h 17.2"
       id="path173" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.727,1477.9)"
       d="m 15.5,4.7 c 6.1,0 8.3,-1.8 9.7,-3.3 0.3,2.1 0.5,3.7 0.5,5.3 0,5.7 -2,13.1 -9,13.1 -2.5,0 -4,-0.8 -5,-1.9 C 13.8,17 15.5,14.3 15.5,12 15.5,8.4 12.7,5.6 9.1,5.6 5.5,5.6 2.6,8.4 2.6,12 v 0.3 c 0,0.9 0.2,2.4 0.6,3.2 1.3,3.6 5.5,8.9 15.5,8.9 9,0 15.5,-8.6 17.5,-13.2 1,-2.4 2.5,-7.3 2.5,-12.9 0,-6.1 -1.7,-13 -7.6,-18.2 -5.8,-4.4 -9.5,-4.6 -13,-4.6 -3.5,0 -16.6,4.1 -16.6,15.7 0,9.8 7.7,13.5 14,13.5 m 3.7,-25.1 c 3.3,0 6,4.6 6,10.2 0,5.6 -2.7,10.1 -6,10.1 -3.3,0 -6.1,-4.5 -6.1,-10.1 0,-5.6 2.8,-10.2 6.1,-10.2"
       id="path174" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.432,1526.75)"
       d="m 32.4,-1.8 c 3.3,-2.5 5.6,-5.7 5.6,-9.7 0,-7.2 -7.9,-13.1 -17.6,-13.1 -9.7,0 -17.6,5.9 -17.6,13.1 0,4 1,7.6 5.7,10.6 -4.5,2.6 -7,6.3 -7,11.1 0,8.1 8.5,14.6 18.9,14.6 10.4,0 18.9,-6.5 18.9,-14.6 0,-4.8 -1.7,-9.3 -6.9,-12 M 26.8,-4.5 C 20,-6.7 12.5,-10 12.5,-14.5 c 0,-3.9 3.6,-5.5 7.9,-5.5 6.2,0 10.4,2.9 10.4,7.5 0,4.8 -2.2,7.1 -4,8 M 20.4,19.2 C 14,19.2 8.5,15.7 8.5,10.1 c 0,-6.7 5.2,-8.3 5.2,-8.3 6.8,2.3 16.5,5.7 16.5,11.2 0,2.7 -3.4,6.2 -9.8,6.2"
       id="path175" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.432,1651.5)"
       d="m 24.9,19.7 v -43 c 0,-0.7 -0.5,-1.2 -1.2,-1.2 h -9.9 c -0.2,0 -0.4,0.1 -0.6,0.2 -0.1,0.1 -0.3,0.3 -0.4,0.4 L 1.6,-4.5 c -0.1,0.2 -0.1,0.4 -0.1,0.6 0,0.4 0.3,0.8 0.6,1 L 4,-1.8 c 0.2,0.1 0.4,0.2 0.6,0.2 0.4,0 0.8,-0.3 1,-0.6 l 7.1,-12.2 V 19.7 H 5.1 c -0.7,0 -1.2,0.5 -1.2,1.2 v 2.2 c 0,0.7 0.5,1.2 1.2,1.2 h 27.4 c 0.7,0 1.1,-0.5 1.1,-1.2 v -2.2 c 0,-0.7 -0.4,-1.2 -1.1,-1.2 h -7.6"
       id="path176" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,448.245,1651.5)"
       d="m 34.2,3.9 c -0.8,2.2 -2.8,9.4 -7.7,9.4 -6.5,0 -7.9,-4 -13.3,-4 -0.8,0 -1.6,0.1 -2.6,0.3 0,0 2.5,-3.8 13.1,-7.1 C 34.3,-0.8 37,-6 37,-12 c 0,-4.2 -1.9,-12.5 -17,-12.5 -15.1,0 -17.9,9.1 -17.9,13.7 0,4.1 3.4,7.4 7.5,7.4 4.1,0 7.4,-3.3 7.4,-7.4 0,-2.8 -2,-5.9 -4.6,-6.9 -0.3,-0.1 -0.7,-0.6 -0.7,-1.1 0,-0.6 0.5,-1.3 2.3,-1.8 0.5,-0.2 1.9,-0.5 3.4,-0.5 5.7,0 6.8,3.5 6.8,8.6 0,11.7 -13.9,14.2 -19.7,22.9 0,0 -3,4.2 -3,8.9 0,4.7 2.4,5 3.6,5 1.6,0 3.3,-1.3 3.3,-3.1 0,-0.4 -0.1,-0.8 -0.3,-1.3 -0.6,-1.4 -0.8,-2.5 -0.8,-3.3 0,-0.3 0,-0.6 0.1,-0.9 0.1,-0.6 0.9,-1.6 3.3,-1.6 2.9,0 4,3.4 5.8,6 1.8,2.6 4.6,4.2 7.8,4.2 3.2,0 7.5,-2.3 9.3,-6 1.8,-3.7 4.1,-11.2 4.1,-13.9 0,-1.3 -0.8,-1.9 -1.7,-1.9 -0.7,0 -1.4,0.4 -1.8,1.4"
       id="path177" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,430.033,1700.35)"
       d="m 32.4,-1.8 c 3.3,-2.5 5.6,-5.7 5.6,-9.7 0,-7.2 -7.9,-13.1 -17.6,-13.1 -9.7,0 -17.6,5.9 -17.6,13.1 0,4 1,7.6 5.7,10.6 -4.5,2.6 -7,6.3 -7,11.1 0,8.1 8.5,14.6 18.9,14.6 10.4,0 18.9,-6.5 18.9,-14.6 0,-4.8 -1.7,-9.3 -6.9,-12 M 26.8,-4.5 C 20,-6.7 12.5,-10 12.5,-14.5 c 0,-3.9 3.6,-5.5 7.9,-5.5 6.2,0 10.4,2.9 10.4,7.5 0,4.8 -2.2,7.1 -4,8 M 20.4,19.2 C 14,19.2 8.5,15.7 8.5,10.1 c 0,-6.7 5.2,-8.3 5.2,-8.3 6.8,2.3 16.5,5.7 16.5,11.2 0,2.7 -3.4,6.2 -9.8,6.2"
       id="path178" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,417.431,783.495)"
       d="m 27.2,-1.6 c 5,-1.9 8.5,-5.1 8.5,-10.6 0,-0.9 -0.3,-12.2 -17.5,-12.2 C 1,-24.4 1.5,-12.2 1.5,-12.2 H 1.6 L 1.5,-12 c 0,3.6 2.9,6.4 6.5,6.4 3.6,0 6.4,-2.8 6.4,-6.4 0,-2.9 -2.2,-5.7 -5,-6.3 0.1,-0.1 0.2,-0.2 0.3,-0.3 1.4,-1 3.3,-1.5 5.2,-1.5 4.2,0 8.7,2.5 8.7,7.9 0,6.3 -4.7,7.2 -5.9,7.4 -1.2,0.2 -6.8,0.6 -8,0.6 -1.2,0 -1.3,1.4 -1.3,1.4 v 2 c 0,0 0.2,1.1 1.3,1.2 1.7,0.1 4,0.1 7.2,0.6 4.4,0.6 6.7,3.6 6.7,10.6 0,6.7 -4.5,8.5 -8.7,8.5 -2.8,0 -5.4,-0.8 -6.5,-1.6 3.3,-0.2 6,-3.1 6,-6.4 0,-3.6 -2.8,-6.5 -6.4,-6.5 -3.6,0 -6.5,2.9 -6.5,6.5 0,8.2 7.5,12.3 14.9,12.3 9.6,0 20,-3.3 20,-14.2 0,-7.3 -5,-10.4 -9.4,-11.8 h 0.2"
       id="path179" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.525,832.599)"
       d="m 20.8,12.7 v 7.4 h -8.3 c -0.7,0 -1.4,0.6 -1.4,1.4 v 1.9 c 0,0.8 0.7,1.4 1.4,1.4 h 30.3 c 0.8,0 1.4,-0.6 1.4,-1.4 v -1.9 c 0,-0.8 -0.6,-1.4 -1.4,-1.4 h -8.9 v -7.4 h 8.9 c 0.8,0 1.4,-0.7 1.4,-1.5 V 9.3 C 44.2,8.6 43.6,7.9 42.8,7.9 H 33.9 V -8 c 0,-0.6 -0.3,-1.1 -0.8,-1.3 l -1.2,-0.6 c -0.2,-0.1 -0.5,-0.2 -0.7,-0.2 -0.3,0.1 -0.7,0.2 -0.9,0.4 l -9.1,8.3 c -0.3,0.3 -0.4,0.7 -0.4,1.1 V 7.9 H 9.3 c 0,0 11.1,-12 22.9,-27.8 0.4,-0.5 0.5,-1 0.5,-1.4 0,-0.5 -0.2,-0.9 -0.3,-1 l -2.2,-2.2 c -0.2,-0.2 -0.6,-0.4 -1,-0.4 -0.6,0 -14.1,0 -14.8,0 -0.8,0 -1.3,0.6 -1.4,1.2 0,0 -0.5,7.4 -3.1,15.5 -2.6,8.1 -5.6,13.1 -8.2,16.8 0,0 -0.3,0.5 -0.3,1.1 0,0.2 0,0.4 0.1,0.6 0.4,0.7 1,1.8 1,1.8 0,0 0.2,0.6 1.1,0.6 h 17.2"
       id="path180" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,417.54,1825.1)"
       d="m 2.7,-21.8 c 0,0 0.5,4.8 0.5,10 0,4.5 -0.2,9 -0.5,13.5 0,0 0,0.1 0,0.3 0,0.5 0.1,1.2 0.7,1.3 0.9,0.2 3,0.7 3.5,0.8 0.2,0 0.3,0.1 0.5,0.1 0.4,0 0.8,-0.2 1,-0.8 0.5,-1.3 1.6,-6.5 7.9,-6.5 7.1,0 8.4,6.1 8.4,10.9 0,5.9 -1.9,12.5 -9,12.5 -2.3,0 -3.6,-0.3 -4.2,-0.7 C 11.2,19.5 11,19.2 11,19 c 0,-0.3 0.1,-0.5 0.4,-0.7 0.9,-0.6 4,-1.7 4,-6.6 0,-4.9 -3.4,-6.8 -7.3,-6.8 -3.9,0 -6.6,3.6 -6.6,7 0,8.8 8.3,12.5 16,12.5 10.2,0 18.7,-6.1 18.7,-16.8 C 36.2,-3 28.8,-8.6 18.8,-8.6 15.5,-8.6 12,-7.8 9.1,-5.8 9,-5.7 8.8,-5.7 8.7,-5.7 8.3,-5.7 8,-6 8,-6.4 v -6.3 c 0,-0.6 0.5,-1.1 1.1,-1.1 h 0.1 c 1.5,0.1 4.8,0.5 8.3,0.5 7.2,0 12.6,-1.5 15.4,-8.9 0.1,-0.3 0.2,-0.7 0.2,-1 0,-0.8 -0.5,-1.4 -1.8,-1.4 -0.4,0 -0.8,0.1 -1.4,0.2 -4.9,1.2 -8.7,1.6 -12.4,1.6 -3.6,0 -7.1,-0.4 -11.4,-1 0,0 -0.5,-0.1 -1.2,-0.1 -1.5,0 -2.2,0.5 -2.2,2.1"
       id="path181" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.525,1874.2)"
       d="m 20.8,12.7 v 7.4 h -8.3 c -0.7,0 -1.4,0.6 -1.4,1.4 v 1.9 c 0,0.8 0.7,1.4 1.4,1.4 h 30.3 c 0.8,0 1.4,-0.6 1.4,-1.4 v -1.9 c 0,-0.8 -0.6,-1.4 -1.4,-1.4 h -8.9 v -7.4 h 8.9 c 0.8,0 1.4,-0.7 1.4,-1.5 V 9.3 C 44.2,8.6 43.6,7.9 42.8,7.9 H 33.9 V -8 c 0,-0.6 -0.3,-1.1 -0.8,-1.3 l -1.2,-0.6 c -0.2,-0.1 -0.5,-0.2 -0.7,-0.2 -0.3,0.1 -0.7,0.2 -0.9,0.4 l -9.1,8.3 c -0.3,0.3 -0.4,0.7 -0.4,1.1 V 7.9 H 9.3 c 0,0 11.1,-12 22.9,-27.8 0.4,-0.5 0.5,-1 0.5,-1.4 0,-0.5 -0.2,-0.9 -0.3,-1 l -2.2,-2.2 c -0.2,-0.2 -0.6,-0.4 -1,-0.4 -0.6,0 -14.1,0 -14.8,0 -0.8,0 -1.3,0.6 -1.4,1.2 0,0 -0.5,7.4 -3.1,15.5 -2.6,8.1 -5.6,13.1 -8.2,16.8 0,0 -0.3,0.5 -0.3,1.1 0,0.2 0,0.4 0.1,0.6 0.4,0.7 1,1.8 1,1.8 0,0 0.2,0.6 1.1,0.6 h 17.2"
       id="path182" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.727,1304.3)"
       d="m 24.7,-4.8 c -6.1,0 -8.3,1.8 -9.7,3.3 -0.3,-2.1 -0.5,-3.7 -0.5,-5.3 0,-5.7 2,-13.1 9,-13.1 2.5,0 4,0.8 5,1.9 -2.1,0.9 -3.8,3.6 -3.8,5.9 0,3.6 2.8,6.4 6.4,6.4 3.6,0 6.5,-2.8 6.5,-6.4 v -0.3 c 0,-0.9 -0.2,-2.4 -0.6,-3.2 -1.3,-3.6 -5.5,-8.9 -15.5,-8.9 -9,0 -15.5,8.6 -17.5,13.2 -1,2.4 -2.5,7.3 -2.5,12.9 0,6.1 1.7,13 7.6,18.2 5.8,4.4 9.5,4.6 13,4.6 3.5,0 16.6,-4.1 16.6,-15.7 0,-9.8 -7.7,-13.5 -14,-13.5 m -3.7,25 c -3.3,0 -6,-4.5 -6,-10.1 0,-5.6 2.7,-10.2 6,-10.2 3.3,0 6.1,4.6 6.1,10.2 0,5.6 -2.8,10.1 -6.1,10.1"
       id="path183" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.432,1353.15)"
       d="m 32.4,-1.8 c 3.3,-2.5 5.6,-5.7 5.6,-9.7 0,-7.2 -7.9,-13.1 -17.6,-13.1 -9.7,0 -17.6,5.9 -17.6,13.1 0,4 1,7.6 5.7,10.6 -4.5,2.6 -7,6.3 -7,11.1 0,8.1 8.5,14.6 18.9,14.6 10.4,0 18.9,-6.5 18.9,-14.6 0,-4.8 -1.7,-9.3 -6.9,-12 M 26.8,-4.5 C 20,-6.7 12.5,-10 12.5,-14.5 c 0,-3.9 3.6,-5.5 7.9,-5.5 6.2,0 10.4,2.9 10.4,7.5 0,4.8 -2.2,7.1 -4,8 M 20.4,19.2 C 14,19.2 8.5,15.7 8.5,10.1 c 0,-6.7 5.2,-8.3 5.2,-8.3 6.8,2.3 16.5,5.7 16.5,11.2 0,2.7 -3.4,6.2 -9.8,6.2"
       id="path184" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,414.765,1998.15)"
       d="m 16.2,12.3 c -2.2,3.3 -5.1,7.3 -5.1,11 0,1.1 0.3,1.7 1.4,1.7 1.6,0 2.6,-0.4 5.8,-0.6 0.3,0 0.7,0 1.1,0 2.8,-0.1 5.5,0.6 6.2,0.6 0.9,0 2.6,-1.1 2.5,-2 0,-0.1 0,-0.2 0,-0.3 0,-0.2 -0.6,-3.3 -0.6,-7 0,-2.1 0.2,-4.5 0.8,-6.7 1.2,-4.7 4.4,-13.2 6.6,-19.5 1.1,-3.1 1.7,-8.7 1.7,-10.9 0,-0.9 0,-1.4 -0.1,-2.3 -0.1,-1 -0.5,-1.4 -1.1,-1.4 -0.5,0 -1.3,0 -1.8,0 -0.5,0 -1.2,0.3 -1.2,1.4 0,1 -0.2,7.8 -4.2,7.8 -4.2,0 -5.4,-8.5 -11.9,-8.5 -6.2,0 -10,6.3 -10.3,6.9 v -4.8 c 0,-0.6 -0.5,-1.1 -1.1,-1.1 H 2.6 c -0.6,0 -1.1,0.5 -1.1,1.1 v 18.5 c 0,0.6 0.5,1.1 1.1,1.1 H 4.9 C 5.5,-2.7 6,-3.2 6,-3.8 V -7 c 0,-2.3 1.5,-5.4 5,-5.4 3.5,0 3.8,3.8 11.8,3.8 2,0 5.7,-0.4 6.7,-1.3 -0.8,1.5 -11,18.9 -13.3,22.2"
       id="path187" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.432,2047.55)"
       d="m 32.4,-1.8 c 3.3,-2.5 5.6,-5.7 5.6,-9.7 0,-7.2 -7.9,-13.1 -17.6,-13.1 -9.7,0 -17.6,5.9 -17.6,13.1 0,4 1,7.6 5.7,10.6 -4.5,2.6 -7,6.3 -7,11.1 0,8.1 8.5,14.6 18.9,14.6 10.4,0 18.9,-6.5 18.9,-14.6 0,-4.8 -1.7,-9.3 -6.9,-12 M 26.8,-4.5 C 20,-6.7 12.5,-10 12.5,-14.5 c 0,-3.9 3.6,-5.5 7.9,-5.5 6.2,0 10.4,2.9 10.4,7.5 0,4.8 -2.2,7.1 -4,8 M 20.4,19.2 C 14,19.2 8.5,15.7 8.5,10.1 c 0,-6.7 5.2,-8.3 5.2,-8.3 6.8,2.3 16.5,5.7 16.5,11.2 0,2.7 -3.4,6.2 -9.8,6.2"
       id="path188" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.525,956.599)"
       d="m 20.8,12.7 v 7.4 h -8.3 c -0.7,0 -1.4,0.6 -1.4,1.4 v 1.9 c 0,0.8 0.7,1.4 1.4,1.4 h 30.3 c 0.8,0 1.4,-0.6 1.4,-1.4 v -1.9 c 0,-0.8 -0.6,-1.4 -1.4,-1.4 h -8.9 v -7.4 h 8.9 c 0.8,0 1.4,-0.7 1.4,-1.5 V 9.3 C 44.2,8.6 43.6,7.9 42.8,7.9 H 33.9 V -8 c 0,-0.6 -0.3,-1.1 -0.8,-1.3 l -1.2,-0.6 c -0.2,-0.1 -0.5,-0.2 -0.7,-0.2 -0.3,0.1 -0.7,0.2 -0.9,0.4 l -9.1,8.3 c -0.3,0.3 -0.4,0.7 -0.4,1.1 V 7.9 H 9.3 c 0,0 11.1,-12 22.9,-27.8 0.4,-0.5 0.5,-1 0.5,-1.4 0,-0.5 -0.2,-0.9 -0.3,-1 l -2.2,-2.2 c -0.2,-0.2 -0.6,-0.4 -1,-0.4 -0.6,0 -14.1,0 -14.8,0 -0.8,0 -1.3,0.6 -1.4,1.2 0,0 -0.5,7.4 -3.1,15.5 -2.6,8.1 -5.6,13.1 -8.2,16.8 0,0 -0.3,0.5 -0.3,1.1 0,0.2 0,0.4 0.1,0.6 0.4,0.7 1,1.8 1,1.8 0,0 0.2,0.6 1.1,0.6 h 17.2"
       id="path189" />
    <path
       class="TimeSig"
       transform="matrix(0.992001,0,0,0.992001,413.525,1006.2)"
       d="m 20.8,12.7 v 7.4 h -8.3 c -0.7,0 -1.4,0.6 -1.4,1.4 v 1.9 c 0,0.8 0.7,1.4 1.4,1.4 h 30.3 c 0.8,0 1.4,-0.6 1.4,-1.4 v -1.9 c 0,-0.8 -0.6,-1.4 -1.4,-1.4 h -8.9 v -7.4 h 8.9 c 0.8,0 1.4,-0.7 1.4,-1.5 V 9.3 C 44.2,8.6 43.6,7.9 42.8,7.9 H 33.9 V -8 c 0,-0.6 -0.3,-1.1 -0.8,-1.3 l -1.2,-0.6 c -0.2,-0.1 -0.5,-0.2 -0.7,-0.2 -0.3,0.1 -0.7,0.2 -0.9,0.4 l -9.1,8.3 c -0.3,0.3 -0.4,0.7 -0.4,1.1 V 7.9 H 9.3 c 0,0 11.1,-12 22.9,-27.8 0.4,-0.5 0.5,-1 0.5,-1.4 0,-0.5 -0.2,-0.9 -0.3,-1 l -2.2,-2.2 c -0.2,-0.2 -0.6,-0.4 -1,-0.4 -0.6,0 -14.1,0 -14.8,0 -0.8,0 -1.3,0.6 -1.4,1.2 0,0 -0.5,7.4 -3.1,15.5 -2.6,8.1 -5.6,13.1 -8.2,16.8 0,0 -0.3,0.5 -0.3,1.1 0,0.2 0,0.4 0.1,0.6 0.4,0.7 1,1.8 1,1.8 0,0 0.2,0.6 1.1,0.6 h 17.2"
       id="path190" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 1021.24,1954.8 h 165.64 v 12.4 h -165.64 v -12.4"
       id="path206" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="M 536.70299,1954.8 H 860.56 v 12.4 H 536.70299 v -12.4"
       id="path207"
       style="stroke-width:0.999996" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 1105.29,1260.4 h 380.72 v 12.4 h -380.72 v -12.4"
       id="path208"
       style="stroke-width:1" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 536.70297,1260.4 h 381.53999 v 12.4 H 536.70297 v -12.4"
       id="path209"
       style="stroke-width:0.999996" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 1387.36,1607.6 h 193.49 v 12.4 h -193.49 v -12.4"
       id="path210" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="M 536.70399,1607.6 H 721.273 V 1620 H 536.70399 v -12.4"
       id="path211"
       style="stroke-width:1" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="M 814.302,1607.6 H 1007.8 V 1620 H 814.302 v -12.4"
       id="path212" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="M 536.70299,1427.7504 H 788.044 v 12.4 H 536.70299 v -12.4"
       id="path213"
       style="stroke-width:1" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="M 915.76299,1434 H 1168.75 v 12.4 H 915.76299 V 1434"
       id="path214"
       style="stroke-width:0.999997" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 1294.82,1434 h 254.64 v 12.4 H 1294.82 V 1434"
       id="path215"
       style="stroke-width:0.999995" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 1347.56,1954.8 h 165.64 v 12.4 h -165.64 v -12.4"
       id="path216" />
    <path
       class="Beam"
       fill-rule="evenodd"
       d="m 1105.3,1607.6 h 189.03 V 1620 H 1105.3 v -12.4"
       id="path217"
       style="stroke-width:0.999996" />
    <rect
       x="449.876954679833"
       y="397.11595143129296"
       width="1255.8051028957939"
       height="114.164100263254"
       rx="0"
       inkscape:label="Frame"
       style="stroke-width:2.0;stroke:#000000;fill-opacity:0.0;fill:#000000"
       id="rect22" />
    <polyline
       class="StaffLines"
       fill="none"
       stroke="#000000"
       stroke-width="3.13738"
       stroke-linejoin="bevel"
       points="336.599,634.198 1648.6,634.198"
       id="polyline21"
       transform="matrix(0.870153,0,0,0.870153,214.067,-237.651)" />
    <rect
       x="489.28323"
       y="457.11594"
       width="1153.8568"
       height="114.1641"
       rx="0"
       inkscape:label="Frame"
       style="fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:1.99999"
       id="rect71" />
  </g>
  <script
     id="JessyInk"
     ns1:version="1.5.5">// Copyright 2008, 2009 Hannes Hochreiner
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.

// Set onload event handler.
window.onload = jessyInkInit;

// Creating a namespace dictionary. The standard Inkscape namespaces are taken from inkex.py.
var NSS = new Object();
NSS['sodipodi']='http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd';
NSS['cc']='http://web.resource.org/cc/';
NSS['svg']='http://www.w3.org/2000/svg';
NSS['dc']='http://purl.org/dc/elements/1.1/';
NSS['rdf']='http://www.w3.org/1999/02/22-rdf-syntax-ns#';
NSS['inkscape']='http://www.inkscape.org/namespaces/inkscape';
NSS['xlink']='http://www.w3.org/1999/xlink';
NSS['xml']='http://www.w3.org/XML/1998/namespace';
NSS['jessyink']='https://launchpad.net/jessyink';

// Keycodes.
var LEFT_KEY = 37; // cursor left keycode
var UP_KEY = 38; // cursor up keycode
var RIGHT_KEY = 39; // cursor right keycode
var DOWN_KEY = 40; // cursor down keycode
var PAGE_UP_KEY = 33; // page up keycode
var PAGE_DOWN_KEY = 34; // page down keycode
var HOME_KEY = 36; // home keycode
var END_KEY = 35; // end keycode
var ENTER_KEY = 13; // next slide
var SPACE_KEY = 32;
var ESCAPE_KEY = 27;

// Presentation modes.
var SLIDE_MODE = 1;
var INDEX_MODE = 2;
var DRAWING_MODE = 3;

// Mouse handler actions.
var MOUSE_UP = 1;
var MOUSE_DOWN = 2;
var MOUSE_MOVE = 3;
var MOUSE_WHEEL = 4;

// Parameters.
var ROOT_NODE = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;svg&quot;)[0];
var HEIGHT = 0;
var WIDTH = 0;
var INDEX_COLUMNS_DEFAULT = 4;
var INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
var INDEX_OFFSET = 0;
var STATE_START = -1;
var STATE_END = -2;
var BACKGROUND_COLOR = null;
var slides = new Array();

// Initialisation.
var currentMode = SLIDE_MODE;
var masterSlide = null;
var activeSlide = 0;
var activeEffect = 0;
var timeStep = 30; // 40 ms equal 25 frames per second.
var lastFrameTime = null;
var processingEffect = false;
var transCounter = 0;
var effectArray = 0;
var defaultTransitionInDict = new Object();
defaultTransitionInDict[&quot;name&quot;] = &quot;appear&quot;;
var defaultTransitionOutDict = new Object();
defaultTransitionOutDict[&quot;name&quot;] = &quot;appear&quot;;
var jessyInkInitialised = false;

// Initialise char and key code dictionaries.
var charCodeDictionary = getDefaultCharCodeDictionary();
var keyCodeDictionary = getDefaultKeyCodeDictionary();

// Initialise mouse handler dictionary.
var mouseHandlerDictionary = getDefaultMouseHandlerDictionary();

var progress_bar_visible = false;
var timer_elapsed = 0;
var timer_start = timer_elapsed;
var timer_duration = 15; // 15 minutes

var history_counter = 0;
var history_original_elements = new Array();
var history_presentation_elements = new Array();

var mouse_original_path = null;
var mouse_presentation_path = null;
var mouse_last_x = -1;
var mouse_last_y = -1;
var mouse_min_dist_sqr = 3 * 3;
var path_colour = &quot;red&quot;;
var path_width_default = 3;
var path_width = path_width_default;
var path_paint_width = path_width;

var number_of_added_slides = 0;

/** Initialisation function.
 *  The whole presentation is set-up in this function.
 */
function jessyInkInit()
{
    // Make sure we only execute this code once. Double execution can occur if the onload event handler is set
    // in the main svg tag as well (as was recommended in earlier versions). Executing this function twice does
    // not lead to any problems, but it takes more time.
    if (jessyInkInitialised)
        return;

    // Making the presentation scalable.
    var VIEWBOX = ROOT_NODE.getAttribute(&quot;viewBox&quot;);

    if (VIEWBOX)
    {
        WIDTH = ROOT_NODE.viewBox.animVal.width;
        HEIGHT = ROOT_NODE.viewBox.animVal.height;
    }
    else
    {
        HEIGHT = parseFloat(ROOT_NODE.getAttribute(&quot;height&quot;));
        WIDTH = parseFloat(ROOT_NODE.getAttribute(&quot;width&quot;));
        ROOT_NODE.setAttribute(&quot;viewBox&quot;, &quot;0 0 &quot; + WIDTH + &quot; &quot; + HEIGHT);
    }

    ROOT_NODE.setAttribute(&quot;width&quot;, &quot;100%&quot;);
    ROOT_NODE.setAttribute(&quot;height&quot;, &quot;100%&quot;);

    // Setting the background color.
    var namedViews = document.getElementsByTagNameNS(NSS[&quot;sodipodi&quot;], &quot;namedview&quot;);

    for (var counter = 0; counter &lt; namedViews.length; counter++)
    {
        if (namedViews[counter].hasAttribute(&quot;id&quot;) &amp;&amp; namedViews[counter].hasAttribute(&quot;pagecolor&quot;))
        {
            if (namedViews[counter].getAttribute(&quot;id&quot;) == &quot;base&quot;)
            {
                BACKGROUND_COLOR = namedViews[counter].getAttribute(&quot;pagecolor&quot;);
                var newAttribute = &quot;background-color:&quot; + BACKGROUND_COLOR + &quot;;&quot;;

                if (ROOT_NODE.hasAttribute(&quot;style&quot;))
                    newAttribute += ROOT_NODE.getAttribute(&quot;style&quot;);

                ROOT_NODE.setAttribute(&quot;style&quot;, newAttribute);
            }
        }
    }

    // Defining clip-path.
    var defsNodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

    if (defsNodes.length &gt; 0)
    {
        var existingClipPath = document.getElementById(&quot;jessyInkSlideClipPath&quot;);

        if (!existingClipPath)
        {
            var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
            var clipPath = document.createElementNS(NSS[&quot;svg&quot;], &quot;clipPath&quot;);

            rectNode.setAttribute(&quot;x&quot;, 0);
            rectNode.setAttribute(&quot;y&quot;, 0);
            rectNode.setAttribute(&quot;width&quot;, WIDTH);
            rectNode.setAttribute(&quot;height&quot;, HEIGHT);

            clipPath.setAttribute(&quot;id&quot;, &quot;jessyInkSlideClipPath&quot;);
            clipPath.setAttribute(&quot;clipPathUnits&quot;, &quot;userSpaceOnUse&quot;);

            clipPath.appendChild(rectNode);
            defsNodes[0].appendChild(clipPath);
        }
    }

    // Making a list of the slide and finding the master slide.
    var nodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);
    var tempSlides = new Array();
    var existingJessyInkPresentationLayer = null;

    for (var counter = 0; counter &lt; nodes.length; counter++)
    {
        if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) &amp;&amp; (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) == &quot;layer&quot;))
        {
            if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;masterSlide&quot;) == &quot;masterSlide&quot;)
                masterSlide = nodes[counter];
            else if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;) == &quot;presentationLayer&quot;)
                existingJessyInkPresentationLayer = nodes[counter];
            else
                tempSlides.push(nodes[counter].getAttribute(&quot;id&quot;));
        }
        else if (nodes[counter].getAttributeNS(NSS['jessyink'], 'element'))
        {
            handleElement(nodes[counter]);
        }
    }

    // Hide master slide set default transitions.
    if (masterSlide)
    {
        masterSlide.style.display = &quot;none&quot;;

        if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
            defaultTransitionInDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));

        if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
            defaultTransitionOutDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
    }

    if (existingJessyInkPresentationLayer != null)
    {
        existingJessyInkPresentationLayer.parentNode.removeChild(existingJessyInkPresentationLayer);
    }

    // Set start slide.
    var hashObj = new LocationHash(window.location.hash);

    activeSlide = hashObj.slideNumber;
    activeEffect = hashObj.effectNumber;

    if (activeSlide &lt; 0)
        activeSlide = 0;
    else if (activeSlide &gt;= tempSlides.length)
        activeSlide = tempSlides.length - 1;

    var originalNode = document.getElementById(tempSlides[counter]);

    var JessyInkPresentationLayer = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
    JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
    JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;JessyInk Presentation Layer&quot;);
    JessyInkPresentationLayer.setAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;, &quot;presentationLayer&quot;);
    JessyInkPresentationLayer.setAttribute(&quot;id&quot;, &quot;jessyink_presentation_layer&quot;);
    JessyInkPresentationLayer.style.display = &quot;inherit&quot;;
    ROOT_NODE.appendChild(JessyInkPresentationLayer);

    // Gathering all the information about the transitions and effects of the slides, set the background
    // from the master slide and substitute the auto-texts.
    for (var counter = 0; counter &lt; tempSlides.length; counter++)
    {
        var originalNode = document.getElementById(tempSlides[counter]);
        originalNode.style.display = &quot;none&quot;;
        var node = suffixNodeIds(originalNode.cloneNode(true), &quot;_&quot; + counter);
        JessyInkPresentationLayer.appendChild(node);
        slides[counter] = new Object();
        slides[counter][&quot;original_element&quot;] = originalNode;
        slides[counter][&quot;element&quot;] = node;

        // Set build in transition.
        slides[counter][&quot;transitionIn&quot;] = new Object();

        var dict;

        if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
            dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));
        else
            dict = defaultTransitionInDict;

        slides[counter][&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
        slides[counter][&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

        for (key in dict)
            if (key != &quot;name&quot;)
                slides[counter][&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

        // Set build out transition.
        slides[counter][&quot;transitionOut&quot;] = new Object();

        if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
            dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
        else
            dict = defaultTransitionOutDict;

        slides[counter][&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
        slides[counter][&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

        for (key in dict)
            if (key != &quot;name&quot;)
                slides[counter][&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

        // Copy master slide content.
        if (masterSlide)
        {
            var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + counter);
            clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
            clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
            clonedNode.style.display = &quot;inherit&quot;;

            node.insertBefore(clonedNode, node.firstChild);
        }

        // Setting clip path.
        node.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);

        // Substitute auto texts.
        substituteAutoTexts(node, node.getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;), counter + 1, tempSlides.length);

        node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
        node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);

        // Set effects.
        var tempEffects = new Array();
        var groups = new Object();

        for (var IOCounter = 0; IOCounter &lt;= 1; IOCounter++)
        {
            var propName = &quot;&quot;;
            var dir = 0;

            if (IOCounter == 0)
            {
                propName = &quot;effectIn&quot;;
                dir = 1;
            }
            else if (IOCounter == 1)
            {
                propName = &quot;effectOut&quot;;
                dir = -1;
            }

            var effects = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], propName);

            for (var effectCounter = 0; effectCounter &lt; effects.length; effectCounter++)
            {
                var element = document.getElementById(effects[effectCounter]);
                var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], propName));

                // Put every element that has an effect associated with it, into its own group.
                // Unless of course, we already put it into its own group.
                if (!(groups[element.id]))
                {
                    var newGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

                    element.parentNode.insertBefore(newGroup, element);
                    newGroup.appendChild(element.parentNode.removeChild(element));
                    groups[element.id] = newGroup;
                }

                var effectDict = new Object();

                effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
                effectDict[&quot;dir&quot;] = dir;
                effectDict[&quot;element&quot;] = groups[element.id];

                for (var option in dict)
                {
                    if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
                    {
                        if (!effectDict[&quot;options&quot;])
                            effectDict[&quot;options&quot;] = new Object();

                        effectDict[&quot;options&quot;][option] = dict[option];
                    }
                }

                if (!tempEffects[dict[&quot;order&quot;]])
                    tempEffects[dict[&quot;order&quot;]] = new Array();

                tempEffects[dict[&quot;order&quot;]][tempEffects[dict[&quot;order&quot;]].length] = effectDict;
            }
        }

        // Make invisible, but keep in rendering tree to ensure that bounding box can be calculated.
        node.setAttribute(&quot;opacity&quot;,0);
        node.style.display = &quot;inherit&quot;;

        // Create a transform group.
        var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

        // Add content to transform group.
        while (node.firstChild)
            transformGroup.appendChild(node.firstChild);

        // Transfer the transform attribute from the node to the transform group.
        if (node.getAttribute(&quot;transform&quot;))
        {
            transformGroup.setAttribute(&quot;transform&quot;, node.getAttribute(&quot;transform&quot;));
            node.removeAttribute(&quot;transform&quot;);
        }

        // Create a view group.
        var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

        viewGroup.appendChild(transformGroup);
        slides[counter][&quot;viewGroup&quot;] = node.appendChild(viewGroup);

        // Insert background.
        if (BACKGROUND_COLOR != null)
        {
            var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

            rectNode.setAttribute(&quot;x&quot;, 0);
            rectNode.setAttribute(&quot;y&quot;, 0);
            rectNode.setAttribute(&quot;width&quot;, WIDTH);
            rectNode.setAttribute(&quot;height&quot;, HEIGHT);
            rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + counter);
            rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

            slides[counter][&quot;viewGroup&quot;].insertBefore(rectNode, slides[counter][&quot;viewGroup&quot;].firstChild);
        }

        // Set views.
        var tempViews = new Array();
        var views = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], &quot;view&quot;);
        var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

        // Set initial view even if there are no other views.
        slides[counter][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
        slides[counter].initialView = matrixOld.toAttribute();

        for (var viewCounter = 0; viewCounter &lt; views.length; viewCounter++)
        {
            var element = document.getElementById(views[viewCounter]);
            var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;view&quot;));

            if (dict[&quot;order&quot;] == 0)
            {
                matrixOld = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());
                slides[counter].initialView = matrixOld.toAttribute();
            }
            else
            {
                var effectDict = new Object();

                effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
                effectDict[&quot;dir&quot;] = 1;
                effectDict[&quot;element&quot;] = slides[counter][&quot;viewGroup&quot;];
                effectDict[&quot;order&quot;] = dict[&quot;order&quot;];

                for (var option in dict)
                {
                    if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
                    {
                        if (!effectDict[&quot;options&quot;])
                            effectDict[&quot;options&quot;] = new Object();

                        effectDict[&quot;options&quot;][option] = dict[option];
                    }
                }

                effectDict[&quot;options&quot;][&quot;matrixNew&quot;] = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());

                tempViews[dict[&quot;order&quot;]] = effectDict;
            }

            // Remove element.
            element.parentNode.removeChild(element);
        }

        // Consolidate view array and append it to the effect array.
        if (tempViews.length &gt; 0)
        {
            for (var viewCounter = 0; viewCounter &lt; tempViews.length; viewCounter++)
            {
                if (tempViews[viewCounter])
                {
                    tempViews[viewCounter][&quot;options&quot;][&quot;matrixOld&quot;] = matrixOld;
                    matrixOld = tempViews[viewCounter][&quot;options&quot;][&quot;matrixNew&quot;];

                    if (!tempEffects[tempViews[viewCounter][&quot;order&quot;]])
                        tempEffects[tempViews[viewCounter][&quot;order&quot;]] = new Array();

                    tempEffects[tempViews[viewCounter][&quot;order&quot;]][tempEffects[tempViews[viewCounter][&quot;order&quot;]].length] = tempViews[viewCounter];
                }
            }
        }

        // Set consolidated effect array.
        if (tempEffects.length &gt; 0)
        {
            slides[counter][&quot;effects&quot;] = new Array();

            for (var effectCounter = 0; effectCounter &lt; tempEffects.length; effectCounter++)
            {
                if (tempEffects[effectCounter])
                    slides[counter][&quot;effects&quot;][slides[counter][&quot;effects&quot;].length] = tempEffects[effectCounter];
            }
        }

        node.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);

        // Set visibility for initial state.
        if (counter == activeSlide)
        {
            node.style.display = &quot;inherit&quot;;
            node.setAttribute(&quot;opacity&quot;,1);
        }
        else
        {
            node.style.display = &quot;none&quot;;
            node.setAttribute(&quot;opacity&quot;,0);
        }
    }

    // Set key handler.
    var jessyInkObjects = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);

    for (var counter = 0; counter &lt; jessyInkObjects.length; counter++)
    {
        var elem = jessyInkObjects[counter];

        if (elem.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;customKeyBindings&quot;))
        {
            if (elem.getCustomKeyBindings != undefined)
                keyCodeDictionary = elem.getCustomKeyBindings();

            if (elem.getCustomCharBindings != undefined)
                charCodeDictionary = elem.getCustomCharBindings();
        }
    }

    // Set mouse handler.
    var jessyInkMouseHandler = document.getElementsByTagNameNS(NSS[&quot;jessyink&quot;], &quot;mousehandler&quot;);

    for (var counter = 0; counter &lt; jessyInkMouseHandler.length; counter++)
    {
        var elem = jessyInkMouseHandler[counter];

        if (elem.getMouseHandler != undefined)
        {
            var tempDict = elem.getMouseHandler();

            for (mode in tempDict)
            {
                if (!mouseHandlerDictionary[mode])
                    mouseHandlerDictionary[mode] = new Object();

                for (handler in tempDict[mode])
                    mouseHandlerDictionary[mode][handler] = tempDict[mode][handler];
            }
        }
    }

    // Check effect number.
    if ((activeEffect &lt; 0) || (!slides[activeSlide].effects))
    {
        activeEffect = 0;
    }
    else if (activeEffect &gt; slides[activeSlide].effects.length)
    {
        activeEffect = slides[activeSlide].effects.length;
    }

    createProgressBar(JessyInkPresentationLayer);
    hideProgressBar();
    setProgressBarValue(activeSlide);
    setTimeIndicatorValue(0);
    setInterval(&quot;updateTimer()&quot;, 1000);
    setSlideToState(activeSlide, activeEffect);
    jessyInkInitialised = true;
}

/** Function to substitute the auto-texts.
 *
 *  @param node the node
 *  @param slideName name of the slide the node is on
 *  @param slideNumber number of the slide the node is on
 *  @param numberOfSlides number of slides in the presentation
 */
function substituteAutoTexts(node, slideName, slideNumber, numberOfSlides)
{
    var texts = node.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;tspan&quot;);

    for (var textCounter = 0; textCounter &lt; texts.length; textCounter++)
    {
        if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideNumber&quot;)
            texts[textCounter].firstChild.nodeValue = slideNumber;
        else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;numberOfSlides&quot;)
            texts[textCounter].firstChild.nodeValue = numberOfSlides;
        else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideTitle&quot;)
            texts[textCounter].firstChild.nodeValue = slideName;
    }
}

/** Convenience function to get an element depending on whether it has a property with a particular name.
 *    This function emulates some dearly missed XPath functionality.
 *
 *  @param node the node
 *  @param namespace namespace of the attribute
 *  @param name attribute name
 */
function getElementsByPropertyNS(node, namespace, name)
{
    var elems = new Array();

    if (node.getAttributeNS(namespace, name))
        elems.push(node.getAttribute(&quot;id&quot;));

    for (var counter = 0; counter &lt; node.childNodes.length; counter++)
    {
        if (node.childNodes[counter].nodeType == 1)
            elems = elems.concat(getElementsByPropertyNS(node.childNodes[counter], namespace, name));
    }

    return elems;
}

/** Function to dispatch the next effect, if there is none left, change the slide.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function dispatchEffects(dir)
{
    if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
    {
        processingEffect = true;

        if (dir == 1)
        {
            effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
            activeEffect += dir;
        }
        else if (dir == -1)
        {
            activeEffect += dir;
            effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
        }

        transCounter = 0;
        startTime = (new Date()).getTime();
        lastFrameTime = null;
        effect(dir);
    }
    else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
    {
        changeSlide(dir);
    }
}

/** Function to skip effects and directly either put the slide into start or end state or change slides.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function skipEffects(dir)
{
    if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
    {
        processingEffect = true;

        if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == 1))
            activeEffect = slides[activeSlide][&quot;effects&quot;].length;
        else
            activeEffect = 0;

        if (dir == 1)
            setSlideToState(activeSlide, STATE_END);
        else
            setSlideToState(activeSlide, STATE_START);

        processingEffect = false;
    }
    else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
    {
        changeSlide(dir);
    }
}

/** Function to change between slides.
 *
 *  @param dir direction (1 = forwards, -1 = backwards)
 */
function changeSlide(dir)
{
    processingEffect = true;
    effectArray = new Array();

    effectArray[0] = new Object();
    if (dir == 1)
    {
        effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
        effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
        effectArray[0][&quot;dir&quot;] = -1;
    }
    else if (dir == -1)
    {
        effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
        effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
        effectArray[0][&quot;dir&quot;] = 1;
    }
    effectArray[0][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

    activeSlide += dir;
    setProgressBarValue(activeSlide);

    effectArray[1] = new Object();

    if (dir == 1)
    {
        effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
        effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
        effectArray[1][&quot;dir&quot;] = 1;
    }
    else if (dir == -1)
    {
        effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
        effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
        effectArray[1][&quot;dir&quot;] = -1;
    }

    effectArray[1][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

    if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == -1))
        activeEffect = slides[activeSlide][&quot;effects&quot;].length;
    else
        activeEffect = 0;

    if (dir == -1)
        setSlideToState(activeSlide, STATE_END);
    else
        setSlideToState(activeSlide, STATE_START);

    transCounter = 0;
    startTime = (new Date()).getTime();
    lastFrameTime = null;
    effect(dir);
}

/** Function to toggle between index and slide mode.
*/
function toggleSlideIndex()
{
    var suspendHandle = ROOT_NODE.suspendRedraw(500);

    if (currentMode == SLIDE_MODE)
    {
        hideProgressBar();
        INDEX_OFFSET = -1;
        indexSetPageSlide(activeSlide);
        currentMode = INDEX_MODE;
    }
    else if (currentMode == INDEX_MODE)
    {
        for (var counter = 0; counter &lt; slides.length; counter++)
        {
            slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(1)&quot;);

            if (counter == activeSlide)
            {
                slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
                slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
                activeEffect = 0;
            }
            else
            {
                slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
                slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
            }
        }
        currentMode = SLIDE_MODE;
        setSlideToState(activeSlide, STATE_START);
        setProgressBarValue(activeSlide);

        if (progress_bar_visible)
        {
            showProgressBar();
        }
    }

    ROOT_NODE.unsuspendRedraw(suspendHandle);
    ROOT_NODE.forceRedraw();
}

/** Function to run an effect.
 *
 *  @param dir direction in which to play the effect (1 = forwards, -1 = backwards)
 */
function effect(dir)
{
    var done = true;

    var suspendHandle = ROOT_NODE.suspendRedraw(200);

    for (var counter = 0; counter &lt; effectArray.length; counter++)
    {
        if (effectArray[counter][&quot;effect&quot;] == &quot;fade&quot;)
            done &amp;= fade(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
        else if (effectArray[counter][&quot;effect&quot;] == &quot;appear&quot;)
            done &amp;= appear(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
        else if (effectArray[counter][&quot;effect&quot;] == &quot;pop&quot;)
            done &amp;= pop(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
        else if (effectArray[counter][&quot;effect&quot;] == &quot;view&quot;)
            done &amp;= view(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
    }

    ROOT_NODE.unsuspendRedraw(suspendHandle);
    ROOT_NODE.forceRedraw();

    if (!done)
    {
        var currentTime = (new Date()).getTime();
        var timeDiff = 1;

        transCounter = currentTime - startTime;

        if (lastFrameTime != null)
        {
            timeDiff = timeStep - (currentTime - lastFrameTime);

            if (timeDiff &lt;= 0)
                timeDiff = 1;
        }

        lastFrameTime = currentTime;

        window.setTimeout(&quot;effect(&quot; + dir + &quot;)&quot;, timeDiff);
    }
    else
    {
        window.location.hash = (activeSlide + 1) + '_' + activeEffect;
        processingEffect = false;
    }
}

/** Function to display the index sheet.
 *
 *  @param offsetNumber offset number
 */
function displayIndex(offsetNumber)
{
    var offsetX = 0;
    var offsetY = 0;

    if (offsetNumber &lt; 0)
        offsetNumber = 0;
    else if (offsetNumber &gt;= slides.length)
        offsetNumber = slides.length - 1;

    for (var counter = 0; counter &lt; slides.length; counter++)
    {
        if ((counter &lt; offsetNumber) || (counter &gt; offsetNumber + INDEX_COLUMNS * INDEX_COLUMNS - 1))
        {
            slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
            slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
        }
        else
        {
            offsetX = ((counter - offsetNumber) % INDEX_COLUMNS) * WIDTH;
            offsetY = Math.floor((counter - offsetNumber) / INDEX_COLUMNS) * HEIGHT;

            slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(&quot;+1/INDEX_COLUMNS+&quot;) translate(&quot;+offsetX+&quot;,&quot;+offsetY+&quot;)&quot;);
            slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
            slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);
        }

        setSlideToState(counter, STATE_END);
    }

    //do we need to save the current offset?
    if (INDEX_OFFSET != offsetNumber)
        INDEX_OFFSET = offsetNumber;
}

/** Function to set the active slide in the slide view.
 *
 *  @param nbr index of the active slide
 */
function slideSetActiveSlide(nbr)
{
    if (nbr &gt;= slides.length)
        nbr = slides.length - 1;
    else if (nbr &lt; 0)
        nbr = 0;

    slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
    slides[activeSlide][&quot;element&quot;].style.display = &quot;none&quot;;

    activeSlide = parseInt(nbr);

    setSlideToState(activeSlide, STATE_START);
    slides[activeSlide][&quot;element&quot;].style.display = &quot;inherit&quot;;
    slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);

    activeEffect = 0;
    setProgressBarValue(nbr);
}

/** Function to set the active slide in the index view.
 *
 *  @param nbr index of the active slide
 */
function indexSetActiveSlide(nbr)
{
    if (nbr &gt;= slides.length)
        nbr = slides.length - 1;
    else if (nbr &lt; 0)
        nbr = 0;

    slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);

    activeSlide = parseInt(nbr);
    window.location.hash = (activeSlide + 1) + '_0';

    slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
}

/** Function to set the page and active slide in index view.
 *
 *  @param nbr index of the active slide
 *
 *  NOTE: To force a redraw,
 *  set INDEX_OFFSET to -1 before calling indexSetPageSlide().
 *
 *  This is necessary for zooming (otherwise the index might not
 *  get redrawn) and when switching to index mode.
 *
 *  INDEX_OFFSET = -1
 *  indexSetPageSlide(activeSlide);
 */
function indexSetPageSlide(nbr)
{
    if (nbr &gt;= slides.length)
        nbr = slides.length - 1;
    else if (nbr &lt; 0)
        nbr = 0;

    //calculate the offset
    var offset = nbr - nbr % (INDEX_COLUMNS * INDEX_COLUMNS);

    if (offset &lt; 0)
        offset = 0;

    //if different from kept offset, then record and change the page
    if (offset != INDEX_OFFSET)
    {
        INDEX_OFFSET = offset;
        displayIndex(INDEX_OFFSET);
    }

    //set the active slide
    indexSetActiveSlide(nbr);
}

/** Event handler for key press.
 *
 *  @param e the event
 */
function keydown(e)
{
    if (!e)
        e = window.event;

    code = e.keyCode || e.charCode;

    if (!processingEffect &amp;&amp; keyCodeDictionary[currentMode] &amp;&amp; keyCodeDictionary[currentMode][code])
        return keyCodeDictionary[currentMode][code]();
    else
        document.onkeypress = keypress;
}
// Set event handler for key down.
document.onkeydown = keydown;

/** Event handler for key press.
 *
 *  @param e the event
 */
function keypress(e)
{
    document.onkeypress = null;

    if (!e)
        e = window.event;

    str = String.fromCharCode(e.keyCode || e.charCode);

    if (!processingEffect &amp;&amp; charCodeDictionary[currentMode] &amp;&amp; charCodeDictionary[currentMode][str])
        return charCodeDictionary[currentMode][str]();
}

/** Function to supply the default char code dictionary.
 *
 * @returns default char code dictionary
 */
function getDefaultCharCodeDictionary()
{
    var charCodeDict = new Object();

    charCodeDict[SLIDE_MODE] = new Object();
    charCodeDict[INDEX_MODE] = new Object();
    charCodeDict[DRAWING_MODE] = new Object();

    charCodeDict[SLIDE_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
    charCodeDict[SLIDE_MODE][&quot;d&quot;] = function () { return slideSwitchToDrawingMode(); };
    charCodeDict[SLIDE_MODE][&quot;D&quot;] = function () { return slideQueryDuration(); };
    charCodeDict[SLIDE_MODE][&quot;n&quot;] = function () { return slideAddSlide(activeSlide); };
    charCodeDict[SLIDE_MODE][&quot;p&quot;] = function () { return slideToggleProgressBarVisibility(); };
    charCodeDict[SLIDE_MODE][&quot;t&quot;] = function () { return slideResetTimer(); };
    charCodeDict[SLIDE_MODE][&quot;e&quot;] = function () { return slideUpdateExportLayer(); };

    charCodeDict[DRAWING_MODE][&quot;d&quot;] = function () { return drawingSwitchToSlideMode(); };
    charCodeDict[DRAWING_MODE][&quot;0&quot;] = function () { return drawingResetPathWidth(); };
    charCodeDict[DRAWING_MODE][&quot;1&quot;] = function () { return drawingSetPathWidth(1.0); };
    charCodeDict[DRAWING_MODE][&quot;3&quot;] = function () { return drawingSetPathWidth(3.0); };
    charCodeDict[DRAWING_MODE][&quot;5&quot;] = function () { return drawingSetPathWidth(5.0); };
    charCodeDict[DRAWING_MODE][&quot;7&quot;] = function () { return drawingSetPathWidth(7.0); };
    charCodeDict[DRAWING_MODE][&quot;9&quot;] = function () { return drawingSetPathWidth(9.0); };
    charCodeDict[DRAWING_MODE][&quot;b&quot;] = function () { return drawingSetPathColour(&quot;blue&quot;); };
    charCodeDict[DRAWING_MODE][&quot;c&quot;] = function () { return drawingSetPathColour(&quot;cyan&quot;); };
    charCodeDict[DRAWING_MODE][&quot;g&quot;] = function () { return drawingSetPathColour(&quot;green&quot;); };
    charCodeDict[DRAWING_MODE][&quot;k&quot;] = function () { return drawingSetPathColour(&quot;black&quot;); };
    charCodeDict[DRAWING_MODE][&quot;m&quot;] = function () { return drawingSetPathColour(&quot;magenta&quot;); };
    charCodeDict[DRAWING_MODE][&quot;o&quot;] = function () { return drawingSetPathColour(&quot;orange&quot;); };
    charCodeDict[DRAWING_MODE][&quot;r&quot;] = function () { return drawingSetPathColour(&quot;red&quot;); };
    charCodeDict[DRAWING_MODE][&quot;w&quot;] = function () { return drawingSetPathColour(&quot;white&quot;); };
    charCodeDict[DRAWING_MODE][&quot;y&quot;] = function () { return drawingSetPathColour(&quot;yellow&quot;); };
    charCodeDict[DRAWING_MODE][&quot;z&quot;] = function () { return drawingUndo(); };

    charCodeDict[INDEX_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
    charCodeDict[INDEX_MODE][&quot;-&quot;] = function () { return indexDecreaseNumberOfColumns(); };
    charCodeDict[INDEX_MODE][&quot;=&quot;] = function () { return indexIncreaseNumberOfColumns(); };
    charCodeDict[INDEX_MODE][&quot;+&quot;] = function () { return indexIncreaseNumberOfColumns(); };
    charCodeDict[INDEX_MODE][&quot;0&quot;] = function () { return indexResetNumberOfColumns(); };

    return charCodeDict;
}

/** Function to supply the default key code dictionary.
 *
 * @returns default key code dictionary
 */
function getDefaultKeyCodeDictionary()
{
    var keyCodeDict = new Object();

    keyCodeDict[SLIDE_MODE] = new Object();
    keyCodeDict[INDEX_MODE] = new Object();
    keyCodeDict[DRAWING_MODE] = new Object();

    keyCodeDict[SLIDE_MODE][LEFT_KEY] = function() { return dispatchEffects(-1); };
    keyCodeDict[SLIDE_MODE][RIGHT_KEY] = function() { return dispatchEffects(1); };
    keyCodeDict[SLIDE_MODE][UP_KEY] = function() { return skipEffects(-1); };
    keyCodeDict[SLIDE_MODE][DOWN_KEY] = function() { return skipEffects(1); };
    keyCodeDict[SLIDE_MODE][PAGE_UP_KEY] = function() { return dispatchEffects(-1); };
    keyCodeDict[SLIDE_MODE][PAGE_DOWN_KEY] = function() { return dispatchEffects(1); };
    keyCodeDict[SLIDE_MODE][HOME_KEY] = function() { return slideSetActiveSlide(0); };
    keyCodeDict[SLIDE_MODE][END_KEY] = function() { return slideSetActiveSlide(slides.length - 1); };
    keyCodeDict[SLIDE_MODE][SPACE_KEY] = function() { return dispatchEffects(1); };

    keyCodeDict[INDEX_MODE][LEFT_KEY] = function() { return indexSetPageSlide(activeSlide - 1); };
    keyCodeDict[INDEX_MODE][RIGHT_KEY] = function() { return indexSetPageSlide(activeSlide + 1); };
    keyCodeDict[INDEX_MODE][UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS); };
    keyCodeDict[INDEX_MODE][DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS); };
    keyCodeDict[INDEX_MODE][PAGE_UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS); };
    keyCodeDict[INDEX_MODE][PAGE_DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS); };
    keyCodeDict[INDEX_MODE][HOME_KEY] = function() { return indexSetPageSlide(0); };
    keyCodeDict[INDEX_MODE][END_KEY] = function() { return indexSetPageSlide(slides.length - 1); };
    keyCodeDict[INDEX_MODE][ENTER_KEY] = function() { return toggleSlideIndex(); };

    keyCodeDict[DRAWING_MODE][ESCAPE_KEY] = function () { return drawingSwitchToSlideMode(); };

    return keyCodeDict;
}

/** Function to handle all mouse events.
 *
 *    @param    evnt    event
 *    @param    action    type of event (e.g. mouse up, mouse wheel)
 */
function mouseHandlerDispatch(evnt, action)
{
    if (!evnt)
        evnt = window.event;

    var retVal = true;

    if (!processingEffect &amp;&amp; mouseHandlerDictionary[currentMode] &amp;&amp; mouseHandlerDictionary[currentMode][action])
    {
        var subRetVal = mouseHandlerDictionary[currentMode][action](evnt);

        if (subRetVal != null &amp;&amp; subRetVal != undefined)
            retVal = subRetVal;
    }

    if (evnt.preventDefault &amp;&amp; !retVal)
        evnt.preventDefault();

    evnt.returnValue = retVal;

    return retVal;
}

// Set mouse event handler.
document.onmousedown = function(e) { return mouseHandlerDispatch(e, MOUSE_DOWN); };
document.onmouseup = function(e) { return mouseHandlerDispatch(e, MOUSE_UP); };
document.onmousemove = function(e) { return mouseHandlerDispatch(e, MOUSE_MOVE); };

// Moz
if (window.addEventListener)
{
    window.addEventListener('DOMMouseScroll', function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); }, false);
}

// Opera Safari OK - may not work in IE
window.onmousewheel = function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); };

/** Function to supply the default mouse handler dictionary.
 *
 * @returns default mouse handler dictionary
 */
function getDefaultMouseHandlerDictionary()
{
    var mouseHandlerDict = new Object();

    mouseHandlerDict[SLIDE_MODE] = new Object();
    mouseHandlerDict[INDEX_MODE] = new Object();
    mouseHandlerDict[DRAWING_MODE] = new Object();

    mouseHandlerDict[SLIDE_MODE][MOUSE_DOWN] = function(evnt) { return dispatchEffects(1); };
    mouseHandlerDict[SLIDE_MODE][MOUSE_WHEEL] = function(evnt) { return slideMousewheel(evnt); };

    mouseHandlerDict[INDEX_MODE][MOUSE_DOWN] = function(evnt) { return toggleSlideIndex(); };

    mouseHandlerDict[DRAWING_MODE][MOUSE_DOWN] = function(evnt) { return drawingMousedown(evnt); };
    mouseHandlerDict[DRAWING_MODE][MOUSE_UP] = function(evnt) { return drawingMouseup(evnt); };
    mouseHandlerDict[DRAWING_MODE][MOUSE_MOVE] = function(evnt) { return drawingMousemove(evnt); };

    return mouseHandlerDict;
}

/** Function to switch from slide mode to drawing mode.
*/
function slideSwitchToDrawingMode()
{
    currentMode = DRAWING_MODE;

    var tempDict;

    if (ROOT_NODE.hasAttribute(&quot;style&quot;))
        tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
    else
        tempDict = new Object();

    tempDict[&quot;cursor&quot;] = &quot;crosshair&quot;;
    ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to switch from drawing mode to slide mode.
*/
function drawingSwitchToSlideMode()
{
    currentMode = SLIDE_MODE;

    var tempDict;

    if (ROOT_NODE.hasAttribute(&quot;style&quot;))
        tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
    else
        tempDict = new Object();

    tempDict[&quot;cursor&quot;] = &quot;auto&quot;;
    ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to decrease the number of columns in index mode.
*/
function indexDecreaseNumberOfColumns()
{
    if (INDEX_COLUMNS &gt;= 3)
    {
        INDEX_COLUMNS -= 1;
        INDEX_OFFSET = -1
            indexSetPageSlide(activeSlide);
    }
}

/** Function to increase the number of columns in index mode.
*/
function indexIncreaseNumberOfColumns()
{
    if (INDEX_COLUMNS &lt; 7)
    {
        INDEX_COLUMNS += 1;
        INDEX_OFFSET = -1
            indexSetPageSlide(activeSlide);
    }
}

/** Function to reset the number of columns in index mode.
*/
function indexResetNumberOfColumns()
{
    if (INDEX_COLUMNS != INDEX_COLUMNS_DEFAULT)
    {
        INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
        INDEX_OFFSET = -1
            indexSetPageSlide(activeSlide);
    }
}

/** Function to reset path width in drawing mode.
*/
function drawingResetPathWidth()
{
    path_width = path_width_default;
    set_path_paint_width();
}

/** Function to set path width in drawing mode.
 *
 * @param width new path width
 */
function drawingSetPathWidth(width)
{
    path_width = width;
    set_path_paint_width();
}

/** Function to set path colour in drawing mode.
 *
 * @param colour new path colour
 */
function drawingSetPathColour(colour)
{
    path_colour = colour;
}

/** Function to query the duration of the presentation from the user in slide mode.
*/
function slideQueryDuration()
{
    var new_duration = prompt(&quot;Length of presentation in minutes?&quot;, timer_duration);

    if ((new_duration != null) &amp;&amp; (new_duration != ''))
    {
        timer_duration = new_duration;
    }

    updateTimer();
}

/** Function to add new slide in slide mode.
 *
 * @param afterSlide after which slide to insert the new one
 */
function slideAddSlide(afterSlide)
{
    addSlide(afterSlide);
    slideSetActiveSlide(afterSlide + 1);
    updateTimer();
}

/** Function to toggle the visibility of the progress bar in slide mode.
*/
function slideToggleProgressBarVisibility()
{
    if (progress_bar_visible)
    {
        progress_bar_visible = false;
        hideProgressBar();
    }
    else
    {
        progress_bar_visible = true;
        showProgressBar();
    }
}

/** Function to reset the timer in slide mode.
*/
function slideResetTimer()
{
    timer_start = timer_elapsed;
    updateTimer();
}

/** Convenience function to pad a string with zero in front up to a certain length.
 */
function padString(str, len)
{
    var outStr = str;

    while (outStr.length &lt; len)
    {
        outStr = '0' + outStr;
    }

    return outStr;
}

/** Function to update the export layer.
 */
function slideUpdateExportLayer()
{
    // Suspend redraw since we are going to mess with the slides.
    var suspendHandle = ROOT_NODE.suspendRedraw(2000);

    var tmpActiveSlide = activeSlide;
    var tmpActiveEffect = activeEffect;
    var exportedLayers = new Array();

    for (var counterSlides = 0; counterSlides &lt; slides.length; counterSlides++)
    {
        var exportNode;

        setSlideToState(counterSlides, STATE_START);

        var maxEffect = 0;

        if (slides[counterSlides].effects)
        {
            maxEffect = slides[counterSlides].effects.length;
        }

        exportNode = slides[counterSlides].element.cloneNode(true);
        exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
        exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString(&quot;0&quot;, maxEffect.toString().length));

        exportedLayers.push(exportNode);

        if (slides[counterSlides][&quot;effects&quot;])
        {
            for (var counter = 0; counter &lt; slides[counterSlides][&quot;effects&quot;].length; counter++)
            {
                for (var subCounter = 0; subCounter &lt; slides[counterSlides][&quot;effects&quot;][counter].length; subCounter++)
                {
                    var effect = slides[counterSlides][&quot;effects&quot;][counter][subCounter];
                    if (effect[&quot;effect&quot;] == &quot;fade&quot;)
                        fade(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
                        appear(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
                        pop(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;view&quot;)
                        view(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                }

                var layerName = &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString((counter + 1).toString(), maxEffect.toString().length);
                exportNode = slides[counterSlides].element.cloneNode(true);
                exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
                exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, layerName);
                exportNode.setAttribute(&quot;id&quot;, layerName);

                exportedLayers.push(exportNode);
            }
        }
    }

    activeSlide = tmpActiveSlide;
    activeEffect = tmpActiveEffect;
    setSlideToState(activeSlide, activeEffect);

    // Copy image.
    var newDoc = document.documentElement.cloneNode(true);

    // Delete viewbox form new imag and set width and height.
    newDoc.removeAttribute('viewbox');
    newDoc.setAttribute('width', WIDTH);
    newDoc.setAttribute('height', HEIGHT);

    // Delete all layers and script elements.
    var nodesToBeRemoved = new Array();

    for (var childCounter = 0; childCounter &lt;  newDoc.childNodes.length; childCounter++)
    {
        var child = newDoc.childNodes[childCounter];

        if (child.nodeType == 1)
        {
            if ((child.nodeName.toUpperCase() == 'G') || (child.nodeName.toUpperCase() == 'SCRIPT'))
            {
                nodesToBeRemoved.push(child);
            }
        }
    }

    for (var ndCounter = 0; ndCounter &lt; nodesToBeRemoved.length; ndCounter++)
    {
        var nd = nodesToBeRemoved[ndCounter];

        // Before removing the node, check whether it contains any definitions.
        var defs = nd.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

        for (var defsCounter = 0; defsCounter &lt; defs.length; defsCounter++)
        {
            if (defs[defsCounter].id)
            {
                newDoc.appendChild(defs[defsCounter].cloneNode(true));
            }
        }

        // Remove node.
        nd.parentNode.removeChild(nd);
    }

    // Set current layer.
    if (exportedLayers[0])
    {
        var namedView;

        for (var nodeCounter = 0; nodeCounter &lt; newDoc.childNodes.length; nodeCounter++)
        {
            if ((newDoc.childNodes[nodeCounter].nodeType == 1) &amp;&amp; (newDoc.childNodes[nodeCounter].getAttribute('id') == 'base'))
            {
                namedView = newDoc.childNodes[nodeCounter];
            }
        }

        if (namedView)
        {
            namedView.setAttributeNS(NSS['inkscape'], 'current-layer', exportedLayers[0].getAttributeNS(NSS['inkscape'], 'label'));
        }
    }

    // Add exported layers.
    while (exportedLayers.length &gt; 0)
    {
        var nd = exportedLayers.pop();

        nd.setAttribute(&quot;opacity&quot;,1);
        nd.style.display = &quot;inherit&quot;;

        newDoc.appendChild(nd);
    }

    // Serialise the new document.
  window.location = 'data:application/svg+xml;base64;charset=utf-8,' + window.btoa(unescape(encodeURIComponent((new XMLSerializer()).serializeToString(newDoc))));

    // Unsuspend redraw.
    ROOT_NODE.unsuspendRedraw(suspendHandle);
    ROOT_NODE.forceRedraw();
}

/** Function to undo last drawing operation.
*/
function drawingUndo()
{
    mouse_presentation_path = null;
    mouse_original_path = null;

    if (history_presentation_elements.length &gt; 0)
    {
        var p = history_presentation_elements.pop();
        var parent = p.parentNode.removeChild(p);

        p = history_original_elements.pop();
        parent = p.parentNode.removeChild(p);
    }
}

/** Event handler for mouse down in drawing mode.
 *
 *  @param e the event
 */
function drawingMousedown(e)
{
    var value = 0;

    if (e.button)
        value = e.button;
    else if (e.which)
        value = e.which;

    if (value == 1)
    {
        history_counter++;

        var p = calcCoord(e);

        mouse_last_x = e.clientX;
        mouse_last_y = e.clientY;
        mouse_original_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
        mouse_original_path.setAttribute(&quot;stroke&quot;, path_colour);
        mouse_original_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
        mouse_original_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
        mouse_original_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date());
        mouse_original_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);
        slides[activeSlide][&quot;original_element&quot;].appendChild(mouse_original_path);
        history_original_elements.push(mouse_original_path);

        mouse_presentation_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
        mouse_presentation_path.setAttribute(&quot;stroke&quot;, path_colour);
        mouse_presentation_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
        mouse_presentation_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
        mouse_presentation_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date() + &quot; presentation copy&quot;);
        mouse_presentation_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);

        if (slides[activeSlide][&quot;viewGroup&quot;])
            slides[activeSlide][&quot;viewGroup&quot;].appendChild(mouse_presentation_path);
        else
            slides[activeSlide][&quot;element&quot;].appendChild(mouse_presentation_path);

        history_presentation_elements.push(mouse_presentation_path);

        return false;
    }

    return true;
}

/** Event handler for mouse up in drawing mode.
 *
 *  @param e the event
 */
function drawingMouseup(e)
{
    if(!e)
        e = window.event;

    if (mouse_presentation_path != null)
    {
        var p = calcCoord(e);
        var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
        d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
        mouse_presentation_path.setAttribute(&quot;d&quot;, d);
        mouse_presentation_path = null;
        mouse_original_path.setAttribute(&quot;d&quot;, d);
        mouse_original_path = null;

        return false;
    }

    return true;
}

/** Event handler for mouse move in drawing mode.
 *
 *  @param e the event
 */
function drawingMousemove(e)
{
    if(!e)
        e = window.event;

    var dist = (mouse_last_x - e.clientX) * (mouse_last_x - e.clientX) + (mouse_last_y - e.clientY) * (mouse_last_y - e.clientY);

    if (mouse_presentation_path == null)
    {
        return true;
    }

    if (dist &gt;= mouse_min_dist_sqr)
    {
        var p = calcCoord(e);
        var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
        d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
        mouse_presentation_path.setAttribute(&quot;d&quot;, d);
        mouse_original_path.setAttribute(&quot;d&quot;, d);
        mouse_last_x = e.clientX;
        mouse_last_y = e.clientY;
    }

    return false;
}

/** Event handler for mouse wheel events in slide mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function slideMousewheel(e)
{
    var delta = 0;

    if (!e)
        e = window.event;

    if (e.wheelDelta)
    { // IE Opera
        delta = e.wheelDelta/120;
    }
    else if (e.detail)
    { // MOZ
        delta = -e.detail/3;
    }

    if (delta &gt; 0)
        skipEffects(-1);
    else if (delta &lt; 0)
        skipEffects(1);

    if (e.preventDefault)
        e.preventDefault();

    e.returnValue = false;
}

/** Event handler for mouse wheel events in index mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function indexMousewheel(e)
{
    var delta = 0;

    if (!e)
        e = window.event;

    if (e.wheelDelta)
    { // IE Opera
        delta = e.wheelDelta/120;
    }
    else if (e.detail)
    { // MOZ
        delta = -e.detail/3;
    }

    if (delta &gt; 0)
        indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS);
    else if (delta &lt; 0)
        indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS);

    if (e.preventDefault)
        e.preventDefault();

    e.returnValue = false;
}

/** Function to set the path paint width.
*/
function set_path_paint_width()
{
    var svgPoint1 = document.documentElement.createSVGPoint();
    var svgPoint2 = document.documentElement.createSVGPoint();

    svgPoint1.x = 0.0;
    svgPoint1.y = 0.0;
    svgPoint2.x = 1.0;
    svgPoint2.y = 0.0;

    var matrix = slides[activeSlide][&quot;element&quot;].getTransformToElement(ROOT_NODE);

    if (slides[activeSlide][&quot;viewGroup&quot;])
        matrix = slides[activeSlide][&quot;viewGroup&quot;].getTransformToElement(ROOT_NODE);

    svgPoint1 = svgPoint1.matrixTransform(matrix);
    svgPoint2 = svgPoint2.matrixTransform(matrix);

    path_paint_width = path_width / Math.sqrt((svgPoint2.x - svgPoint1.x) * (svgPoint2.x - svgPoint1.x) + (svgPoint2.y - svgPoint1.y) * (svgPoint2.y - svgPoint1.y));
}

/** The view effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect); for the view effect the options need to contain the old and the new matrix.
 */
function view(dir, element, time, options)
{
    var length = 250;
    var fraction;

    if (!options[&quot;matrixInitial&quot;])
    {
        var tempString = slides[activeSlide][&quot;viewGroup&quot;].getAttribute(&quot;transform&quot;);

        if (tempString)
            options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromAttribute(tempString);
        else
            options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromSVGElements(1, 0, 0, 1, 0, 0);
    }

    if ((time == STATE_END) || (time == STATE_START))
        fraction = 1;
    else
    {
        if (options &amp;&amp; options[&quot;length&quot;])
            length = options[&quot;length&quot;];

        fraction = time / length;
    }

    if (dir == 1)
    {
        if (fraction &lt;= 0)
        {
            element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
        }
        else if (fraction &gt;= 1)
        {
            element.setAttribute(&quot;transform&quot;, options[&quot;matrixNew&quot;].toAttribute());

            set_path_paint_width();

            options[&quot;matrixInitial&quot;] = null;
            return true;
        }
        else
        {
            element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixNew&quot;], fraction).toAttribute());
        }
    }
    else if (dir == -1)
    {
        if (fraction &lt;= 0)
        {
            element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
        }
        else if (fraction &gt;= 1)
        {
            element.setAttribute(&quot;transform&quot;, options[&quot;matrixOld&quot;].toAttribute());
            set_path_paint_width();

            options[&quot;matrixInitial&quot;] = null;
            return true;
        }
        else
        {
            element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixOld&quot;], fraction).toAttribute());
        }
    }

    return false;
}

/** The fade effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function fade(dir, element, time, options)
{
    var length = 250;
    var fraction;

    if ((time == STATE_END) || (time == STATE_START))
        fraction = 1;
    else
    {
        if (options &amp;&amp; options[&quot;length&quot;])
            length = options[&quot;length&quot;];

        fraction = time / length;
    }

    if (dir == 1)
    {
        if (fraction &lt;= 0)
        {
            element.style.display = &quot;none&quot;;
            element.setAttribute(&quot;opacity&quot;, 0);
        }
        else if (fraction &gt;= 1)
        {
            element.style.display = &quot;inherit&quot;;
            element.setAttribute(&quot;opacity&quot;, 1);
            return true;
        }
        else
        {
            element.style.display = &quot;inherit&quot;;
            element.setAttribute(&quot;opacity&quot;, fraction);
        }
    }
    else if (dir == -1)
    {
        if (fraction &lt;= 0)
        {
            element.style.display = &quot;inherit&quot;;
            element.setAttribute(&quot;opacity&quot;, 1);
        }
        else if (fraction &gt;= 1)
        {
            element.setAttribute(&quot;opacity&quot;, 0);
            element.style.display = &quot;none&quot;;
            return true;
        }
        else
        {
            element.style.display = &quot;inherit&quot;;
            element.setAttribute(&quot;opacity&quot;, 1 - fraction);
        }
    }
    return false;
}

/** The appear effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function appear(dir, element, time, options)
{
    if (dir == 1)
    {
        element.style.display = &quot;inherit&quot;;
        element.setAttribute(&quot;opacity&quot;,1);
    }
    else if (dir == -1)
    {
        element.style.display = &quot;none&quot;;
        element.setAttribute(&quot;opacity&quot;,0);
    }
    return true;
}

/** The pop effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function pop(dir, element, time, options)
{
    var length = 500;
    var fraction;

    if ((time == STATE_END) || (time == STATE_START))
        fraction = 1;
    else
    {
        if (options &amp;&amp; options[&quot;length&quot;])
            length = options[&quot;length&quot;];

        fraction = time / length;
    }

    if (dir == 1)
    {
        if (fraction &lt;= 0)
        {
            element.setAttribute(&quot;opacity&quot;, 0);
            element.setAttribute(&quot;transform&quot;, &quot;scale(0)&quot;);
            element.style.display = &quot;none&quot;;
        }
        else if (fraction &gt;= 1)
        {
            element.setAttribute(&quot;opacity&quot;, 1);
            element.removeAttribute(&quot;transform&quot;);
            element.style.display = &quot;inherit&quot;;
            return true;
        }
        else
        {
            element.style.display = &quot;inherit&quot;;
            var opacityFraction = fraction * 3;
            if (opacityFraction &gt; 1)
                opacityFraction = 1;
            element.setAttribute(&quot;opacity&quot;, opacityFraction);
            var offsetX = WIDTH * (1.0 - fraction) / 2.0;
            var offsetY = HEIGHT * (1.0 - fraction) / 2.0;
            element.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + offsetX + &quot;,&quot; + offsetY + &quot;) scale(&quot; + fraction + &quot;)&quot;);
        }
    }
    else if (dir == -1)
    {
        if (fraction &lt;= 0)
        {
            element.setAttribute(&quot;opacity&quot;, 1);
            element.setAttribute(&quot;transform&quot;, &quot;scale(1)&quot;);
            element.style.display = &quot;inherit&quot;;
        }
        else if (fraction &gt;= 1)
        {
            element.setAttribute(&quot;opacity&quot;, 0);
            element.removeAttribute(&quot;transform&quot;);
            element.style.display = &quot;none&quot;;
            return true;
        }
        else
        {
            element.setAttribute(&quot;opacity&quot;, 1 - fraction);
            element.setAttribute(&quot;transform&quot;, &quot;scale(&quot; + 1 - fraction + &quot;)&quot;);
            element.style.display = &quot;inherit&quot;;
        }
    }
    return false;
}

/** Function to set a slide either to the start or the end state.
 *
 *  @param slide the slide to use
 *  @param state the state into which the slide should be set
 */
function setSlideToState(slide, state)
{
    slides[slide][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, slides[slide].initialView);

    if (slides[slide][&quot;effects&quot;])
    {
        if (state == STATE_END)
        {
            for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length; counter++)
            {
                for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
                {
                    var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
                    if (effect[&quot;effect&quot;] == &quot;fade&quot;)
                        fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
                        appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
                        pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;view&quot;)
                        view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                }
            }
        }
        else if (state == STATE_START)
        {
            for (var counter = slides[slide][&quot;effects&quot;].length - 1; counter &gt;= 0; counter--)
            {
                for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
                {
                    var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
                    if (effect[&quot;effect&quot;] == &quot;fade&quot;)
                        fade(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
                        appear(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
                        pop(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;view&quot;)
                        view(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);
                }
            }
        }
        else
        {
            setSlideToState(slide, STATE_START);

            for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length &amp;&amp; counter &lt; state; counter++)
            {
                for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
                {
                    var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
                    if (effect[&quot;effect&quot;] == &quot;fade&quot;)
                        fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
                        appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
                        pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                    else if (effect[&quot;effect&quot;] == &quot;view&quot;)
                        view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);
                }
            }
        }
    }

    window.location.hash = (activeSlide + 1) + '_' + activeEffect;
}

/** Convenience function to translate a attribute string into a dictionary.
 *
 *    @param str the attribute string
 *  @return a dictionary
 *  @see dictToPropStr
 */
function propStrToDict(str)
{
    var list = str.split(&quot;;&quot;);
    var obj = new Object();

    for (var counter = 0; counter &lt; list.length; counter++)
    {
        var subStr = list[counter];
        var subList = subStr.split(&quot;:&quot;);
        if (subList.length == 2)
        {
            obj[subList[0]] = subList[1];
        }
    }

    return obj;
}

/** Convenience function to translate a dictionary into a string that can be used as an attribute.
 *
 *  @param dict the dictionary to convert
 *  @return a string that can be used as an attribute
 *  @see propStrToDict
 */
function dictToPropStr(dict)
{
    var str = &quot;&quot;;

    for (var key in dict)
    {
        str += key + &quot;:&quot; + dict[key] + &quot;;&quot;;
    }

    return str;
}

/** Sub-function to add a suffix to the ids of the node and all its children.
 *
 *    @param node the node to change
 *    @param suffix the suffix to add
 *    @param replace dictionary of replaced ids
 *  @see suffixNodeIds
 */
function suffixNoneIds_sub(node, suffix, replace)
{
    if (node.nodeType == 1)
    {
        if (node.getAttribute(&quot;id&quot;))
        {
            var id = node.getAttribute(&quot;id&quot;)
                replace[&quot;#&quot; + id] = id + suffix;
            node.setAttribute(&quot;id&quot;, id + suffix);
        }

        if ((node.nodeName == &quot;use&quot;) &amp;&amp; (node.getAttributeNS(NSS[&quot;xlink&quot;], &quot;href&quot;)) &amp;&amp; (replace[node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;)]))
            node.setAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;, node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;) + suffix);

        if (node.childNodes)
        {
            for (var counter = 0; counter &lt; node.childNodes.length; counter++)
                suffixNoneIds_sub(node.childNodes[counter], suffix, replace);
        }
    }
}

/** Function to add a suffix to the ids of the node and all its children.
 *
 *    @param node the node to change
 *    @param suffix the suffix to add
 *  @return the changed node
 *  @see suffixNodeIds_sub
 */
function suffixNodeIds(node, suffix)
{
    var replace = new Object();

    suffixNoneIds_sub(node, suffix, replace);

    return node;
}

/** Function to build a progress bar.
 *
 *  @param parent node to attach the progress bar to
 */
function createProgressBar(parent_node)
{
    var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
    g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
    g.setAttribute(&quot;id&quot;, &quot;layer_progress_bar&quot;);
    g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

    var rect_progress_bar = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
    rect_progress_bar.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(128, 128, 128); stroke: none;&quot;);
    rect_progress_bar.setAttribute(&quot;id&quot;, &quot;rect_progress_bar&quot;);
    rect_progress_bar.setAttribute(&quot;x&quot;, 0);
    rect_progress_bar.setAttribute(&quot;y&quot;, 0.99 * HEIGHT);
    rect_progress_bar.setAttribute(&quot;width&quot;, 0);
    rect_progress_bar.setAttribute(&quot;height&quot;, 0.01 * HEIGHT);
    g.appendChild(rect_progress_bar);

    var circle_timer_indicator = document.createElementNS(NSS[&quot;svg&quot;], &quot;circle&quot;);
    circle_timer_indicator.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(255, 0, 0); stroke: none;&quot;);
    circle_timer_indicator.setAttribute(&quot;id&quot;, &quot;circle_timer_indicator&quot;);
    circle_timer_indicator.setAttribute(&quot;cx&quot;, 0.005 * HEIGHT);
    circle_timer_indicator.setAttribute(&quot;cy&quot;, 0.995 * HEIGHT);
    circle_timer_indicator.setAttribute(&quot;r&quot;, 0.005 * HEIGHT);
    g.appendChild(circle_timer_indicator);

    parent_node.appendChild(g);
}

/** Function to hide the progress bar.
 *
 */
function hideProgressBar()
{
    var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

    if (!progress_bar)
    {
        return;
    }

    progress_bar.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
}

/** Function to show the progress bar.
 *
 */
function showProgressBar()
{
    var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

    if (!progress_bar)
    {
        return;
    }

    progress_bar.setAttribute(&quot;style&quot;, &quot;display: inherit;&quot;);
}

/** Set progress bar value.
 *
 *    @param value the current slide number
 *
 */
function setProgressBarValue(value)
{
    var rect_progress_bar = document.getElementById(&quot;rect_progress_bar&quot;);

    if (!rect_progress_bar)
    {
        return;
    }

    if (value &lt; 1)
    {
        // First slide, assumed to be the title of the presentation
        var x = 0;
        var w = 0.01 * HEIGHT;
    }
    else if (value &gt;= slides.length - 1)
    {
        // Last slide, assumed to be the end of the presentation
        var x = WIDTH - 0.01 * HEIGHT;
        var w = 0.01 * HEIGHT;
    }
    else
    {
        value -= 1;
        value /= (slides.length - 2);

        var x = WIDTH * value;
        var w = WIDTH / (slides.length - 2);
    }

    rect_progress_bar.setAttribute(&quot;x&quot;, x);
    rect_progress_bar.setAttribute(&quot;width&quot;, w);
}

/** Set time indicator.
 *
 *    @param value the percentage of time elapse so far between 0.0 and 1.0
 *
 */
function setTimeIndicatorValue(value)
{
    var circle_timer_indicator = document.getElementById(&quot;circle_timer_indicator&quot;);

    if (!circle_timer_indicator)
    {
        return;
    }

    if (value &lt; 0.0)
    {
        value = 0.0;
    }

    if (value &gt; 1.0)
    {
        value = 1.0;
    }

    var cx = (WIDTH - 0.01 * HEIGHT) * value + 0.005 * HEIGHT;
    circle_timer_indicator.setAttribute(&quot;cx&quot;, cx);
}

/** Update timer.
 *
 */
function updateTimer()
{
    timer_elapsed += 1;
    setTimeIndicatorValue((timer_elapsed - timer_start) / (60 * timer_duration));
}

/** Convert screen coordinates to document coordinates.
 *
 *  @param e event with screen coordinates
 *
 *  @return coordinates in SVG file coordinate system
 */
function calcCoord(e)
{
    var svgPoint = document.documentElement.createSVGPoint();
    svgPoint.x = e.clientX + window.pageXOffset;
    svgPoint.y = e.clientY + window.pageYOffset;

    var matrix = slides[activeSlide][&quot;element&quot;].getScreenCTM();

    if (slides[activeSlide][&quot;viewGroup&quot;])
        matrix = slides[activeSlide][&quot;viewGroup&quot;].getScreenCTM();

    svgPoint = svgPoint.matrixTransform(matrix.inverse());
    return svgPoint;
}

/** Add slide.
 *
 *    @param after_slide after which slide the new slide should be inserted into the presentation
 */
function addSlide(after_slide)
{
    number_of_added_slides++;

    var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
    g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
    g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date() + &quot; presentation copy&quot;);
    g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

    var new_slide = new Object();
    new_slide[&quot;element&quot;] = g;

    // Set build in transition.
    new_slide[&quot;transitionIn&quot;] = new Object();
    var dict = defaultTransitionInDict;
    new_slide[&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
    new_slide[&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

    for (key in dict)
        if (key != &quot;name&quot;)
            new_slide[&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

    // Set build out transition.
    new_slide[&quot;transitionOut&quot;] = new Object();
    dict = defaultTransitionOutDict;
    new_slide[&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
    new_slide[&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

    for (key in dict)
        if (key != &quot;name&quot;)
            new_slide[&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

    // Copy master slide content.
    if (masterSlide)
    {
        var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + Date() + &quot; presentation_copy&quot;);
        clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
        clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
        clonedNode.style.display = &quot;inherit&quot;;

        g.appendChild(clonedNode);
    }

    // Substitute auto texts.
    substituteAutoTexts(g, &quot;Whiteboard &quot; + number_of_added_slides, &quot;W&quot; + number_of_added_slides, slides.length);

    g.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + (after_slide + 1) + &quot;)) { indexSetActiveSlide(&quot; + (after_slide + 1) + &quot;); };&quot;);

    // Create a transform group.
    var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

    // Add content to transform group.
    while (g.firstChild)
        transformGroup.appendChild(g.firstChild);

    // Transfer the transform attribute from the node to the transform group.
    if (g.getAttribute(&quot;transform&quot;))
    {
        transformGroup.setAttribute(&quot;transform&quot;, g.getAttribute(&quot;transform&quot;));
        g.removeAttribute(&quot;transform&quot;);
    }

    // Create a view group.
    var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

    viewGroup.appendChild(transformGroup);
    new_slide[&quot;viewGroup&quot;] = g.appendChild(viewGroup);

    // Insert background.
    if (BACKGROUND_COLOR != null)
    {
        var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

        rectNode.setAttribute(&quot;x&quot;, 0);
        rectNode.setAttribute(&quot;y&quot;, 0);
        rectNode.setAttribute(&quot;width&quot;, WIDTH);
        rectNode.setAttribute(&quot;height&quot;, HEIGHT);
        rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + Date());
        rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

        new_slide[&quot;viewGroup&quot;].insertBefore(rectNode, new_slide[&quot;viewGroup&quot;].firstChild);
    }

    // Set initial view even if there are no other views.
    var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

    new_slide[&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
    new_slide.initialView = matrixOld.toAttribute();

    // Insert slide
    var node = slides[after_slide][&quot;element&quot;];
    var next_node = node.nextSibling;
    var parent_node = node.parentNode;

    if (next_node)
    {
        parent_node.insertBefore(g, next_node);
    }
    else
    {
        parent_node.appendChild(g);
    }

    g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
    g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
    g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;Whiteboard &quot; + number_of_added_slides);
    g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
    g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date());
    g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

    new_slide[&quot;original_element&quot;] = g;

    node = slides[after_slide][&quot;original_element&quot;];
    next_node = node.nextSibling;
    parent_node = node.parentNode;

    if (next_node)
    {
        parent_node.insertBefore(g, next_node);
    }
    else
    {
        parent_node.appendChild(g);
    }

    before_new_slide = slides.slice(0, after_slide + 1);
    after_new_slide = slides.slice(after_slide + 1);
    slides = before_new_slide.concat(new_slide, after_new_slide);

    //resetting the counter attributes on the slides that follow the new slide...
    for (var counter = after_slide+2; counter &lt; slides.length; counter++)
    {
        slides[counter][&quot;element&quot;].setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);
    }
}

/** Convenience function to obtain a transformation matrix from a point matrix.
 *
 *    @param mPoints Point matrix.
 *    @return A transformation matrix.
 */
function pointMatrixToTransformation(mPoints)
{
    mPointsOld = (new matrixSVG()).fromElements(0, WIDTH, WIDTH, 0, 0, HEIGHT, 1, 1, 1);

    return mPointsOld.mult(mPoints.inv());
}

/** Convenience function to obtain a matrix with three corners of a rectangle.
 *
 *    @param rect an svg rectangle
 *    @return a matrixSVG containing three corners of the rectangle
 */
function rectToMatrix(rect)
{
    rectWidth = rect.getBBox().width;
    rectHeight = rect.getBBox().height;
    rectX = rect.getBBox().x;
    rectY = rect.getBBox().y;
    rectXcorr = 0;
    rectYcorr = 0;

    scaleX = WIDTH / rectWidth;
    scaleY = HEIGHT / rectHeight;

    if (scaleX &gt; scaleY)
    {
        scaleX = scaleY;
        rectXcorr -= (WIDTH / scaleX - rectWidth) / 2;
        rectWidth = WIDTH / scaleX;
    }
    else
    {
        scaleY = scaleX;
        rectYcorr -= (HEIGHT / scaleY - rectHeight) / 2;
        rectHeight = HEIGHT / scaleY;
    }

    if (rect.transform.baseVal.numberOfItems &lt; 1)
    {
        mRectTrans = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);
    }
    else
    {
        mRectTrans = (new matrixSVG()).fromSVGMatrix(rect.transform.baseVal.consolidate().matrix);
    }

    newBasePoints = (new matrixSVG()).fromElements(rectX, rectX, rectX, rectY, rectY, rectY, 1, 1, 1);
    newVectors = (new matrixSVG()).fromElements(rectXcorr, rectXcorr + rectWidth, rectXcorr + rectWidth, rectYcorr, rectYcorr, rectYcorr + rectHeight, 0, 0, 0);

    return mRectTrans.mult(newBasePoints.add(newVectors));
}

/** Function to handle JessyInk elements.
 *
 *    @param    node    Element node.
 */
function handleElement(node)
{
    if (node.getAttributeNS(NSS['jessyink'], 'element') == 'core.video')
    {
        var url;
        var width;
        var height;
        var x;
        var y;
        var transform;

        var tspans = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;tspan&quot;);

        for (var tspanCounter = 0; tspanCounter &lt; tspans.length; tspanCounter++)
        {
            if (tspans[tspanCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;url&quot;)
            {
                url = tspans[tspanCounter].firstChild.nodeValue;
            }
        }

        var rects = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;rect&quot;);

        for (var rectCounter = 0; rectCounter &lt; rects.length; rectCounter++)
        {
            if (rects[rectCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;rect&quot;)
            {
                x = rects[rectCounter].getAttribute(&quot;x&quot;);
                y = rects[rectCounter].getAttribute(&quot;y&quot;);
                width = rects[rectCounter].getAttribute(&quot;width&quot;);
                height = rects[rectCounter].getAttribute(&quot;height&quot;);
                transform = rects[rectCounter].getAttribute(&quot;transform&quot;);
            }
        }

        for (var childCounter = 0; childCounter &lt; node.childNodes.length; childCounter++)
        {
            if (node.childNodes[childCounter].nodeType == 1)
            {
                if (node.childNodes[childCounter].style)
                {
                    node.childNodes[childCounter].style.display = 'none';
                }
                else
                {
                    node.childNodes[childCounter].setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
                }
            }
        }

        var foreignNode = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;foreignObject&quot;);
        foreignNode.setAttribute(&quot;x&quot;, x);
        foreignNode.setAttribute(&quot;y&quot;, y);
        foreignNode.setAttribute(&quot;width&quot;, width);
        foreignNode.setAttribute(&quot;height&quot;, height);
        foreignNode.setAttribute(&quot;transform&quot;, transform);

        var videoNode = document.createElementNS(&quot;http://www.w3.org/1999/xhtml&quot;, &quot;video&quot;);
        videoNode.setAttribute(&quot;src&quot;, url);

        foreignNode.appendChild(videoNode);
        node.appendChild(foreignNode);
    }
}

/** Class processing the location hash.
 *
 *    @param str location hash
 */
function LocationHash(str)
{
    this.slideNumber = 0;
    this.effectNumber = 0;

    str = str.substr(1, str.length - 1);

    var parts = str.split('_');

    // Try to extract slide number.
    if (parts.length &gt;= 1)
    {
        try
        {
            var slideNumber = parseInt(parts[0]);

            if (!isNaN(slideNumber))
            {
                this.slideNumber = slideNumber - 1;
            }
        }
        catch (e)
        {
        }
    }

    // Try to extract effect number.
    if (parts.length &gt;= 2)
    {
        try
        {
            var effectNumber = parseInt(parts[1]);

            if (!isNaN(effectNumber))
            {
                this.effectNumber = effectNumber;
            }
        }
        catch (e)
        {
        }
    }
}

/** Class representing an svg matrix.
*/
function matrixSVG()
{
    this.e11 = 0; // a
    this.e12 = 0; // c
    this.e13 = 0; // e
    this.e21 = 0; // b
    this.e22 = 0; // d
    this.e23 = 0; // f
    this.e31 = 0;
    this.e32 = 0;
    this.e33 = 0;
}

/** Constructor function.
 *
 *    @param a element a (i.e. 1, 1) as described in the svg standard.
 *    @param b element b (i.e. 2, 1) as described in the svg standard.
 *    @param c element c (i.e. 1, 2) as described in the svg standard.
 *    @param d element d (i.e. 2, 2) as described in the svg standard.
 *    @param e element e (i.e. 1, 3) as described in the svg standard.
 *    @param f element f (i.e. 2, 3) as described in the svg standard.
 */
matrixSVG.prototype.fromSVGElements = function(a, b, c, d, e, f)
{
    this.e11 = a;
    this.e12 = c;
    this.e13 = e;
    this.e21 = b;
    this.e22 = d;
    this.e23 = f;
    this.e31 = 0;
    this.e32 = 0;
    this.e33 = 1;

    return this;
}

/** Constructor function.
 *
 *    @param matrix an svg matrix as described in the svg standard.
 */
matrixSVG.prototype.fromSVGMatrix = function(m)
{
    this.e11 = m.a;
    this.e12 = m.c;
    this.e13 = m.e;
    this.e21 = m.b;
    this.e22 = m.d;
    this.e23 = m.f;
    this.e31 = 0;
    this.e32 = 0;
    this.e33 = 1;

    return this;
}

/** Constructor function.
 *
 *    @param e11 element 1, 1 of the matrix.
 *    @param e12 element 1, 2 of the matrix.
 *    @param e13 element 1, 3 of the matrix.
 *    @param e21 element 2, 1 of the matrix.
 *    @param e22 element 2, 2 of the matrix.
 *    @param e23 element 2, 3 of the matrix.
 *    @param e31 element 3, 1 of the matrix.
 *    @param e32 element 3, 2 of the matrix.
 *    @param e33 element 3, 3 of the matrix.
 */
matrixSVG.prototype.fromElements = function(e11, e12, e13, e21, e22, e23, e31, e32, e33)
{
    this.e11 = e11;
    this.e12 = e12;
    this.e13 = e13;
    this.e21 = e21;
    this.e22 = e22;
    this.e23 = e23;
    this.e31 = e31;
    this.e32 = e32;
    this.e33 = e33;

    return this;
}

/** Constructor function.
 *
 *    @param attrString string value of the &quot;transform&quot; attribute (currently only &quot;matrix&quot; is accepted)
 */
matrixSVG.prototype.fromAttribute = function(attrString)
{
    str = attrString.substr(7, attrString.length - 8);

    str = str.trim();

    strArray = str.split(&quot;,&quot;);

    // Opera does not use commas to separate the values of the matrix, only spaces.
    if (strArray.length != 6)
        strArray = str.split(&quot; &quot;);

    this.e11 = parseFloat(strArray[0]);
    this.e21 = parseFloat(strArray[1]);
    this.e31 = 0;
    this.e12 = parseFloat(strArray[2]);
    this.e22 = parseFloat(strArray[3]);
    this.e32 = 0;
    this.e13 = parseFloat(strArray[4]);
    this.e23 = parseFloat(strArray[5]);
    this.e33 = 1;

    return this;
}

/** Output function
 *
 *    @return a string that can be used as the &quot;transform&quot; attribute.
 */
matrixSVG.prototype.toAttribute = function()
{
    return &quot;matrix(&quot; + this.e11 + &quot;, &quot; + this.e21 + &quot;, &quot; + this.e12 + &quot;, &quot; + this.e22 + &quot;, &quot; + this.e13 + &quot;, &quot; + this.e23 + &quot;)&quot;;
}

/** Matrix nversion.
 *
 *    @return the inverse of the matrix
 */
matrixSVG.prototype.inv = function()
{
    out = new matrixSVG();

    det = this.e11 * (this.e33 * this.e22 - this.e32 * this.e23) - this.e21 * (this.e33 * this.e12 - this.e32 * this.e13) + this.e31 * (this.e23 * this.e12 - this.e22 * this.e13);

    out.e11 =  (this.e33 * this.e22 - this.e32 * this.e23) / det;
    out.e12 = -(this.e33 * this.e12 - this.e32 * this.e13) / det;
    out.e13 =  (this.e23 * this.e12 - this.e22 * this.e13) / det;
    out.e21 = -(this.e33 * this.e21 - this.e31 * this.e23) / det;
    out.e22 =  (this.e33 * this.e11 - this.e31 * this.e13) / det;
    out.e23 = -(this.e23 * this.e11 - this.e21 * this.e13) / det;
    out.e31 =  (this.e32 * this.e21 - this.e31 * this.e22) / det;
    out.e32 = -(this.e32 * this.e11 - this.e31 * this.e12) / det;
    out.e33 =  (this.e22 * this.e11 - this.e21 * this.e12) / det;

    return out;
}

/** Matrix multiplication.
 *
 *    @param op another svg matrix
 *    @return this * op
 */
matrixSVG.prototype.mult = function(op)
{
    out = new matrixSVG();

    out.e11 = this.e11 * op.e11 + this.e12 * op.e21 + this.e13 * op.e31;
    out.e12 = this.e11 * op.e12 + this.e12 * op.e22 + this.e13 * op.e32;
    out.e13 = this.e11 * op.e13 + this.e12 * op.e23 + this.e13 * op.e33;
    out.e21 = this.e21 * op.e11 + this.e22 * op.e21 + this.e23 * op.e31;
    out.e22 = this.e21 * op.e12 + this.e22 * op.e22 + this.e23 * op.e32;
    out.e23 = this.e21 * op.e13 + this.e22 * op.e23 + this.e23 * op.e33;
    out.e31 = this.e31 * op.e11 + this.e32 * op.e21 + this.e33 * op.e31;
    out.e32 = this.e31 * op.e12 + this.e32 * op.e22 + this.e33 * op.e32;
    out.e33 = this.e31 * op.e13 + this.e32 * op.e23 + this.e33 * op.e33;

    return out;
}

/** Matrix addition.
 *
 *    @param op another svg matrix
 *    @return this + op
 */
matrixSVG.prototype.add = function(op)
{
    out = new matrixSVG();

    out.e11 = this.e11 + op.e11;
    out.e12 = this.e12 + op.e12;
    out.e13 = this.e13 + op.e13;
    out.e21 = this.e21 + op.e21;
    out.e22 = this.e22 + op.e22;
    out.e23 = this.e23 + op.e23;
    out.e31 = this.e31 + op.e31;
    out.e32 = this.e32 + op.e32;
    out.e33 = this.e33 + op.e33;

    return out;
}

/** Matrix mixing.
 *
 *    @param op another svg matrix
 *    @parma contribOp contribution of the other matrix (0 &lt;= contribOp &lt;= 1)
 *    @return (1 - contribOp) * this + contribOp * op
 */
matrixSVG.prototype.mix = function(op, contribOp)
{
    contribThis = 1.0 - contribOp;
    out = new matrixSVG();

    out.e11 = contribThis * this.e11 + contribOp * op.e11;
    out.e12 = contribThis * this.e12 + contribOp * op.e12;
    out.e13 = contribThis * this.e13 + contribOp * op.e13;
    out.e21 = contribThis * this.e21 + contribOp * op.e21;
    out.e22 = contribThis * this.e22 + contribOp * op.e22;
    out.e23 = contribThis * this.e23 + contribOp * op.e23;
    out.e31 = contribThis * this.e31 + contribOp * op.e31;
    out.e32 = contribThis * this.e32 + contribOp * op.e32;
    out.e33 = contribThis * this.e33 + contribOp * op.e33;

    return out;
}

/** Trimming function for strings.
*/
String.prototype.trim = function()
{
    return this.replace(/^\s+|\s+$/g, '');
}

/** SVGElement.getTransformToElement polyfill */
SVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(elem) {
    return elem.getScreenCTM().inverse().multiply(this.getScreenCTM());
};
</script>
</svg>
